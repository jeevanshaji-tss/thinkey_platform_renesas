!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
ANA_COMP_REG	NSC/ptxNSC_Registers.h	/^#define ANA_COMP_REG /;"	d
ANA_COMP_REG_TSENSE_COMP_EN_MASK	NSC/ptxNSC_Registers.h	/^#define ANA_COMP_REG_TSENSE_COMP_EN_MASK /;"	d
ANA_COMP_REG_TSENSE_EN_MASK	NSC/ptxNSC_Registers.h	/^#define ANA_COMP_REG_TSENSE_EN_MASK /;"	d
ANA_RX_AUX_DAC_REG	NSC/ptxNSC_Registers.h	/^#define ANA_RX_AUX_DAC_REG /;"	d
ANA_STATUS0_REG	NSC/ptxNSC_Registers.h	/^#define ANA_STATUS0_REG /;"	d
ANA_STATUS0_REG_TEMPSENS_COMP_OUT_MASK	NSC/ptxNSC_Registers.h	/^#define ANA_STATUS0_REG_TEMPSENS_COMP_OUT_MASK /;"	d
ANA_TX_CONTROL_REG	NSC/ptxNSC_Registers.h	/^#define ANA_TX_CONTROL_REG /;"	d
APIS_IOT_READER_PTX_IOT_READER_H_	IOT_READER/ptx_IOT_READER.h	/^#define APIS_IOT_READER_PTX_IOT_READER_H_$/;"	d
APIS_PTX_COMMON_H_	COMMON/ptxCOMMON.h	/^#define APIS_PTX_COMMON_H_$/;"	d
APIS_PTX_FELICA_DTE_H_	FELICA_DTE/ptxFeliCa_DTE.h	/^#define APIS_PTX_FELICA_DTE_H_$/;"	d
APIS_PTX_GPIO_H_	GPIO/ptxGPIO.h	/^#define APIS_PTX_GPIO_H_$/;"	d
APIS_PTX_IOTRD_COMMON_H_	COMMON/ptxIoTRd_COMMON.h	/^#define APIS_PTX_IOTRD_COMMON_H_$/;"	d
APIS_PTX_NATIVE_TAG_T2T_H_	NATIVE_TAG/ptxNativeTag_T2T.h	/^#define APIS_PTX_NATIVE_TAG_T2T_H_$/;"	d
APIS_PTX_NATIVE_TAG_T3T_H_	NATIVE_TAG/ptxNativeTag_T3T.h	/^#define APIS_PTX_NATIVE_TAG_T3T_H_$/;"	d
APIS_PTX_NATIVE_TAG_T4T_H_	NATIVE_TAG/ptxNativeTag_T4T.h	/^#define APIS_PTX_NATIVE_TAG_T4T_H_$/;"	d
APIS_PTX_NATIVE_TAG_T5T_H_	NATIVE_TAG/ptxNativeTag_T5T.h	/^#define APIS_PTX_NATIVE_TAG_T5T_H_$/;"	d
APIS_PTX_NDEF_H_	NDEF/ptxNDEF.h	/^#define APIS_PTX_NDEF_H_$/;"	d
APIS_PTX_NDEF_OP_T2T_H_	NDEF/ptxNDEF_T2TOP.h	/^#define APIS_PTX_NDEF_OP_T2T_H_$/;"	d
APIS_PTX_NDEF_OP_T3T_H_	NDEF/ptxNDEF_T3TOP.h	/^#define APIS_PTX_NDEF_OP_T3T_H_$/;"	d
APIS_PTX_NDEF_OP_T4T_H_	NDEF/ptxNDEF_T4TOP.h	/^#define APIS_PTX_NDEF_OP_T4T_H_$/;"	d
APIS_PTX_NDEF_OP_T5T_H_	NDEF/ptxNDEF_T5TOP.h	/^#define APIS_PTX_NDEF_OP_T5T_H_$/;"	d
APIS_PTX_RF_TEST_H_	RF_TEST/ptxRF_Test.h	/^#define APIS_PTX_RF_TEST_H_$/;"	d
APIS_PTX_T5T_NDEF_DEFINES_H_	NDEF/ptxNDEF_Defines.h	/^#define APIS_PTX_T5T_NDEF_DEFINES_H_$/;"	d
AProprRes	NSC/ptxNSC.h	/^    uint8_t                     AProprRes[PTX_NSC_MAXIMUM_A_PROPR_RES_LEN];         \/**< Type A/;"	m	struct:ptxNSC_RfActTech_APropr_Param	typeref:typename:uint8_t[]
AProprResLen	NSC/ptxNSC.h	/^    uint8_t                     AProprResLen;                                       \/**< Type A/;"	m	struct:ptxNSC_RfActTech_APropr_Param	typeref:typename:uint8_t
Access	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         Access;                         \/**< Access contains read a/;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint8_t
ActivationData	HCE/ptxHce.h	/^    uint8_t                 ActivationData[e_SizeOfActivationBuffer];   \/**< Activation Data *\/$/;"	m	struct:ptxHce	typeref:typename:uint8_t[]
ActiveCard	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_CardParams_t       *ActiveCard;                                            \/**< Re/;"	m	struct:ptxIoTRd_CardRegistry	typeref:typename:ptxIoTRd_CardParams_t *
ActiveCardProtInfo	IOT_READER/ptx_IOT_READER.h	/^    uint8_t                     ActiveCardProtInfo[PTX_IOTRD_HIGH_LEVEL_PROT_MAX_SIZE]; \/**< Re/;"	m	struct:ptxIoTRd_CardRegistry	typeref:typename:uint8_t[]
ActiveCardProtInfoLen	IOT_READER/ptx_IOT_READER.h	/^    uint8_t                     ActiveCardProtInfoLen;                                  \/**< Re/;"	m	struct:ptxIoTRd_CardRegistry	typeref:typename:uint8_t
ActiveCardProtSpeed	IOT_READER/ptx_IOT_READER.h	/^    uint8_t                     ActiveCardProtSpeed;                                    \/**< Re/;"	m	struct:ptxIoTRd_CardRegistry	typeref:typename:uint8_t
ActiveCardProtType	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_CardProtocol_t     ActiveCardProtType;                                     \/**< Re/;"	m	struct:ptxIoTRd_CardRegistry	typeref:typename:ptxIoTRd_CardProtocol_t
Addresses	NSC/ptxNSC.h	/^    uint16_t                    Addresses[PTX_NSC_TYPES_WRRD_OP_MAX];           \/**< Buffer of /;"	m	struct:ptxNSC_ReadCmd_Par	typeref:typename:uint16_t[]
Addresses	NSC/ptxNSC.h	/^    uint16_t                    Addresses[PTX_NSC_TYPES_WRRD_OP_MAX];           \/**< Buffer of /;"	m	struct:ptxNSC_WriteCmd_Par	typeref:typename:uint16_t[]
AfiValue	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     AfiValue;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
AppRxBuffer	HCE/ptxHce.h	/^    uint8_t                 *AppRxBuffer;       \/**< Application Rx Buffer *\/$/;"	m	struct:ptxHce	typeref:typename:uint8_t *
AppRxBufferIndex	HCE/ptxHce.h	/^    uint32_t                AppRxBufferIndex;   \/**< Application Rx Buffer index *\/$/;"	m	struct:ptxHce	typeref:typename:uint32_t
AppRxBufferSize	HCE/ptxHce.h	/^    uint32_t                AppRxBufferSize;    \/**< Application Rx Buffer size *\/$/;"	m	struct:ptxHce	typeref:typename:uint32_t
AttributeInformationBlock	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         AttributeInformationBlock[16];  \/**< contains full attribut/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint8_t[16]
AvailableLength	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        AvailableLength;                \/**< Available length in by/;"	m	struct:ptxNDEF_T2TOP_NDEF_TLV	typeref:typename:uint16_t
BitRate212	IOT_READER/ptx_IOT_READER.h	/^    uint8_t BitRate212;                                         \/**< Higher bitrate: 212 kBit\//;"	m	struct:ptxIoTRd_BitRates	typeref:typename:uint8_t
BitRate424	IOT_READER/ptx_IOT_READER.h	/^    uint8_t BitRate424;                                         \/**< Higher bitrate: 424 kBit\//;"	m	struct:ptxIoTRd_BitRates	typeref:typename:uint8_t
BitRate848	IOT_READER/ptx_IOT_READER.h	/^    uint8_t BitRate848;                                         \/**< Higher bitrate: 848 kBit\//;"	m	struct:ptxIoTRd_BitRates	typeref:typename:uint8_t
Bitrate	FELICA_DTE/ptxFeliCa_DTE.h	/^    ptxFeliCa_DTE_BitRate_t             Bitrate;            \/**< Desired Bitrate *\/$/;"	m	struct:ptxFeliCa_DTE_PerformanceTest	typeref:typename:ptxFeliCa_DTE_BitRate_t
Bitrate	RF_TEST/ptxRF_Test.h	/^    ptxRF_Test_BitRate_t        Bitrate;                \/**< RF-Bitrate *\/$/;"	m	struct:ptxRF_Test_PRBS_Params	typeref:typename:ptxRF_Test_BitRate_t
BlockSize	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         BlockSize;              \/**< Block size *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:uint8_t
Buff	IOT_READER/ptx_IOT_READER.h	/^        uint8_t                   Buff[PTX_IOTRD_RF_MSG_MAX_SIZE];          \/**< RF Message Buf/;"	m	struct:ptxIoTRd_RfMsg	typeref:typename:uint8_t[]
Buff	NSC/ptxNSC_Event.h	/^    uint8_t                  *Buff;                             \/**< Buffer for Event. *\/$/;"	m	struct:ptxNSC_Event	typeref:typename:uint8_t *
BuffLen	IOT_READER/ptx_IOT_READER.h	/^        size_t                    BuffLen;                                  \/**< RF Message Buf/;"	m	struct:ptxIoTRd_RfMsg	typeref:typename:size_t
BuffLen	NSC/ptxNSC_Event.h	/^    size_t                   BuffLen;                           \/**< Length of Buffer for Event/;"	m	struct:ptxNSC_Event	typeref:typename:size_t
BuffNtf	IOT_READER/ptx_IOT_READER.h	/^        uint8_t                     BuffNtf[PTX_IOTRD_RF_MSG_MAX_SIZE]; \/**< POS buffer to keep/;"	m	struct:ptxIoTRd	typeref:typename:uint8_t[]
BuffNtfIndex	IOT_READER/ptx_IOT_READER.h	/^        uint32_t                    BuffNtfIndex;                       \/**< NTF Buffer index */;"	m	struct:ptxIoTRd	typeref:typename:uint32_t
BuffNtfLen	IOT_READER/ptx_IOT_READER.h	/^        size_t                      BuffNtfLen;                         \/**< Bytes used of \/re/;"	m	struct:ptxIoTRd	typeref:typename:size_t
BuffSecond	IOT_READER/ptx_IOT_READER.h	/^        uint8_t                   BuffSecond[PTX_IOTRD_RF_MSG_MAX_SIZE];    \/**< RF Message 2nd/;"	m	struct:ptxIoTRd_RfMsg	typeref:typename:uint8_t[]
BuffSecondLen	IOT_READER/ptx_IOT_READER.h	/^        size_t                    BuffSecondLen;                            \/**< RF Message 2nd/;"	m	struct:ptxIoTRd_RfMsg	typeref:typename:size_t
BuffSecondary	NSC/ptxNSC_Event.h	/^    uint8_t                  *BuffSecondary;                    \/**< Buffer for Event. *\/$/;"	m	struct:ptxNSC_Event	typeref:typename:uint8_t *
BuffSecondaryLen	NSC/ptxNSC_Event.h	/^    size_t                   BuffSecondaryLen;                  \/**< Length of Buffer for Event/;"	m	struct:ptxNSC_Event	typeref:typename:size_t
ByteAddress	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        ByteAddress;                    \/**< Byte address of T byte/;"	m	struct:ptxNDEF_T2TOP_NDEF_TLV	typeref:typename:uint16_t
ByteAddress	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        ByteAddress;                    \/**< Byte address of T byte/;"	m	struct:ptxNDEF_T2TOP_TERMINATOR_TLV	typeref:typename:uint16_t
ByteAddress	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        ByteAddress[PTX_T2TOP_MAX_NUMBER_LOCK_CONTROL];             /;"	m	struct:ptxNDEF_T2TOP_LOCK_CONTROL_TLV	typeref:typename:uint16_t[]
ByteAddress	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        ByteAddress[PTX_T2TOP_MAX_NUMBER_MEMORY_CONTROL];           /;"	m	struct:ptxNDEF_T2TOP_MEMORY_CONTROL_TLV	typeref:typename:uint16_t[]
BytesLockedPerLockBit	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         BytesLockedPerLockBit[PTX_T2TOP_MAX_NUMBER_LOCK_CONTROL];   /;"	m	struct:ptxNDEF_T2TOP_LOCK_CONTROL_TLV	typeref:typename:uint8_t[]
CCLen	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         CCLen[2];               \/**< length of the CC file, 2 bytes/;"	m	struct:ptxNDEF_T4TOP_CC	typeref:typename:uint8_t[2]
CCParams	NDEF/ptxNDEF_T2TOP.h	/^    ptxNDEF_T2TOP_CC_t              CCParams;              \/**< T2T CC Parameters *\/$/;"	m	struct:ptxNDEF_T2TOP	typeref:typename:ptxNDEF_T2TOP_CC_t
CCParams	NDEF/ptxNDEF_T3TOP.h	/^    ptxNDEF_T3TOP_CC_t              CCParams;               \/**< T3T specific CC parameters *\/$/;"	m	struct:ptxNDEF_T3TOP	typeref:typename:ptxNDEF_T3TOP_CC_t
CCParams	NDEF/ptxNDEF_T4TOP.h	/^    ptxNDEF_T4TOP_CC_t              CCParams;              \/**< T4T specific CC parameters *\/$/;"	m	struct:ptxNDEF_T4TOP	typeref:typename:ptxNDEF_T4TOP_CC_t
CCParams	NDEF/ptxNDEF_T5TOP.h	/^    ptxNDEF_T5TOP_CC_t              CCParams;               \/**< T5T specific CC parameters *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:ptxNDEF_T5TOP_CC_t
COMPS_HCE_PTXHCE_H_	HCE/ptxHce.h	/^#define COMPS_HCE_PTXHCE_H_$/;"	d
COMPS_HCE_PTX_HCEEXCHANGE_H_	COMMON/ptxHce_Exchange.h	/^#define COMPS_HCE_PTX_HCEEXCHANGE_H_$/;"	d
COMPS_NSC_NSC_CE_PTXNSC_CE_H_	NSC/NSC_CE/ptxNSC_CE.h	/^#define COMPS_NSC_NSC_CE_PTXNSC_CE_H_$/;"	d
COMPS_NSC_NSC_RD_PTXNSC_RD_H_	NSC/NSC_RD/ptxNSC_Rd.h	/^#define COMPS_NSC_NSC_RD_PTXNSC_RD_H_$/;"	d
COMPS_NSC_PTXNSC_C_	NSC/ptxNSC.h	/^#define COMPS_NSC_PTXNSC_C_$/;"	d
COMPS_NSC_PTXNSC_EVENT_H_	NSC/ptxNSC_Event.h	/^#define COMPS_NSC_PTXNSC_EVENT_H_$/;"	d
COMPS_NSC_PTXNSC_HAL_H_	NSC/ptxNSC_Hal.h	/^#define COMPS_NSC_PTXNSC_HAL_H_$/;"	d
COMPS_NSC_PTXNSC_INTF_H_	NSC/ptxNSC_Intf.h	/^#define COMPS_NSC_PTXNSC_INTF_H_$/;"	d
COMPS_NSC_PTXNSC_NOTIFICATIONS_H_	NSC/ptxNSC_Notifications.h	/^#define COMPS_NSC_PTXNSC_NOTIFICATIONS_H_$/;"	d
COMPS_PLAT_PTXPLATEXT_H_	PLAT/ptxPLAT_EXT.h	/^#define COMPS_PLAT_PTXPLATEXT_H_$/;"	d
COMPS_PLAT_PTXPLAT_H_	PLAT/ptxPLAT.h	/^#define COMPS_PLAT_PTXPLAT_H_$/;"	d
COMPS_PLAT_PTXPLAT_INT_H_	PLAT/Psoc/ptxPLAT_INT.h	/^#define COMPS_PLAT_PTXPLAT_INT_H_$/;"	d
COMPS_PLAT_PTXPLAT_SPI_H_	PLAT/Psoc/ptxPLAT_SPI.h	/^#define COMPS_PLAT_PTXPLAT_SPI_H_$/;"	d
COMPS_PLAT_PTXPLAT_TIMER_H_	PLAT/Psoc/ptxPLAT_TIMER.h	/^#define COMPS_PLAT_PTXPLAT_TIMER_H_$/;"	d
COMPS_PTXSTATUS_H_	ptxStatus.h	/^#define COMPS_PTXSTATUS_H_$/;"	d
COMPS_RFCONFIG_VAL_H_	NSC/ptxNSC_RfConfigVal.h	/^#define COMPS_RFCONFIG_VAL_H_$/;"	d
Calibrate	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     Calibrate;                  \/**< Start temperature sensor calibration or not: 1/;"	m	struct:ptxIoTRd_TempSense_Params	typeref:typename:uint8_t
CardAParams	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_CardAParams_t     CardAParams;                    \/**< RF-Technology specific para/;"	m	union:ptxIoTRd_CardTechParams	typeref:typename:ptxIoTRd_CardAParams_t
CardBParams	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_CardBParams_t     CardBParams;                    \/**< RF-Technology specific para/;"	m	union:ptxIoTRd_CardTechParams	typeref:typename:ptxIoTRd_CardBParams_t
CardFParams	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_CardFParams_t     CardFParams;                    \/**< RF-Technology specific para/;"	m	union:ptxIoTRd_CardTechParams	typeref:typename:ptxIoTRd_CardFParams_t
CardRegistry	IOT_READER/ptx_IOT_READER.h	/^        ptxIoTRd_CardRegistry_t     *CardRegistry;                      \/**< Pointer to Card Re/;"	m	struct:ptxIoTRd	typeref:typename:ptxIoTRd_CardRegistry_t *
CardRegistry	NDEF/ptxNDEF.h	/^    struct ptxIoTRd_CardRegistry    *CardRegistry;          \/**< Reference to Internal Card Reg/;"	m	struct:ptxNDEF	typeref:struct:ptxIoTRd_CardRegistry *
CardRegistry	NDEF/ptxNDEF_T2TOP.h	/^    struct ptxIoTRd_CardRegistry    *CardRegistry;         \/**< Reference to Internal Card Regi/;"	m	struct:ptxNDEF_T2TOP	typeref:struct:ptxIoTRd_CardRegistry *
CardRegistry	NDEF/ptxNDEF_T3TOP.h	/^    struct ptxIoTRd_CardRegistry    *CardRegistry;         \/**< Reference to Internal Card Regi/;"	m	struct:ptxNDEF_T3TOP	typeref:struct:ptxIoTRd_CardRegistry *
CardRegistry	NDEF/ptxNDEF_T4TOP.h	/^    struct ptxIoTRd_CardRegistry    *CardRegistry;         \/**< Reference to Internal Card Regi/;"	m	struct:ptxNDEF_T4TOP	typeref:struct:ptxIoTRd_CardRegistry *
CardRegistry	NDEF/ptxNDEF_T5TOP.h	/^    struct ptxIoTRd_CardRegistry    *CardRegistry;          \/**< Reference to Internal Card Reg/;"	m	struct:ptxNDEF_T5TOP	typeref:struct:ptxIoTRd_CardRegistry *
CardVParams	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_CardVParams_t     CardVParams;                    \/**< RF-Technology specific para/;"	m	union:ptxIoTRd_CardTechParams	typeref:typename:ptxIoTRd_CardVParams_t
Cards	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_CardParams_t       Cards[PTX_IOTRD_MAX_SUPPORTED_DEVICES];                 \/**< Re/;"	m	struct:ptxIoTRd_CardRegistry	typeref:typename:ptxIoTRd_CardParams_t[]
Carrier	RF_TEST/ptxRF_Test.h	/^    ptxRF_Test_Carrier_Params_t    Carrier;             \/**< Carrier Parameters *\/$/;"	m	union:ptxRF_Test_Params	typeref:typename:ptxRF_Test_Carrier_Params_t
Checksum	NDEF/ptxNDEF_T3TOP.h	/^    uint16_t                        Checksum;                       \/**< helps check whether th/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint16_t
ComInterface	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_ComInterface_Params_t      *ComInterface;        \/**< Initialization parameters fo/;"	m	struct:ptxIoTRd_InitPars	typeref:typename:ptxIoTRd_ComInterface_Params_t *
CompId	COMMON/ptxT4T.h	/^    ptxStatus_Comps_t       CompId;                                         \/**< Component Id. /;"	m	struct:ptxT4T	typeref:typename:ptxStatus_Comps_t
CompId	FELICA_DTE/ptxFeliCa_DTE.h	/^    ptxStatus_Comps_t       CompId;             \/**< Component Id *\/$/;"	m	struct:ptxFeliCa_DTE	typeref:typename:ptxStatus_Comps_t
CompId	GPIO/ptxGPIO.h	/^    ptxStatus_Comps_t           CompId;                 \/**< Component Id *\/$/;"	m	struct:ptxGPIO	typeref:typename:ptxStatus_Comps_t
CompId	HCE/ptxHce.h	/^    ptxStatus_Comps_t       CompId;             \/**< Component Id. *\/$/;"	m	struct:ptxHce	typeref:typename:ptxStatus_Comps_t
CompId	IOT_READER/ptx_IOT_READER.h	/^        ptxStatus_Comps_t           CompId;                             \/**< Component Id. *\/$/;"	m	struct:ptxIoTRd	typeref:typename:ptxStatus_Comps_t
CompId	NATIVE_TAG/ptxNativeTag_T2T.h	/^    ptxStatus_Comps_t    CompId;                \/**< Component Id *\/$/;"	m	struct:ptxNativeTag_T2T	typeref:typename:ptxStatus_Comps_t
CompId	NATIVE_TAG/ptxNativeTag_T3T.h	/^    ptxStatus_Comps_t    CompId;                \/**< Component Id *\/$/;"	m	struct:ptxNativeTag_T3T	typeref:typename:ptxStatus_Comps_t
CompId	NATIVE_TAG/ptxNativeTag_T4T.h	/^    ptxStatus_Comps_t                       CompId;         \/**< Component Id *\/$/;"	m	struct:ptxNativeTag_T4T	typeref:typename:ptxStatus_Comps_t
CompId	NATIVE_TAG/ptxNativeTag_T5T.h	/^    ptxStatus_Comps_t    CompId;                \/**< Component Id *\/$/;"	m	struct:ptxNativeTag_T5T	typeref:typename:ptxStatus_Comps_t
CompId	NDEF/ptxNDEF.h	/^    ptxStatus_Comps_t               CompId;                \/**< Component Id *\/$/;"	m	struct:ptxNDEF	typeref:typename:ptxStatus_Comps_t
CompId	NDEF/ptxNDEF_T2TOP.h	/^    ptxStatus_Comps_t               CompId;                \/**< Component Id *\/$/;"	m	struct:ptxNDEF_T2TOP	typeref:typename:ptxStatus_Comps_t
CompId	NDEF/ptxNDEF_T3TOP.h	/^    ptxStatus_Comps_t               CompId;                \/**< Component Id *\/$/;"	m	struct:ptxNDEF_T3TOP	typeref:typename:ptxStatus_Comps_t
CompId	NDEF/ptxNDEF_T4TOP.h	/^    ptxStatus_Comps_t               CompId;                \/**< Component Id *\/$/;"	m	struct:ptxNDEF_T4TOP	typeref:typename:ptxStatus_Comps_t
CompId	NDEF/ptxNDEF_T5TOP.h	/^    ptxStatus_Comps_t               CompId;                 \/**< Component Id *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:ptxStatus_Comps_t
CompId	NSC/ptxNSC.h	/^    ptxStatus_Comps_t           CompId;                     \/**< Component Id. *\/$/;"	m	struct:ptxNSC	typeref:typename:ptxStatus_Comps_t
CompId	PLAT/Psoc/ptxPLAT_INT.h	/^        ptxStatus_Comps_t           CompId;             \/**< Component Id. *\/$/;"	m	struct:ptxPlat	typeref:typename:ptxStatus_Comps_t
CompId	RF_TEST/ptxRF_Test.h	/^    ptxStatus_Comps_t           CompId;                 \/**< Component Id *\/$/;"	m	struct:ptxRF_Test	typeref:typename:ptxStatus_Comps_t
ConClkSource	NSC/ptxNSC_System.h	/^    uint8_t ConClkSource;                   \/**< Source of Clock synthesizer.>*\/$/;"	m	struct:ptxNSC_System	typeref:typename:uint8_t
ConPollNfcDepAtrReqG	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     *ConPollNfcDepAtrReqG;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t *
ConPollNfcDepAtrReqGLen	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     ConPollNfcDepAtrReqGLen;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
ConVarLBS	NSC/ptxNSC_System.h	/^    uint8_t ConVarLBS;                      \/**< Reference Division Select Parameter.>*\/$/;"	m	struct:ptxNSC_System	typeref:typename:uint8_t
Con_Clk_Src	NSC/ptxNSC.h	/^        uint8_t Con_Clk_Src;                                    \/**< Defines the source clock o/;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t
Con_Idle	NSC/ptxNSC.h	/^        uint8_t Con_Idle;                                       \/**< Configures the NSC functio/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Idle_Time	NSC/ptxNSC.h	/^        uint8_t Con_Idle_Time[PTX_NSC_DISC_CON_IDLE_TIME_LEN];  \/**< Defines the idle time betw/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Listen	NSC/ptxNSC.h	/^        uint8_t Con_Listen;                                     \/**< General listen mode config/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_A	NSC/ptxNSC.h	/^        uint8_t Con_Listen_A;                                   \/**< NFC-A listen mode configur/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_A_Nfcid1	NSC/ptxNSC.h	/^        uint8_t Con_Listen_A_Nfcid1[PTX_NSC_DISC_CON_LISA_NFCID1_LEN];         \/**< NFC-A ident/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Listen_A_Sel_Res	NSC/ptxNSC.h	/^        uint8_t Con_Listen_A_Sel_Res;                           \/**< Response to SEL_REQ comman/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_A_Sens_Res	NSC/ptxNSC.h	/^        uint8_t Con_Listen_A_Sens_Res[PTX_NSC_DISC_CON_LIS_SENSRESP_LEN];   \/**< Response to SE/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Listen_B	NSC/ptxNSC.h	/^        uint8_t Con_Listen_B;                                   \/**< NFC-B listen configuration/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_B_Afi	NSC/ptxNSC.h	/^        uint8_t Con_Listen_B_Afi;                               \/**< AFI parameter. *\/$/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_B_Sensb_Res	NSC/ptxNSC.h	/^        uint8_t Con_Listen_B_Sensb_Res[PTX_NSC_DISC_CON_LISB_SENSBRESP_LEN];    \/**< Response t/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Listen_F	NSC/ptxNSC.h	/^        uint8_t Con_Listen_F;                                   \/**< NFC-F listen mode configur/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_F_Sensf_Res	NSC/ptxNSC.h	/^        uint8_t Con_Listen_F_Sensf_Res[PTX_NSC_DISC_CON_LISF_SENSFRESP_LEN];   \/**< Response to/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Listen_Iso_Dep	NSC/ptxNSC.h	/^        uint8_t Con_Listen_Iso_Dep;                             \/**< ISO-DEP listen configurati/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_Iso_Dep_Ats	NSC/ptxNSC.h	/^        uint8_t Con_Listen_Iso_Dep_Ats[PTX_NSC_DISC_CON_LIS_ISODEP_ATS_LEN];   \/**< Answer to s/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Listen_Iso_Dep_Attrib_Res	NSC/ptxNSC.h	/^        uint8_t Con_Listen_Iso_Dep_Attrib_Res[PTX_NSC_DISC_CON_LIS_ISODEP_ATTRIB_RES_LEN];   \/*/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Listen_Iso_Dep_Attrib_Res_Len	NSC/ptxNSC.h	/^        uint8_t Con_Listen_Iso_Dep_Attrib_Res_Len;              \/**< The length of CON_LISTEN_I/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_Nfc_Dep	NSC/ptxNSC.h	/^        uint8_t Con_Listen_Nfc_Dep;                             \/**< NFC-DEP listen configurati/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_Nfc_Dep_Atr_Res_G	NSC/ptxNSC.h	/^        uint8_t Con_Listen_Nfc_Dep_Atr_Res_G[PTX_NSC_DISC_CON_LIS_NFCDEP_ATR_RES_G_LEN];    \/**/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Listen_Nfc_Dep_Atr_Res_G_Len	NSC/ptxNSC.h	/^        uint8_t Con_Listen_Nfc_Dep_Atr_Res_G_Len;               \/**< The length of CON_LISTEN_N/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_Nfc_Dep_Atr_Res_Pp	NSC/ptxNSC.h	/^        uint8_t Con_Listen_Nfc_Dep_Atr_Res_Pp;                  \/**< PP parameter of ATR_RES re/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_Nfc_Dep_Atr_Res_To	NSC/ptxNSC.h	/^        uint8_t Con_Listen_Nfc_Dep_Atr_Res_To;                  \/**< TO parameter of ATR_RES re/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_V	NSC/ptxNSC.h	/^        uint8_t Con_Listen_V;                                   \/**< NFC-V listen mode configur/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Listen_V_Inv_Res	NSC/ptxNSC.h	/^        uint8_t Con_Listen_V_Inv_Res[PTX_NSC_DISC_CON_LISV_INVRESP_LEN];   \/**< Response to INV/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_NHost	NSC/ptxNSC.h	/^        uint8_t Con_NHost[PTX_NSC_INIT_CON_HOST_LENGTH];        \/**< Division factor for the cl/;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t[]
Con_NHost_Ce	NSC/ptxNSC.h	/^        uint8_t Con_NHost_Ce[PTX_NSC_INIT_CON_HOST_CE_LENGTH];  \/**< Division factor for the cl/;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t[]
Con_N_Alm_Max	NSC/ptxNSC.h	/^        uint8_t Con_N_Alm_Max[PTX_NSC_INIT_CON_N_ALM_MAX];      \/**< Maximum allowed N_ALM valu/;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t[]
Con_N_Alm_Min	NSC/ptxNSC.h	/^        uint8_t Con_N_Alm_Min[PTX_NSC_INIT_CON_N_ALM_MIN];      \/**< Minimum allowed N_ALM valu/;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t[]
Con_Paocp_Th	NSC/ptxNSC.h	/^        uint8_t Con_Paocp_Th;                                   \/**< Power Amplifier over-curre/;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t
Con_Patp_Th	NSC/ptxNSC.h	/^        uint8_t Con_Patp_Th;                                    \/**< Power Amplifier thermal pr/;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t
Con_Poll	NSC/ptxNSC.h	/^        uint8_t Con_Poll;                                       \/**< General poll mode configur/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_A	NSC/ptxNSC.h	/^        uint8_t Con_Poll_A;                                     \/**< General NFC-A poll mode co/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_A_Cmd	NSC/ptxNSC.h	/^        uint8_t Con_Poll_A_Cmd;                                 \/**< NFC-A poll command. *\/$/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_A_Dev_Limit	NSC/ptxNSC.h	/^        uint8_t Con_Poll_A_Dev_Limit;                           \/**< The maximum number of devi/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_A_Freq	NSC/ptxNSC.h	/^        uint8_t Con_Poll_A_Freq;                                \/**< NFC-A poll frequency. *\/$/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_B	NSC/ptxNSC.h	/^        uint8_t Con_Poll_B;                                     \/**< General NFC-B poll mode co/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_B_Attrib_Inf	NSC/ptxNSC.h	/^        uint8_t Con_Poll_B_Attrib_Inf[PTX_NSC_DISC_CON_POLLB_ATTRIB_INF_LEN];           \/**< AT/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Poll_B_Cmd	NSC/ptxNSC.h	/^        uint8_t Con_Poll_B_Cmd[PTX_NSC_DISC_CON_POLLB_CMD_LEN]; \/**< NFC-B poll command. *\/$/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Poll_B_Dev_Limit	NSC/ptxNSC.h	/^        uint8_t Con_Poll_B_Dev_Limit;                           \/**< The maximum number of devi/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_B_Freq	NSC/ptxNSC.h	/^        uint8_t Con_Poll_B_Freq;                                \/**< NFC-B poll frequency. *\/$/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Disc_Mode	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Disc_Mode;                             \/**< Determines the RF discover/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_F	NSC/ptxNSC.h	/^        uint8_t Con_Poll_F;                                     \/**< General NFC-F poll mode co/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_F_Cmd	NSC/ptxNSC.h	/^        uint8_t Con_Poll_F_Cmd[PTX_NSC_DISC_CON_POLLF_CMD_LEN]; \/**< NFC-F poll command (SENSF_/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Poll_F_Dev_Limit	NSC/ptxNSC.h	/^        uint8_t Con_Poll_F_Dev_Limit;                           \/**< The maximum number of devi/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_F_Freq	NSC/ptxNSC.h	/^        uint8_t Con_Poll_F_Freq;                                \/**< NFC-F poll frequency. *\/$/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Gt	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Gt;                                    \/**< Guard time (GT) in millise/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Iso_Dep	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Iso_Dep;                               \/**< ISO-DEP protocol configura/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Iso_Dep_Attrib_Inf_Len	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Iso_Dep_Attrib_Inf_Len;                \/**< The length of CON_POLL_B_A/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Iso_Dep_Attrib_Param1	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Iso_Dep_Attrib_Param1;                 \/**< Defines PARAM1 of ATTRIB c/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Iso_Dep_Attrib_Param2_Fsdi	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Iso_Dep_Attrib_Param2_Fsdi;            \/**< Defines FSDI of PARAM2 of /;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Iso_Dep_Attrib_Param3	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Iso_Dep_Attrib_Param3;                 \/**< Defines PARAM3 of ATTRIB c/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Iso_Dep_Attrib_Param4	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Iso_Dep_Attrib_Param4;                 \/**< Defines PARAM4 of ATTRIB c/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Iso_Dep_Rats_Param	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Iso_Dep_Rats_Param;                    \/**< Defines PARAM of RATS comm/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Nfc_Dep	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Nfc_Dep;                               \/**< NFC-DEP protocol configura/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Nfc_Dep_Atr_Req_G	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Nfc_Dep_Atr_Req_G[PTX_NSC_DISC_CON_POLL_NFCDEP_ATR_REQ_G_LEN];    \/**</;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Poll_Nfc_Dep_Atr_Req_G_Len	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Nfc_Dep_Atr_Req_G_Len;                 \/**< Defines the length of CON_/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_Nfc_Dep_Atr_Req_Pp	NSC/ptxNSC.h	/^        uint8_t Con_Poll_Nfc_Dep_Atr_Req_Pp;                    \/**< Indicates the presence of /;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_V	NSC/ptxNSC.h	/^        uint8_t Con_Poll_V;                                     \/**< General NFC-V poll mode co/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_V_Cmd	NSC/ptxNSC.h	/^        uint8_t Con_Poll_V_Cmd[PTX_NSC_DISC_CON_POLLV_CMD_LEN]; \/**< NFC-V poll command (INVENT/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t[]
Con_Poll_V_Dev_Limit	NSC/ptxNSC.h	/^        uint8_t Con_Poll_V_Dev_Limit;                           \/**< The maximum number of devi/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Poll_V_Freq	NSC/ptxNSC.h	/^        uint8_t Con_Poll_V_Freq;                                \/**< NFC-V poll frequency. *\/$/;"	m	struct:ptxNSC_RfDiscPars	typeref:typename:uint8_t
Con_Prng_Seed	NSC/ptxNSC.h	/^        uint8_t Con_Prng_Seed[PTX_NSC_INIT_CON_PRNG_SEED];      \/**< PRNG seed value. *\/$/;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t[]
Con_Uart_Config	NSC/ptxNSC.h	/^        uint8_t Con_Uart_Config[PTX_NSC_INIT_CON_UART_CONFIG];  \/**< UART configuration data. */;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t[]
Con_Var_Lbs	NSC/ptxNSC.h	/^        uint8_t Con_Var_Lbs;                                    \/**< Reference division select /;"	m	struct:ptxNSC_InitPars	typeref:typename:uint8_t
ConstantField	NSC/ptxNSC.h	/^    ConstantField,                                              \/**< Turns on RF-field (but no /;"	e	enum:ptxNSC_PollType
ContinuousField	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     ContinuousField;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
Ctx	NSC/ptxNSC.h	/^    void                        *Ctx;                       \/**< Context called by \/ref WfeCb./;"	m	struct:ptxNSC	typeref:typename:void *
Ctx	NSC/ptxNSC.h	/^    void                        *Ctx;                       \/**< Context used by \/ref WfeCb . /;"	m	struct:ptxNSC_ConfigPars	typeref:typename:void *
CtxRxCb	PLAT/Psoc/ptxPLAT_INT.h	/^        void                        *CtxRxCb;           \/**< Callback Context *\/$/;"	m	struct:ptxPlat	typeref:typename:void *
CtxRxCb	PLAT/Psoc/ptxPLAT_SPI.h	/^    void                    *CtxRxCb;       \/**< Rx Callback Context. *\/$/;"	m	struct:ptxPLAT_Spi	typeref:typename:void *
CurrentSector	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                                             CurrentSector;                          /;"	m	struct:ptxNDEF_T2TOP_Sector	typeref:typename:uint8_t
DAC_TSENSE_WORD_REG	NSC/ptxNSC_Registers.h	/^#define DAC_TSENSE_WORD_REG /;"	d
DBGPORT_STATUS_ERROR	ptxDBG_PORT.c	/^#define DBGPORT_STATUS_ERROR /;"	d	file:
DBGPORT_STATUS_SUCCESS	ptxDBG_PORT.c	/^#define DBGPORT_STATUS_SUCCESS /;"	d	file:
DSFID	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     DSFID;                                          \/**< RF-Technology Type-V. DSFI/;"	m	struct:ptxIoTRd_CardVParams	typeref:typename:uint8_t
DeactType_Generic	NSC/ptxNSC.h	/^    DeactType_Generic               = 0x01u,                            \/**< Generic Deactivati/;"	e	enum:ptxNSC_RfDeact_Type
DeactType_Protocol_Specific	NSC/ptxNSC.h	/^    DeactType_Protocol_Specific     = 0x02u,                            \/**< Protocol Specific /;"	e	enum:ptxNSC_RfDeact_Type
DeactivationNTFPending	NSC/ptxNSC.h	/^    uint8_t                     DeactivationNTFPending;     \/**< Card-Deactivated Status-flag i/;"	m	struct:ptxNSC	typeref:typename:uint8_t
DefaultNDEFMessage	COMMON/ptxT4T.h	/^    uint8_t                 *DefaultNDEFMessage;$/;"	m	struct:ptxT4T_InitParams	typeref:typename:uint8_t *
DefaultNDEFMessageLength	COMMON/ptxT4T.h	/^    uint16_t                DefaultNDEFMessageLength;$/;"	m	struct:ptxT4T_InitParams	typeref:typename:uint16_t
DeviceRfState	NSC/ptxNSC.h	/^    uint8_t                     DeviceRfState;                                      \/**< Rf Dev/;"	m	struct:ptxNSC_RfActTech_A_Param	typeref:typename:uint8_t
DeviceRfState	NSC/ptxNSC.h	/^    uint8_t                     DeviceRfState;                                      \/**< Rf Dev/;"	m	struct:ptxNSC_RfActTech_B_Param	typeref:typename:uint8_t
DeviceRfState	NSC/ptxNSC.h	/^    uint8_t                     DeviceRfState;                                      \/**< Rf Dev/;"	m	struct:ptxNSC_RfActTech_F_Param	typeref:typename:uint8_t
DeviceRfState	NSC/ptxNSC.h	/^    uint8_t                     DeviceRfState;                                      \/**< Rf Dev/;"	m	struct:ptxNSC_RfActTech_V_Param	typeref:typename:uint8_t
DeviceState	IOT_READER/ptx_IOT_READER.h	/^    uint8_t                     DeviceState;                                         \/**< Gener/;"	m	struct:ptxIoTRd_CardParams	typeref:typename:uint8_t
Did	NSC/ptxNSC.h	/^    uint8_t         Did;                                                \/**< Frame Size for pro/;"	m	union:ptxNSC_RfActProt_ISODEP_Param	typeref:typename:uint8_t
DigitNLEN	NDEF/ptxNDEF_T4TOP.h	/^    uint32_t                        DigitNLEN;              \/**< digit representation of (E)NLE/;"	m	struct:ptxNDEF_T4TOP_NLEN	typeref:typename:uint32_t
DisableIsoDepProtocol	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     DisableIsoDepProtocol;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
DisableNfcDepProtocol	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     DisableNfcDepProtocol;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
DiscoverState	HCE/ptxHce.h	/^    uint8_t                 DiscoverState;      \/**< Discover State *\/$/;"	m	struct:ptxHce	typeref:typename:uint8_t
DiscoverState	IOT_READER/ptx_IOT_READER.h	/^        uint8_t                     DiscoverState;                      \/**< State of the disco/;"	m	struct:ptxIoTRd	typeref:typename:uint8_t
Discover_Mode	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     Discover_Mode;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
DiscoveryMode_Hybrid_End	NSC/ptxNSC.h	/^    DiscoveryMode_Hybrid_End        = 0xFFu$/;"	e	enum:ptxNSC_RfDiscovery_Mode
DiscoveryMode_Hybrid_Start	NSC/ptxNSC.h	/^    DiscoveryMode_Hybrid_Start      = 0x02u,                    \/**< Hybrid mode: regular\/full/;"	e	enum:ptxNSC_RfDiscovery_Mode
DiscoveryMode_Lpcd	NSC/ptxNSC.h	/^    DiscoveryMode_Lpcd              = 0x01u,                    \/**< Low power card detection (/;"	e	enum:ptxNSC_RfDiscovery_Mode
DiscoveryMode_Regular	NSC/ptxNSC.h	/^    DiscoveryMode_Regular           = 0x00u,                    \/**< Regular RF discovery mode./;"	e	enum:ptxNSC_RfDiscovery_Mode
ENABLE_PRINTF_OPTION	COMMON/ptxCOMMON.c	/^#define ENABLE_PRINTF_OPTION$/;"	d	file:
EmvPollMode	NSC/ptxNSC.h	/^    EmvPollMode,                                                \/**< EMVCo polling mode (standa/;"	e	enum:ptxNSC_PollType
EmvPollMode_TransacA	NSC/ptxNSC.h	/^    EmvPollMode_TransacA,                                       \/**< EMVCo polling mode (TRANSA/;"	e	enum:ptxNSC_PollType
EmvPollMode_TransacB	NSC/ptxNSC.h	/^    EmvPollMode_TransacB,                                       \/**< EMVCo polling mode (TRANSA/;"	e	enum:ptxNSC_PollType
EnableExtdAtqB	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     EnableExtdAtqB;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
EnableHbr	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     EnableHbr;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
EnableIsoPollMode	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     EnableIsoPollMode;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
EnableStandBy	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     EnableStandBy;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
Entries	HCE/ptxHce.h	/^    ptxHce_EventRecord_t         Entries[e_MaxNrOfEventRecords]; \/**< Event entries *\/$/;"	m	struct:__anond974ec060608	typeref:typename:ptxHce_EventRecord_t[]
EventID	HCE/ptxHce.h	/^    ptxHce_EventType_t          EventID;        \/**< Event ID *\/$/;"	m	struct:__anond974ec060508	typeref:typename:ptxHce_EventType_t
EventId	NSC/ptxNSC_Event.h	/^    ptxNscEventId_t          EventId;                           \/**< Type of event to handle. */;"	m	struct:ptxNSC_Event	typeref:typename:ptxNscEventId_t
EventQ	HCE/ptxHce.h	/^    ptxHce_EventQueue_t     EventQ;             \/**< Event queue *\/$/;"	m	struct:ptxHce	typeref:typename:ptxHce_EventQueue_t
ExitProcessing	FELICA_DTE/ptxFeliCa_DTE.h	/^    uint8_t                             ExitProcessing;     \/**< Flag to abort an ongoing Test-/;"	m	struct:ptxFeliCa_DTE_TestProgressParams	typeref:typename:uint8_t
ExtCommandTypeRequired	NDEF/ptxNDEF_T5TOP.h	/^    uint16_t                        ExtCommandTypeRequired;     \/**< external command type requ/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint16_t
ExtensionCb	NSC/ptxNSC.h	/^    pptxNSC_ExtCallBack_t       ExtensionCb;                \/**< Optional callback for processi/;"	m	struct:ptxNSC	typeref:typename:pptxNSC_ExtCallBack_t
ExtensionCtx	NSC/ptxNSC.h	/^    void                        *ExtensionCtx;              \/**< Optional pointer for Context f/;"	m	struct:ptxNSC	typeref:typename:void *
ExtensionNtfProcess	NSC/ptxNSC.h	/^    pptxNSC_Process_Ext_NTF_t   ExtensionNtfProcess;        \/**< Optional function pointer for /;"	m	struct:ptxNSC	typeref:typename:pptxNSC_Process_Ext_NTF_t
FELICA_DTE_BITRATE_212	FELICA_DTE/ptxFeliCa_DTE.h	/^    FELICA_DTE_BITRATE_212 = 1,                             \/**< RF Bitrate 212 kBit\/s *\/$/;"	e	enum:ptxFeliCa_DTE_BitRate
FELICA_DTE_BITRATE_424	FELICA_DTE/ptxFeliCa_DTE.h	/^    FELICA_DTE_BITRATE_424 = 2,                             \/**< RF Bitrate 424 kBit\/s *\/$/;"	e	enum:ptxFeliCa_DTE_BitRate
FELICA_DTE_TestID_PerformanceTest	FELICA_DTE/ptxFeliCa_DTE.h	/^    FELICA_DTE_TestID_PerformanceTest,                      \/**< RF-Performance Tests *\/$/;"	e	enum:ptxFeliCa_DTE_TestID
Fields	NATIVE_TAG/ptxNativeTag_T4T.h	/^    ptxNativeTag_T4T_CommandAPDUFields_t    Fields;         \/**< fields used in command ADPU *\/$/;"	m	struct:ptxNativeTag_T4T	typeref:typename:ptxNativeTag_T4T_CommandAPDUFields_t
Flags	RF_TEST/ptxRF_Test.h	/^    uint8_t                     Flags;                  \/**< PRBS-specific flags (see above) *\/$/;"	m	struct:ptxRF_Test_PRBS_Params	typeref:typename:uint8_t
FlowControl	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     FlowControl;                \/**< Set flow control: 1 - enable, 0 - disable. Rel/;"	m	struct:ptxIoTRd_ComInterface_Params	typeref:typename:uint8_t
Fsdi	NSC/ptxNSC.h	/^    uint8_t         Fsdi;                                               \/**< Defines the logica/;"	m	union:ptxNSC_RfActProt_ISODEP_Param	typeref:typename:uint8_t
Fwt	NSC/ptxNSC.h	/^    ptxNSC_RfPar_Fwt_t                  Fwt;                    \/**< FWT. *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNSC_RfPar_Fwt_t
Fwt	NSC/ptxNSC.h	/^    uint8_t     Fwt[3u];                                        \/**< FWT. *\/$/;"	m	struct:ptxNSC_RfPar_Fwt	typeref:typename:uint8_t[3u]
GPIO_Cfg	GPIO/ptxGPIO.h	/^    uint8_t                     GPIO_Cfg[12];           \/**< NSC Configuration value for each G/;"	m	struct:ptxGPIO	typeref:typename:uint8_t[12]
GPIO_Config_Input	GPIO/ptxGPIO.h	/^    GPIO_Config_Input,$/;"	e	enum:ptxGPIO_Config
GPIO_Config_Output	GPIO/ptxGPIO.h	/^    GPIO_Config_Output,$/;"	e	enum:ptxGPIO_Config
GPIO_Flags_In_Enable_Internal_Pullup	GPIO/ptxGPIO.h	/^    GPIO_Flags_In_Enable_Internal_Pullup,$/;"	e	enum:ptxGPIO_Flags
GPIO_Flags_None	GPIO/ptxGPIO.h	/^    GPIO_Flags_None,$/;"	e	enum:ptxGPIO_Flags
GPIO_Flags_Out_Enable_High_Driver_Strength	GPIO/ptxGPIO.h	/^    GPIO_Flags_Out_Enable_High_Driver_Strength,$/;"	e	enum:ptxGPIO_Flags
GPIO_Pin_10	GPIO/ptxGPIO.h	/^    GPIO_Pin_10     = 10,$/;"	e	enum:ptxGPIO_Pin
GPIO_Pin_11	GPIO/ptxGPIO.h	/^    GPIO_Pin_11     = 11,$/;"	e	enum:ptxGPIO_Pin
GPIO_Pin_12	GPIO/ptxGPIO.h	/^    GPIO_Pin_12     = 12,$/;"	e	enum:ptxGPIO_Pin
GPIO_Pin_5	GPIO/ptxGPIO.h	/^    GPIO_Pin_5      = 5,$/;"	e	enum:ptxGPIO_Pin
GPIO_Pin_6	GPIO/ptxGPIO.h	/^    GPIO_Pin_6      = 6,$/;"	e	enum:ptxGPIO_Pin
GPIO_Pin_7	GPIO/ptxGPIO.h	/^    GPIO_Pin_7      = 7,$/;"	e	enum:ptxGPIO_Pin
GPIO_Pin_8	GPIO/ptxGPIO.h	/^    GPIO_Pin_8      = 8,$/;"	e	enum:ptxGPIO_Pin
GPIO_Pin_9	GPIO/ptxGPIO.h	/^    GPIO_Pin_9      = 9,$/;"	e	enum:ptxGPIO_Pin
HIF_RBF_LEN_REG	NSC/ptxNSC_Registers.h	/^#define HIF_RBF_LEN_REG /;"	d
Hce	IOT_READER/ptx_IOT_READER.h	/^        ptxHce_t                    Hce;                                \/**< Host Card Emulatio/;"	m	struct:ptxIoTRd	typeref:typename:ptxHce_t
HceEvent_Activated_ListenA	HCE/ptxHce.h	/^    HceEvent_Activated_ListenA,$/;"	e	enum:ptxHce_EventType
HceEvent_Data	HCE/ptxHce.h	/^    HceEvent_Data,$/;"	e	enum:ptxHce_EventType
HceEvent_Deactivated	HCE/ptxHce.h	/^    HceEvent_Deactivated,$/;"	e	enum:ptxHce_EventType
HceEvent_ExtFieldOff	HCE/ptxHce.h	/^    HceEvent_ExtFieldOff,$/;"	e	enum:ptxHce_EventType
HceEvent_ExtFieldOn	HCE/ptxHce.h	/^    HceEvent_ExtFieldOn,$/;"	e	enum:ptxHce_EventType
HceEvent_NoEvent	HCE/ptxHce.h	/^    HceEvent_NoEvent,$/;"	e	enum:ptxHce_EventType
HceRfProt_IsoDep	HCE/ptxHce.h	/^    HceRfProt_IsoDep    = 0x04$/;"	e	enum:__anond974ec060203
HceRfProt_T2T	HCE/ptxHce.h	/^    HceRfProt_T2T       = 0x02,$/;"	e	enum:__anond974ec060203
HceRfProt_Undefined	HCE/ptxHce.h	/^    HceRfProt_Undefined = 0x00,$/;"	e	enum:__anond974ec060203
HeadIndex	HCE/ptxHce.h	/^    ptxHce_EventQueueRanges_t    HeadIndex;     \/**< Head Index *\/$/;"	m	struct:__anond974ec060608	typeref:typename:ptxHce_EventQueueRanges_t
ID	FELICA_DTE/ptxFeliCa_DTE.h	/^    ptxFeliCa_DTE_TestID_t              ID;                 \/**< Compliance Test-Identifier *\/$/;"	m	struct:ptxFeliCa_DTE_TestParams	typeref:typename:ptxFeliCa_DTE_TestID_t
ID	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_ChipConfigID_t ID;             \/**< Chip RF and System Config *\/$/;"	m	struct:ptxIoTRd_ChipConfig	typeref:typename:ptxIoTRd_ChipConfigID_t
ID	NSC/ptxNSC.h	/^    ptxNSC_RfConfig_ParamList_t     ID;                         \/**< RF Config parameter list */;"	m	struct:ptxNSC_RfConfigTlv	typeref:typename:ptxNSC_RfConfig_ParamList_t
ID	RF_TEST/ptxRF_Test.h	/^    ptxRF_Test_TestID_t         ID;                     \/**< RF-Test-Identifier *\/$/;"	m	struct:ptxRF_Test_TestParams	typeref:typename:ptxRF_Test_TestID_t
IOTRD_BUFFER_SIZE	IOT_READER/ptx_IOT_READER.c	/^#define IOTRD_BUFFER_SIZE /;"	d	file:
IOTRD_BUFFER_SIZE_LOGGING	IOT_READER/ptx_IOT_READER.c	/^#define IOTRD_BUFFER_SIZE_LOGGING /;"	d	file:
IOTRD_DEACTIVATION_NTF_PENDING_TIMEOUT_MS	IOT_READER/ptx_IOT_READER.c	/^#define IOTRD_DEACTIVATION_NTF_PENDING_TIMEOUT_MS /;"	d	file:
IOTRD_IDLE_TIME_MAX_MASK	IOT_READER/ptx_IOT_READER.c	/^#define IOTRD_IDLE_TIME_MAX_MASK /;"	d	file:
IOTRD_IDLE_TIME_TICK_MS	IOT_READER/ptx_IOT_READER.c	/^#define IOTRD_IDLE_TIME_TICK_MS /;"	d	file:
IOTRD_MAX_GEN_BYTES	IOT_READER/ptx_IOT_READER.c	/^#define IOTRD_MAX_GEN_BYTES /;"	d	file:
IRQDisabledCnt	PLAT/Psoc/ptxPLAT_INT.h	/^        uint16_t                    IRQDisabledCnt;     \/**< IRQ Enable\/Disable Protection *\/$/;"	m	struct:ptxPlat	typeref:typename:uint16_t
ISRCallBack	PLAT/Psoc/ptxPLAT_TIMER.h	/^        pptxPlat_TimerCallBack_t    ISRCallBack;            \/*< Callback used by timer for asyn/;"	m	struct:ptxPlatTimer	typeref:typename:pptxPlat_TimerCallBack_t
ISRCxt	PLAT/Psoc/ptxPLAT_TIMER.h	/^        void                        *ISRCxt;                \/*< Context used by callback. *\/$/;"	m	struct:ptxPlatTimer	typeref:typename:void *
IdleTime	IOT_READER/ptx_IOT_READER.h	/^    uint32_t    IdleTime;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint32_t
Init_Poll_A	NSC/ptxNSC.h	/^    Init_Poll_A,                                                \/**< In case of enabled, first /;"	e	enum:ptxNSC_InitTechPoll
Init_Poll_ACM	NSC/ptxNSC.h	/^    Init_Poll_ACM,                                              \/**< In case of enabled, first /;"	e	enum:ptxNSC_InitTechPoll
Init_Poll_B	NSC/ptxNSC.h	/^    Init_Poll_B,                                                \/**< In case of enabled, first /;"	e	enum:ptxNSC_InitTechPoll
Init_Poll_F	NSC/ptxNSC.h	/^    Init_Poll_F,                                                \/**< In case of enabled, first /;"	e	enum:ptxNSC_InitTechPoll
Init_Poll_V	NSC/ptxNSC.h	/^    Init_Poll_V                                                 \/**< In case of enabled, first /;"	e	enum:ptxNSC_InitTechPoll
IntfSpeed	PLAT/Psoc/ptxPLAT_SPI.h	/^    uint32_t                IntfSpeed;          \/**< Clock speed in Hz to be configured. *\/$/;"	m	struct:ptxPLAT_SpiConfigPars	typeref:typename:uint32_t
IntfSpeed	PLAT/Psoc/ptxPLAT_SPI.h	/^    uint32_t                IntfSpeed;      \/**< Clock speed in Hz to be configured. *\/$/;"	m	struct:ptxPLAT_Spi	typeref:typename:uint32_t
IoTRdComp	FELICA_DTE/ptxFeliCa_DTE.h	/^    struct ptxIoTRd         *IoTRdComp;         \/**< Main Stack component *\/$/;"	m	struct:ptxFeliCa_DTE	typeref:struct:ptxIoTRd *
IoTRdComp	FELICA_DTE/ptxFeliCa_DTE.h	/^    struct ptxIoTRd         *IoTRdComp;         \/**< Main Stack component *\/$/;"	m	struct:ptxFeliCa_DTE_InitParams	typeref:struct:ptxIoTRd *
IoTRd_DemoState_DataExchange	COMMON/ptxIoTRd_COMMON.h	/^    IoTRd_DemoState_DataExchange,$/;"	e	enum:ptxIotRdInt_Demo_State
IoTRd_DemoState_DeactivateReader	COMMON/ptxIoTRd_COMMON.h	/^    IoTRd_DemoState_DeactivateReader,$/;"	e	enum:ptxIotRdInt_Demo_State
IoTRd_DemoState_HostCardEmulation	COMMON/ptxIoTRd_COMMON.h	/^    IoTRd_DemoState_HostCardEmulation,$/;"	e	enum:ptxIotRdInt_Demo_State
IoTRd_DemoState_SelectCard	COMMON/ptxIoTRd_COMMON.h	/^    IoTRd_DemoState_SelectCard,$/;"	e	enum:ptxIotRdInt_Demo_State
IoTRd_DemoState_SystemError	COMMON/ptxIoTRd_COMMON.h	/^    IoTRd_DemoState_SystemError,$/;"	e	enum:ptxIotRdInt_Demo_State
IoTRd_DemoState_Undefined	COMMON/ptxIoTRd_COMMON.h	/^    IoTRd_DemoState_Undefined$/;"	e	enum:ptxIotRdInt_Demo_State
IoTRd_DemoState_WaitForActivation	COMMON/ptxIoTRd_COMMON.h	/^    IoTRd_DemoState_WaitForActivation,$/;"	e	enum:ptxIotRdInt_Demo_State
IotRd	NATIVE_TAG/ptxNativeTag_T2T.h	/^    ptxIoTRd_t          *IotRd;                 \/**< Allocated instance of IoT-Reader component/;"	m	struct:ptxNativeTag_T2T_InitParams	typeref:typename:ptxIoTRd_t *
IotRd	NATIVE_TAG/ptxNativeTag_T2T.h	/^    ptxIoTRd_t          *IotRd;                 \/**< IOT Reader provided by upper layer *\/$/;"	m	struct:ptxNativeTag_T2T	typeref:typename:ptxIoTRd_t *
IotRd	NATIVE_TAG/ptxNativeTag_T3T.h	/^    ptxIoTRd_t          *IotRd;                 \/**< IOT Reader provided by upper layer *\/$/;"	m	struct:ptxNativeTag_T3T	typeref:typename:ptxIoTRd_t *
IotRd	NATIVE_TAG/ptxNativeTag_T3T.h	/^    ptxIoTRd_t          *IotRd;                 \/**< IOT Reader provided by upper layer *\/$/;"	m	struct:ptxNativeTag_T3T_InitParams	typeref:typename:ptxIoTRd_t *
IotRd	NATIVE_TAG/ptxNativeTag_T4T.h	/^    ptxIoTRd_t                              *IotRd;         \/**< IOT Reader provided by upper l/;"	m	struct:ptxNativeTag_T4T	typeref:typename:ptxIoTRd_t *
IotRd	NATIVE_TAG/ptxNativeTag_T4T.h	/^    ptxIoTRd_t          *IotRd;             \/**< Allocated instance of IoT-Reader component (se/;"	m	struct:ptxNativeTag_T4T_InitParams	typeref:typename:ptxIoTRd_t *
IotRd	NATIVE_TAG/ptxNativeTag_T5T.h	/^    ptxIoTRd_t          *IotRd;                 \/**< IOT Reader provided by upper layer *\/$/;"	m	struct:ptxNativeTag_T5T	typeref:typename:ptxIoTRd_t *
IotRd	NATIVE_TAG/ptxNativeTag_T5T.h	/^    ptxIoTRd_t          *IotRd;                 \/**< IOT Reader provided by upper layer *\/$/;"	m	struct:ptxNativeTag_T5T_InitParams	typeref:typename:ptxIoTRd_t *
IotRd	NDEF/ptxNDEF.h	/^    ptxIoTRd_t                      *IotRd;             \/**< IOT Reader provided by upper layer/;"	m	struct:ptxNDEF_InitParams	typeref:typename:ptxIoTRd_t *
IotRd	NDEF/ptxNDEF_T2TOP.h	/^    ptxIoTRd_t                      *IotRd;                         \/**< IOT Reader provided by/;"	m	struct:ptxNDEF_T2TOP_InitParams	typeref:typename:ptxIoTRd_t *
IotRd	NDEF/ptxNDEF_T3TOP.h	/^    ptxIoTRd_t                      *IotRd;                         \/**< IOT Reader provided by/;"	m	struct:ptxNDEF_T3TOP_InitParams	typeref:typename:ptxIoTRd_t *
IotRd	NDEF/ptxNDEF_T4TOP.h	/^    ptxIoTRd_t                      *IotRd;        \/**< Allocated instance of IoT-Reader compon/;"	m	struct:ptxNDEF_T4TOP_InitParams	typeref:typename:ptxIoTRd_t *
IotRd	NDEF/ptxNDEF_T5TOP.h	/^    ptxIoTRd_t                      *IotRd;                 \/**< Allocated instance of IoT-Read/;"	m	struct:ptxNDEF_T5TOP_InitParams	typeref:typename:ptxIoTRd_t *
IsElapsed	PLAT/Psoc/ptxPLAT_TIMER.h	/^        volatile uint8_t            IsElapsed;              \/*< Timer Elapsed variable. *\/$/;"	m	struct:ptxPlatTimer	typeref:typename:volatile uint8_t
IsPpsRequired	NSC/ptxNSC.h	/^    uint8_t         IsPpsRequired;                                      \/**< Is pps required ? /;"	m	union:ptxNSC_RfActProt_ISODEP_Param	typeref:typename:uint8_t
IsoDepParams	NSC/ptxNSC.h	/^    ptxNSC_RfActProt_ISODEP_Param_t IsoDepParams;                       \/**< IDO-DEP Parameters/;"	m	union:ptxNSC_RfActProt_Param_t	typeref:typename:ptxNSC_RfActProt_ISODEP_Param_t
IsoPollMode	NSC/ptxNSC.h	/^	IsoPollMode,												\/**< ISO polling mode *\/$/;"	e	enum:ptxNSC_PollType
LC_FIELD_CC_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define LC_FIELD_CC_SELECT	/;"	d	file:
LC_FIELD_NDEF_APP_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define LC_FIELD_NDEF_APP_SELECT	/;"	d	file:
LC_FIELD_NDEF_FILE_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define LC_FIELD_NDEF_FILE_SELECT	/;"	d	file:
LE_FIELD_CC_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define LE_FIELD_CC_SELECT	/;"	d	file:
LE_FIELD_NDEF_APP_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define LE_FIELD_NDEF_APP_SELECT	/;"	d	file:
LE_FIELD_NDEF_FILE_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define LE_FIELD_NDEF_FILE_SELECT	/;"	d	file:
LINE_LENGTH	COMMON/ptxCOMMON.h	/^#define LINE_LENGTH /;"	d
LastRFError	IOT_READER/ptx_IOT_READER.h	/^        uint8_t                     LastRFError;                        \/**< Last received RF-E/;"	m	struct:ptxIoTRd	typeref:typename:uint8_t
Len	IOT_READER/ptx_IOT_READER.h	/^    uint8_t                 Len;            \/**< Length *\/$/;"	m	struct:ptxIoTRd_ChipConfig	typeref:typename:uint8_t
Len	NSC/ptxNSC.h	/^    uint8_t                         Len;                        \/**< Length *\/$/;"	m	struct:ptxNSC_RfConfigTlv	typeref:typename:uint8_t
Length	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        Length;                         \/**< Length in byte *\/$/;"	m	struct:ptxNDEF_T2TOP_NDEF_TLV	typeref:typename:uint16_t
LifeCycle	NDEF/ptxNDEF_T2TOP.h	/^    ptxNDEF_TagLifeCycle_t          LifeCycle;             \/**< Tag Life-Cycle *\/$/;"	m	struct:ptxNDEF_T2TOP	typeref:typename:ptxNDEF_TagLifeCycle_t
LifeCycle	NDEF/ptxNDEF_T3TOP.h	/^    ptxNDEF_TagLifeCycle_t          LifeCycle;             \/**< Tag Life-Cycle *\/$/;"	m	struct:ptxNDEF_T3TOP	typeref:typename:ptxNDEF_TagLifeCycle_t
LifeCycle	NDEF/ptxNDEF_T4TOP.h	/^    ptxNDEF_TagLifeCycle_t          LifeCycle;             \/**< Tag Life-Cycle *\/$/;"	m	struct:ptxNDEF_T4TOP	typeref:typename:ptxNDEF_TagLifeCycle_t
LifeCycle	NDEF/ptxNDEF_T5TOP.h	/^    ptxNDEF_TagLifeCycle_t          LifeCycle;              \/**< Tag Life-Cycle *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:ptxNDEF_TagLifeCycle_t
ListenTypeA	HCE/ptxHce.h	/^    uint8_t     ListenTypeA;$/;"	m	struct:__anond974ec060108	typeref:typename:uint8_t
ListenTypeA	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     ListenTypeA;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
Ln	NDEF/ptxNDEF_T3TOP.h	/^    uint32_t                        Ln;                             \/**< size of actual stored /;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint32_t
LockArea	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        LockArea[PTX_T2TOP_MAX_NUMBER_LOCK_CONTROL * 2];            /;"	m	struct:ptxNDEF_T2TOP_LOCK_CONTROL_TLV	typeref:typename:uint16_t[]
LockBlockSupported	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         LockBlockSupported;         \/**< Lock Block supported *\/$/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint8_t
LockControlTLVs	NDEF/ptxNDEF_T2TOP.h	/^    ptxNDEF_T2TOP_LOCK_CONTROL_TLV_t                    LockControlTLVs;                        /;"	m	struct:ptxNDEF_T2TOP_TLV	typeref:typename:ptxNDEF_T2TOP_LOCK_CONTROL_TLV_t
LpcdState	IOT_READER/ptx_IOT_READER.h	/^        uint8_t                     LpcdState;                          \/**< State of the LPCD /;"	m	struct:ptxIoTRd	typeref:typename:uint8_t
MAX_NUMBER_OF_IN_PARAMETERS	COMMON/ptxCOMMON.h	/^#define MAX_NUMBER_OF_IN_PARAMETERS /;"	d
MLEN	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        MLEN;                           \/**< Length *\/$/;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint16_t
MLEN	NDEF/ptxNDEF_T5TOP.h	/^    uint16_t                        MLEN;                       \/**< Length *\/$/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint16_t
MLcDigit	NDEF/ptxNDEF_T4TOP.h	/^    uint16_t                        MLcDigit;               \/**< digit containing maximum CAPDU/;"	m	struct:ptxNDEF_T4TOP_CC	typeref:typename:uint16_t
MLeDigit	NDEF/ptxNDEF_T4TOP.h	/^    uint16_t                        MLeDigit;               \/**< digit containing maximum RAPDU/;"	m	struct:ptxNDEF_T4TOP_CC	typeref:typename:uint16_t
MRTI_Check	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint8_t             MRTI_Check;             \/**< Value stored for calculation of timeout va/;"	m	struct:ptxNativeTag_T3T	typeref:typename:uint8_t
MRTI_Update	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint32_t            MRTI_Update;            \/**< Value stored for calculation of timeout va/;"	m	struct:ptxNativeTag_T3T	typeref:typename:uint32_t
MagicNumber	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         MagicNumber;                    \/**< Magic Number *\/$/;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint8_t
MagicNumber	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         MagicNumber;                \/**< Magic Number *\/$/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint8_t
MajorVersion	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         MajorVersion;                   \/**< Version Information, m/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint8_t
MappingVersion	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         MappingVersion;         \/**< mapping version info, either 2/;"	m	struct:ptxNDEF_T4TOP_CC	typeref:typename:uint8_t
MaxNrOfEntries	HCE/ptxHce.h	/^    ptxHce_EventQueueRanges_t    MaxNrOfEntries;    \/**< Maximum number of entries *\/$/;"	m	struct:__anond974ec060608	typeref:typename:ptxHce_EventQueueRanges_t
MaxTransferUnit	NSC/ptxNSC.h	/^    uint32_t                    MaxTransferUnit;            \/**< Maximum amount of bytes that c/;"	m	struct:ptxNSC	typeref:typename:uint32_t
MemoryControlTLVs	NDEF/ptxNDEF_T2TOP.h	/^    ptxNDEF_T2TOP_MEMORY_CONTROL_TLV_t                  MemoryControlTLVs;                      /;"	m	struct:ptxNDEF_T2TOP_TLV	typeref:typename:ptxNDEF_T2TOP_MEMORY_CONTROL_TLV_t
MinorVersion	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         MinorVersion;                   \/**< Version Information, m/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint8_t
MiscSettings	NSC/ptxNSC.h	/^    uint8_t                 *MiscSettings;                      \/**< MISCELLANEOUS *\/$/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:uint8_t *
MiscSettings	NSC/ptxNSC.h	/^    uint8_t                 MiscSettings[PTX_NSC_MISC_RF_CONFIG_BUFFER_SIZE];   \/**< MISCELLANE/;"	m	struct:ptxNSC_RFMiscConfig_Param	typeref:typename:uint8_t[]
MiscSettingsFlags	NSC/ptxNSC.h	/^    uint8_t                 MiscSettingsFlags;                                  \/**< MISCELLANE/;"	m	struct:ptxNSC_RFMiscConfig_Param	typeref:typename:uint8_t
MiscSettings_Len	NSC/ptxNSC.h	/^    size_t                  MiscSettings_Len;                   \/**< MISCELLANEOUS Length*\/$/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:size_t
MiscSettings_Len	NSC/ptxNSC.h	/^    uint8_t                 MiscSettings_Len;                                   \/**< MISCELLANE/;"	m	struct:ptxNSC_RFMiscConfig_Param	typeref:typename:uint8_t
MultiBlockReadSupported	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         MultiBlockReadSupported;    \/**< Multi block read supported/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint8_t
NDEFAccessRead	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         NDEFAccessRead;         \/**< access condition for read *\/$/;"	m	struct:ptxNDEF_T4TOP_CC	typeref:typename:uint8_t
NDEFAccessWrite	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         NDEFAccessWrite;        \/**< access condition for write *\/$/;"	m	struct:ptxNDEF_T4TOP_CC	typeref:typename:uint8_t
NDEFFileIdentifier	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         NDEFFileIdentifier[2];  \/**< NDEF file identifier, 2 bytes /;"	m	struct:ptxNDEF_T4TOP_CC	typeref:typename:uint8_t[2]
NDEFFileSize	NDEF/ptxNDEF_T4TOP.h	/^    uint16_t                        NDEFFileSize;           \/**< size of the NDEF file in bytes/;"	m	struct:ptxNDEF_T4TOP_CC	typeref:typename:uint16_t
NDEFMessage	COMMON/ptxT4T.h	/^    uint8_t                 NDEFMessage[PTX_T4T_NDEF_MESSAGE_FILE_SIZE];$/;"	m	struct:ptxT4T	typeref:typename:uint8_t[]
NDEFTLV	NDEF/ptxNDEF_T2TOP.h	/^    ptxNDEF_T2TOP_NDEF_TLV_t                            NDEFTLV;                                /;"	m	struct:ptxNDEF_T2TOP_TLV	typeref:typename:ptxNDEF_T2TOP_NDEF_TLV_t
NDEFTLV	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         NDEFTLV[10];            \/**< stores NDEF TLV, 8 bytes for m/;"	m	struct:ptxNDEF_T4TOP_CC	typeref:typename:uint8_t[10]
NDEFTLVFound	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         NDEFTLVFound;                   \/**< NDEF TLV found check, /;"	m	struct:ptxNDEF_T2TOP_NDEF_TLV	typeref:typename:uint8_t
NDEF_BUFFER_SIZE	COMMON/ptxCOMMON.h	/^#define NDEF_BUFFER_SIZE /;"	d
NDEF_TLV_LENGTH	NDEF/ptxNDEF_T5TOP.h	/^    uint16_t                        NDEF_TLV_LENGTH;        \/**< NDEF TLV length *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:uint16_t
NDEF_TLV_POS_BN	NDEF/ptxNDEF_T5TOP.h	/^    uint16_t                        NDEF_TLV_POS_BN;        \/**< NDEF TLV POS BN *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:uint16_t
NDEF_TLV_POS_BY	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         NDEF_TLV_POS_BY;        \/**< NDEF TLV POS BY *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:uint8_t
NFCID1	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     NFCID1[PTX_IOTRD_TECH_A_NFCID1_MAX_SIZE];       \/**< RF-Technology Type-A. NFCI/;"	m	struct:ptxIoTRd_CardAParams	typeref:typename:uint8_t[]
NFCID1_LEN	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     NFCID1_LEN;                                     \/**< RF-Technology Type-A. NFCI/;"	m	struct:ptxIoTRd_CardAParams	typeref:typename:uint8_t
NFCID2	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint8_t             *NFCID2;                \/**< ID of the tag *\/$/;"	m	struct:ptxNativeTag_T3T	typeref:typename:uint8_t *
NFCID2	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint8_t             *NFCID2;                \/**< ID of the tag *\/$/;"	m	struct:ptxNativeTag_T3T_InitParams	typeref:typename:uint8_t *
NFCID2	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         *NFCID2;                        \/**< NFCID2 *\/$/;"	m	struct:ptxNDEF_T3TOP_InitParams	typeref:typename:uint8_t *
NFCID2Len	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint8_t             NFCID2Len;              \/**< Length of the ID *\/$/;"	m	struct:ptxNativeTag_T3T	typeref:typename:uint8_t
NFCID2Len	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint8_t             NFCID2Len;              \/**< Length of the ID *\/$/;"	m	struct:ptxNativeTag_T3T_InitParams	typeref:typename:uint8_t
NFCID2Len	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         NFCID2Len;                      \/**< Size of NFCID2 *\/$/;"	m	struct:ptxNDEF_T3TOP_InitParams	typeref:typename:uint8_t
NLEN	NDEF/ptxNDEF_T4TOP.h	/^    ptxNDEF_T4TOP_NLEN_t            NLEN;                  \/**< T4T NDEF file contents *\/$/;"	m	struct:ptxNDEF_T4TOP	typeref:typename:ptxNDEF_T4TOP_NLEN_t
NLEN	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         NLEN[4];                \/**< NLEN or ENLEN field *\/$/;"	m	struct:ptxNDEF_T4TOP_NLEN	typeref:typename:uint8_t[4]
NSC_ACT_LEN1	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^#define NSC_ACT_LEN1 /;"	d	file:
NSC_ACT_LEN1	NSC/ptxNSC.c	/^#define NSC_ACT_LEN1 /;"	d	file:
NSC_ACT_LEN2	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^#define NSC_ACT_LEN2 /;"	d	file:
NSC_ACT_LEN2	NSC/ptxNSC.c	/^#define NSC_ACT_LEN2 /;"	d	file:
NSC_ACT_LEN3	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^#define NSC_ACT_LEN3 /;"	d	file:
NSC_ACT_LEN3	NSC/ptxNSC.c	/^#define NSC_ACT_LEN3 /;"	d	file:
NSC_EventDebug	NSC/ptxNSC_Event.h	/^    NSC_EventDebug,                         \/**< NSC_DEBUG_NTF ( debug ) *\/$/;"	e	enum:ptxNscEventId
NSC_EventError	NSC/ptxNSC_Event.h	/^    NSC_EventError,                         \/**< NSC_ERROR_NTF ( Error ) *\/$/;"	e	enum:ptxNscEventId
NSC_EventRfAct_PassListen_A	NSC/ptxNSC_Event.h	/^    NSC_EventRfAct_PassListen_A,            \/**< NSC_RF_ACTIVATE_NTF ( NFC-A passive listen mod/;"	e	enum:ptxNscEventId
NSC_EventRfAct_PassPoll_A	NSC/ptxNSC_Event.h	/^    NSC_EventRfAct_PassPoll_A,              \/**< NSC_RF_ACTIVATE_NTF ( NFC-A passive poll mode /;"	e	enum:ptxNscEventId
NSC_EventRfAct_PassPoll_A_Propr	NSC/ptxNSC_Event.h	/^    NSC_EventRfAct_PassPoll_A_Propr,        \/**< NSC_RF_ACTIVATE_NTF ( NFC-A proprietary passiv/;"	e	enum:ptxNscEventId
NSC_EventRfAct_PassPoll_B	NSC/ptxNSC_Event.h	/^    NSC_EventRfAct_PassPoll_B,              \/**< NSC_RF_ACTIVATE_NTF ( NFC-B passive poll mode /;"	e	enum:ptxNscEventId
NSC_EventRfAct_PassPoll_F	NSC/ptxNSC_Event.h	/^    NSC_EventRfAct_PassPoll_F,              \/**< NSC_RF_ACTIVATE_NTF ( NFC-F passive poll mode /;"	e	enum:ptxNscEventId
NSC_EventRfAct_PassPoll_V	NSC/ptxNSC_Event.h	/^    NSC_EventRfAct_PassPoll_V,              \/**< NSC_RF_ACTIVATE_NTF ( NFC-V passive poll mode /;"	e	enum:ptxNscEventId
NSC_EventRfDeact	NSC/ptxNSC_Event.h	/^    NSC_EventRfDeact,                       \/**< NSC_RF_DEACTIVATE_NTF ( RF device deactivation/;"	e	enum:ptxNscEventId
NSC_EventRfDisc_LastOne	NSC/ptxNSC_Event.h	/^    NSC_EventRfDisc_LastOne,                \/**< An empty NSC_RF_DISCOVER_NTF (without RF_TECH /;"	e	enum:ptxNscEventId
NSC_EventRfDisc_PassPoll_A	NSC/ptxNSC_Event.h	/^    NSC_EventRfDisc_PassPoll_A,             \/**< NSC_RF_DISCOVER_NTF ( NFC-A passive poll mode /;"	e	enum:ptxNscEventId
NSC_EventRfDisc_PassPoll_A_Propr	NSC/ptxNSC_Event.h	/^    NSC_EventRfDisc_PassPoll_A_Propr,       \/**< NSC_RF_DISCOVER_NTF ( NFC-A proprietary passiv/;"	e	enum:ptxNscEventId
NSC_EventRfDisc_PassPoll_B	NSC/ptxNSC_Event.h	/^    NSC_EventRfDisc_PassPoll_B,             \/**< NSC_RF_DISCOVER_NTF ( NFC-B passive poll mode /;"	e	enum:ptxNscEventId
NSC_EventRfDisc_PassPoll_F	NSC/ptxNSC_Event.h	/^    NSC_EventRfDisc_PassPoll_F,             \/**< NSC_RF_DISCOVER_NTF ( NFC-F passive poll mode /;"	e	enum:ptxNscEventId
NSC_EventRfDisc_PassPoll_V	NSC/ptxNSC_Event.h	/^    NSC_EventRfDisc_PassPoll_V,             \/**< NSC_RF_DISCOVER_NTF ( NFC-V passive poll mode /;"	e	enum:ptxNscEventId
NSC_EventRfField_off	NSC/ptxNSC_Event.h	/^    NSC_EventRfField_off,                   \/**< NSC_RF_FIELD_NTF ( RF field off ) *\/$/;"	e	enum:ptxNscEventId
NSC_EventRfField_on	NSC/ptxNSC_Event.h	/^    NSC_EventRfField_on,                    \/**< NSC_RF_FIELD_NTF ( RF field on ) *\/$/;"	e	enum:ptxNscEventId
NSC_Event_NfcCltMsg	NSC/ptxNSC_Event.h	/^    NSC_Event_NfcCltMsg,                    \/**< NSC_RF_CLT_MSG  *\/$/;"	e	enum:ptxNscEventId
NSC_Event_NfcDataMsg	NSC/ptxNSC_Event.h	/^    NSC_Event_NfcDataMsg,                   \/**< NSC_RF_MSG ( NFC transparent data (raw) messag/;"	e	enum:ptxNscEventId
NSC_Event_NfcDataMsg_Chained	NSC/ptxNSC_Event.h	/^    NSC_Event_NfcDataMsg_Chained,           \/**< NSC_RF_MSG_CHAINED ( NFC transparent data (raw/;"	e	enum:ptxNscEventId
NSC_Event_RfCtr_ACK	NSC/ptxNSC_Event.h	/^    NSC_Event_RfCtr_ACK,                    \/**< NSC_RFD_CTRL. Acknowledge (ACK) for ISO-DEP on/;"	e	enum:ptxNscEventId
NSC_Event_RfCtr_AttCmd	NSC/ptxNSC_Event.h	/^    NSC_Event_RfCtr_AttCmd,                 \/**< NSC_RFD_CTRL. Attention (ATN) for NFC-DEP only/;"	e	enum:ptxNscEventId
NSC_LPCDTrigered	NSC/ptxNSC_Event.h	/^    NSC_LPCDTrigered,                       \/**< NSC_RF_LPCD_NTF ( Error ) *\/$/;"	e	enum:ptxNscEventId
NSC_RfTimeOutError	NSC/ptxNSC_Event.h	/^    NSC_RfTimeOutError,                    \/**< NSC_ERROR_NTF ( Error ) *\/$/;"	e	enum:ptxNscEventId
NUM_OF_SECTIONS	NSC/ptxNSC_uCODE.h	/^#define NUM_OF_SECTIONS /;"	d
NativeTagT2T	NDEF/ptxNDEF_T2TOP.h	/^    ptxNativeTag_T2T_t              NativeTagT2T;          \/**< T2T Native Tag Component *\/$/;"	m	struct:ptxNDEF_T2TOP	typeref:typename:ptxNativeTag_T2T_t
NativeTagT3T	NDEF/ptxNDEF_T3TOP.h	/^    ptxNativeTag_T3T_t              NativeTagT3T;          \/**< T3T Native Tag Component *\/$/;"	m	struct:ptxNDEF_T3TOP	typeref:typename:ptxNativeTag_T3T_t
NativeTagT4T	NDEF/ptxNDEF_T4TOP.h	/^    ptxNativeTag_T4T_t              NativeTagT4T;          \/**< T4T Native Tag Component *\/$/;"	m	struct:ptxNDEF_T4TOP	typeref:typename:ptxNativeTag_T4T_t
NativeTagT5T	NDEF/ptxNDEF_T5TOP.h	/^    ptxNativeTag_T5T_t              NativeTagT5T;           \/**< T5T Native Tag Component *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:ptxNativeTag_T5T_t
Nbc	NDEF/ptxNDEF_T3TOP.h	/^    uint16_t                        Nbc;                            \/**< number of NDEF data bl/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint16_t
Nbr	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         Nbr;                            \/**< maximum number of bloc/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint8_t
NbrNLENBytes	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         NbrNLENBytes;           \/**< number of relevant (E)NLEN byt/;"	m	struct:ptxNDEF_T4TOP_NLEN	typeref:typename:uint8_t
NbrReservedBits	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         NbrReservedBits[PTX_T2TOP_MAX_NUMBER_LOCK_CONTROL];         /;"	m	struct:ptxNDEF_T2TOP_LOCK_CONTROL_TLV	typeref:typename:uint8_t[]
Nbw	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         Nbw;                            \/**< maximum number of bloc/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint8_t
NewRspReceived	NSC/ptxNSC.h	/^    uint8_t         NewRspReceived;                         \/**< Boolean used to report a new R/;"	m	struct:ptxNSC_Rsp	typeref:typename:uint8_t
NfcForumMode	NSC/ptxNSC.h	/^    NfcForumMode,                                               \/**< NFC-Forum polling mode *\/$/;"	e	enum:ptxNSC_PollType
NfcId1	NSC/ptxNSC.h	/^    uint8_t                     NfcId1[PTX_NSC_MAXIMUM_NFCID1_LEN];                 \/**< Buffer/;"	m	struct:ptxNSC_RfActTech_A_Param	typeref:typename:uint8_t[]
NfcId1	NSC/ptxNSC.h	/^    uint8_t                     NfcId1[PTX_NSC_MAXIMUM_NFCID1_LEN];                 \/**< NFCID /;"	m	struct:ptxNSC_RfActTech_APropr_Param	typeref:typename:uint8_t[]
NfcId1Len	NSC/ptxNSC.h	/^    uint8_t                     NfcId1Len;                                          \/**< NFCID /;"	m	struct:ptxNSC_RfActTech_APropr_Param	typeref:typename:uint8_t
NfcId1_len	NSC/ptxNSC.h	/^    size_t                      NfcId1_len;                                         \/**< Length/;"	m	struct:ptxNSC_RfActTech_A_Param	typeref:typename:size_t
NfcId2	NSC/ptxNSC.h	/^    uint8_t                     NfcId2[PTX_NSC_NFCID2_LEN];                         \/**< Buffer/;"	m	struct:ptxNSC_RfActTech_F_Param	typeref:typename:uint8_t[]
NmaxB	NDEF/ptxNDEF_T3TOP.h	/^    uint16_t                        NmaxB;                          \/**< maximum number of bloc/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint16_t
NoEvent	NSC/ptxNSC_Event.h	/^    NoEvent,                                \/**< No Event. *\/$/;"	e	enum:ptxNscEventId
NrCards	IOT_READER/ptx_IOT_READER.h	/^    uint8_t                     NrCards;                                                \/**< Re/;"	m	struct:ptxIoTRd_CardRegistry	typeref:typename:uint8_t
NrOfEntries	HCE/ptxHce.h	/^    ptxHce_EventQueueRanges_t    NrOfEntries;   \/**< Number of entries *\/$/;"	m	struct:__anond974ec060608	typeref:typename:ptxHce_EventQueueRanges_t
NrTests	FELICA_DTE/ptxFeliCa_DTE.h	/^    uint8_t                             NrTests;            \/**< Number of Tests\/Repetitions */;"	m	struct:ptxFeliCa_DTE_PerformanceTest	typeref:typename:uint8_t
NrTestsProcessed	FELICA_DTE/ptxFeliCa_DTE.h	/^    uint8_t                             NrTestsProcessed;   \/**< Info how many tests were execu/;"	m	struct:ptxFeliCa_DTE_TestProgressParams	typeref:typename:uint8_t
Nsc	GPIO/ptxGPIO.h	/^        struct ptxNSC               *Nsc;               \/**< Initialized instance of NSC compon/;"	m	struct:ptxGPIO_InitParams	typeref:struct:ptxNSC *
Nsc	GPIO/ptxGPIO.h	/^    struct ptxNSC               *Nsc;                   \/**< Reference to NSC Component.*\/$/;"	m	struct:ptxGPIO	typeref:struct:ptxNSC *
Nsc	HCE/ptxHce.h	/^    struct ptxNSC           *Nsc;               \/**< Reference to Nsc Component.*\/$/;"	m	struct:ptxHce	typeref:struct:ptxNSC *
Nsc	IOT_READER/ptx_IOT_READER.h	/^        struct ptxNSC               *Nsc;                               \/**< Reference to Nsc C/;"	m	struct:ptxIoTRd	typeref:struct:ptxNSC *
Nsc	RF_TEST/ptxRF_Test.h	/^    struct ptxNSC               *Nsc;                   \/**< Initialized instance of NSC compon/;"	m	struct:ptxRF_Test_InitParams	typeref:struct:ptxNSC *
Nsc	RF_TEST/ptxRF_Test.h	/^    struct ptxNSC               *Nsc;               \/**< Initialized instance of NSC component /;"	m	struct:ptxRF_Test	typeref:struct:ptxNSC *
NscMode	NSC/ptxNSC.h	/^    ptxNSC_Mode_t               NscMode;                    \/**< Nsc Mode.*\/$/;"	m	struct:ptxNSC	typeref:typename:ptxNSC_Mode_t
NscMode_HW	NSC/ptxNSC.h	/^    NscMode_HW,                                             \/**< HW Mode. HW operations allowed/;"	e	enum:ptxNSC_Mode
NscMode_SYS	NSC/ptxNSC.h	/^    NscMode_SYS                                             \/**< HW Mode. HW operations not all/;"	e	enum:ptxNSC_Mode
NscRsp	NSC/ptxNSC.h	/^    ptxNSC_Rsp_t                NscRsp;                     \/**< Nsc Rsp container.*\/$/;"	m	struct:ptxNSC	typeref:typename:ptxNSC_Rsp_t
NscSystemParams	NSC/ptxNSC.c	/^ptxNSC_System_t     NscSystemParams;$/;"	v	typeref:typename:ptxNSC_System_t
NscWriteBuffer_0	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_0,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_1	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_1,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_10	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_10,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_11	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_11,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_12	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_12,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_13	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_13,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_14	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_14,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_15	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_15,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_2	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_2,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_3	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_3,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_4	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_4,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_5	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_5,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_6	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_6,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_7	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_7,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_8	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_8,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_9	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_9,$/;"	e	enum:ptxNscHal_BufferId
NscWriteBuffer_Max	NSC/ptxNSC_Hal.h	/^    NscWriteBuffer_Max$/;"	e	enum:ptxNscHal_BufferId
NumOfParams	NSC/ptxNSC.h	/^    size_t                      NumOfParams;                                        \/**< Used P/;"	m	struct:ptxNSC_RfSetParams_Par	typeref:typename:size_t
NumOfRead	NSC/ptxNSC.h	/^    size_t                      NumOfRead;                                      \/**< Number of /;"	m	struct:ptxNSC_ReadCmd_Par	typeref:typename:size_t
NumOfWrite	NSC/ptxNSC.h	/^    size_t                      NumOfWrite;                                     \/**< Number of /;"	m	struct:ptxNSC_WriteCmd_Par	typeref:typename:size_t
NumTotalBits	IOT_READER/ptx_IOT_READER.h	/^        size_t                    NumTotalBits;                             \/**< RF Message num/;"	m	struct:ptxIoTRd_RfMsg	typeref:typename:size_t
NumTotalBitsSecondary	NSC/ptxNSC_Event.h	/^    size_t                   NumTotalBitsSecondary;             \/**< Number of bits provided in/;"	m	struct:ptxNSC_Event	typeref:typename:size_t
NumberOfBlocks	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        NumberOfBlocks;                 \/**< NUmber of Blocks each /;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint16_t
NumberOfSectors	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                                             NumberOfSectors;                        /;"	m	struct:ptxNDEF_T2TOP_Sector	typeref:typename:uint8_t
NumberOfTLVs	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         NumberOfTLVs;                                               /;"	m	struct:ptxNDEF_T2TOP_LOCK_CONTROL_TLV	typeref:typename:uint8_t
NumberOfTLVs	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         NumberOfTLVs;                                               /;"	m	struct:ptxNDEF_T2TOP_MEMORY_CONTROL_TLV	typeref:typename:uint8_t
P1_CC_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define P1_CC_SELECT	/;"	d	file:
P1_NDEF_APP_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define P1_NDEF_APP_SELECT	/;"	d	file:
P1_NDEF_FILE_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define P1_NDEF_FILE_SELECT	/;"	d	file:
P2_CC_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define P2_CC_SELECT	/;"	d	file:
P2_NDEF_APP_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define P2_NDEF_APP_SELECT	/;"	d	file:
P2_NDEF_FILE_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define P2_NDEF_FILE_SELECT	/;"	d	file:
PAD_GPIO10_REG	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG /;"	d
PAD_GPIO10_REG_GPIO10_C_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_C_MASK /;"	d
PAD_GPIO10_REG_GPIO10_C_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_C_MASK_INV /;"	d
PAD_GPIO10_REG_GPIO10_C_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_C_POS /;"	d
PAD_GPIO10_REG_GPIO10_C_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_C_RST /;"	d
PAD_GPIO10_REG_GPIO10_DS_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_DS_MASK /;"	d
PAD_GPIO10_REG_GPIO10_DS_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_DS_MASK_INV /;"	d
PAD_GPIO10_REG_GPIO10_DS_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_DS_POS /;"	d
PAD_GPIO10_REG_GPIO10_DS_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_DS_RST /;"	d
PAD_GPIO10_REG_GPIO10_IE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_IE_MASK /;"	d
PAD_GPIO10_REG_GPIO10_IE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_IE_MASK_INV /;"	d
PAD_GPIO10_REG_GPIO10_IE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_IE_POS /;"	d
PAD_GPIO10_REG_GPIO10_IE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_IE_RST /;"	d
PAD_GPIO10_REG_GPIO10_I_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_I_MASK /;"	d
PAD_GPIO10_REG_GPIO10_I_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_I_MASK_INV /;"	d
PAD_GPIO10_REG_GPIO10_I_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_I_POS /;"	d
PAD_GPIO10_REG_GPIO10_I_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_I_RST /;"	d
PAD_GPIO10_REG_GPIO10_OEN_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_OEN_MASK /;"	d
PAD_GPIO10_REG_GPIO10_OEN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_OEN_MASK_INV /;"	d
PAD_GPIO10_REG_GPIO10_OEN_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_OEN_POS /;"	d
PAD_GPIO10_REG_GPIO10_OEN_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_OEN_RST /;"	d
PAD_GPIO10_REG_GPIO10_PE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_PE_MASK /;"	d
PAD_GPIO10_REG_GPIO10_PE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_PE_MASK_INV /;"	d
PAD_GPIO10_REG_GPIO10_PE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_PE_POS /;"	d
PAD_GPIO10_REG_GPIO10_PE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_PE_RST /;"	d
PAD_GPIO10_REG_GPIO10_TE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_TE_MASK /;"	d
PAD_GPIO10_REG_GPIO10_TE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_TE_MASK_INV /;"	d
PAD_GPIO10_REG_GPIO10_TE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_TE_POS /;"	d
PAD_GPIO10_REG_GPIO10_TE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_GPIO10_TE_RST /;"	d
PAD_GPIO10_REG_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO10_REG_RST /;"	d
PAD_GPIO11_REG	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG /;"	d
PAD_GPIO11_REG_GPIO11_C_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_C_MASK /;"	d
PAD_GPIO11_REG_GPIO11_C_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_C_MASK_INV /;"	d
PAD_GPIO11_REG_GPIO11_C_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_C_POS /;"	d
PAD_GPIO11_REG_GPIO11_C_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_C_RST /;"	d
PAD_GPIO11_REG_GPIO11_DS_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_DS_MASK /;"	d
PAD_GPIO11_REG_GPIO11_DS_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_DS_MASK_INV /;"	d
PAD_GPIO11_REG_GPIO11_DS_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_DS_POS /;"	d
PAD_GPIO11_REG_GPIO11_DS_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_DS_RST /;"	d
PAD_GPIO11_REG_GPIO11_IE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_IE_MASK /;"	d
PAD_GPIO11_REG_GPIO11_IE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_IE_MASK_INV /;"	d
PAD_GPIO11_REG_GPIO11_IE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_IE_POS /;"	d
PAD_GPIO11_REG_GPIO11_IE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_IE_RST /;"	d
PAD_GPIO11_REG_GPIO11_I_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_I_MASK /;"	d
PAD_GPIO11_REG_GPIO11_I_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_I_MASK_INV /;"	d
PAD_GPIO11_REG_GPIO11_I_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_I_POS /;"	d
PAD_GPIO11_REG_GPIO11_I_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_I_RST /;"	d
PAD_GPIO11_REG_GPIO11_OEN_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_OEN_MASK /;"	d
PAD_GPIO11_REG_GPIO11_OEN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_OEN_MASK_INV /;"	d
PAD_GPIO11_REG_GPIO11_OEN_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_OEN_POS /;"	d
PAD_GPIO11_REG_GPIO11_OEN_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_OEN_RST /;"	d
PAD_GPIO11_REG_GPIO11_PE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_PE_MASK /;"	d
PAD_GPIO11_REG_GPIO11_PE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_PE_MASK_INV /;"	d
PAD_GPIO11_REG_GPIO11_PE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_PE_POS /;"	d
PAD_GPIO11_REG_GPIO11_PE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_PE_RST /;"	d
PAD_GPIO11_REG_GPIO11_TE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_TE_MASK /;"	d
PAD_GPIO11_REG_GPIO11_TE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_TE_MASK_INV /;"	d
PAD_GPIO11_REG_GPIO11_TE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_TE_POS /;"	d
PAD_GPIO11_REG_GPIO11_TE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_GPIO11_TE_RST /;"	d
PAD_GPIO11_REG_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO11_REG_RST /;"	d
PAD_GPIO12_REG	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG /;"	d
PAD_GPIO12_REG_GPIO12_C_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_C_MASK /;"	d
PAD_GPIO12_REG_GPIO12_C_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_C_MASK_INV /;"	d
PAD_GPIO12_REG_GPIO12_C_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_C_POS /;"	d
PAD_GPIO12_REG_GPIO12_C_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_C_RST /;"	d
PAD_GPIO12_REG_GPIO12_DS_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_DS_MASK /;"	d
PAD_GPIO12_REG_GPIO12_DS_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_DS_MASK_INV /;"	d
PAD_GPIO12_REG_GPIO12_DS_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_DS_POS /;"	d
PAD_GPIO12_REG_GPIO12_DS_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_DS_RST /;"	d
PAD_GPIO12_REG_GPIO12_IE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_IE_MASK /;"	d
PAD_GPIO12_REG_GPIO12_IE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_IE_MASK_INV /;"	d
PAD_GPIO12_REG_GPIO12_IE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_IE_POS /;"	d
PAD_GPIO12_REG_GPIO12_IE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_IE_RST /;"	d
PAD_GPIO12_REG_GPIO12_I_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_I_MASK /;"	d
PAD_GPIO12_REG_GPIO12_I_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_I_MASK_INV /;"	d
PAD_GPIO12_REG_GPIO12_I_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_I_POS /;"	d
PAD_GPIO12_REG_GPIO12_I_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_I_RST /;"	d
PAD_GPIO12_REG_GPIO12_OEN_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_OEN_MASK /;"	d
PAD_GPIO12_REG_GPIO12_OEN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_OEN_MASK_INV /;"	d
PAD_GPIO12_REG_GPIO12_OEN_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_OEN_POS /;"	d
PAD_GPIO12_REG_GPIO12_OEN_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_OEN_RST /;"	d
PAD_GPIO12_REG_GPIO12_PE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_PE_MASK /;"	d
PAD_GPIO12_REG_GPIO12_PE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_PE_MASK_INV /;"	d
PAD_GPIO12_REG_GPIO12_PE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_PE_POS /;"	d
PAD_GPIO12_REG_GPIO12_PE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_PE_RST /;"	d
PAD_GPIO12_REG_GPIO12_TE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_TE_MASK /;"	d
PAD_GPIO12_REG_GPIO12_TE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_TE_MASK_INV /;"	d
PAD_GPIO12_REG_GPIO12_TE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_TE_POS /;"	d
PAD_GPIO12_REG_GPIO12_TE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_GPIO12_TE_RST /;"	d
PAD_GPIO12_REG_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO12_REG_RST /;"	d
PAD_GPIO5_REG	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG /;"	d
PAD_GPIO5_REG_GPIO5_C_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_C_MASK /;"	d
PAD_GPIO5_REG_GPIO5_C_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_C_MASK_INV /;"	d
PAD_GPIO5_REG_GPIO5_C_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_C_POS /;"	d
PAD_GPIO5_REG_GPIO5_C_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_C_RST /;"	d
PAD_GPIO5_REG_GPIO5_DS_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_DS_MASK /;"	d
PAD_GPIO5_REG_GPIO5_DS_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_DS_MASK_INV /;"	d
PAD_GPIO5_REG_GPIO5_DS_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_DS_POS /;"	d
PAD_GPIO5_REG_GPIO5_DS_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_DS_RST /;"	d
PAD_GPIO5_REG_GPIO5_IE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_IE_MASK /;"	d
PAD_GPIO5_REG_GPIO5_IE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_IE_MASK_INV /;"	d
PAD_GPIO5_REG_GPIO5_IE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_IE_POS /;"	d
PAD_GPIO5_REG_GPIO5_IE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_IE_RST /;"	d
PAD_GPIO5_REG_GPIO5_I_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_I_MASK /;"	d
PAD_GPIO5_REG_GPIO5_I_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_I_MASK_INV /;"	d
PAD_GPIO5_REG_GPIO5_I_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_I_POS /;"	d
PAD_GPIO5_REG_GPIO5_I_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_I_RST /;"	d
PAD_GPIO5_REG_GPIO5_OEN_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_OEN_MASK /;"	d
PAD_GPIO5_REG_GPIO5_OEN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_OEN_MASK_INV /;"	d
PAD_GPIO5_REG_GPIO5_OEN_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_OEN_POS /;"	d
PAD_GPIO5_REG_GPIO5_OEN_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_OEN_RST /;"	d
PAD_GPIO5_REG_GPIO5_PE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_PE_MASK /;"	d
PAD_GPIO5_REG_GPIO5_PE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_PE_MASK_INV /;"	d
PAD_GPIO5_REG_GPIO5_PE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_PE_POS /;"	d
PAD_GPIO5_REG_GPIO5_PE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_PE_RST /;"	d
PAD_GPIO5_REG_GPIO5_SFE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_SFE_MASK /;"	d
PAD_GPIO5_REG_GPIO5_SFE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_SFE_MASK_INV /;"	d
PAD_GPIO5_REG_GPIO5_SFE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_SFE_POS /;"	d
PAD_GPIO5_REG_GPIO5_SFE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_SFE_RST /;"	d
PAD_GPIO5_REG_GPIO5_TE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_TE_MASK /;"	d
PAD_GPIO5_REG_GPIO5_TE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_TE_MASK_INV /;"	d
PAD_GPIO5_REG_GPIO5_TE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_TE_POS /;"	d
PAD_GPIO5_REG_GPIO5_TE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_GPIO5_TE_RST /;"	d
PAD_GPIO5_REG_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO5_REG_RST /;"	d
PAD_GPIO6_REG	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG /;"	d
PAD_GPIO6_REG_GPIO6_C_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_C_MASK /;"	d
PAD_GPIO6_REG_GPIO6_C_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_C_MASK_INV /;"	d
PAD_GPIO6_REG_GPIO6_C_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_C_POS /;"	d
PAD_GPIO6_REG_GPIO6_C_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_C_RST /;"	d
PAD_GPIO6_REG_GPIO6_DS_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_DS_MASK /;"	d
PAD_GPIO6_REG_GPIO6_DS_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_DS_MASK_INV /;"	d
PAD_GPIO6_REG_GPIO6_DS_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_DS_POS /;"	d
PAD_GPIO6_REG_GPIO6_DS_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_DS_RST /;"	d
PAD_GPIO6_REG_GPIO6_IE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_IE_MASK /;"	d
PAD_GPIO6_REG_GPIO6_IE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_IE_MASK_INV /;"	d
PAD_GPIO6_REG_GPIO6_IE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_IE_POS /;"	d
PAD_GPIO6_REG_GPIO6_IE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_IE_RST /;"	d
PAD_GPIO6_REG_GPIO6_I_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_I_MASK /;"	d
PAD_GPIO6_REG_GPIO6_I_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_I_MASK_INV /;"	d
PAD_GPIO6_REG_GPIO6_I_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_I_POS /;"	d
PAD_GPIO6_REG_GPIO6_I_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_I_RST /;"	d
PAD_GPIO6_REG_GPIO6_OEN_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_OEN_MASK /;"	d
PAD_GPIO6_REG_GPIO6_OEN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_OEN_MASK_INV /;"	d
PAD_GPIO6_REG_GPIO6_OEN_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_OEN_POS /;"	d
PAD_GPIO6_REG_GPIO6_OEN_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_OEN_RST /;"	d
PAD_GPIO6_REG_GPIO6_PE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_PE_MASK /;"	d
PAD_GPIO6_REG_GPIO6_PE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_PE_MASK_INV /;"	d
PAD_GPIO6_REG_GPIO6_PE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_PE_POS /;"	d
PAD_GPIO6_REG_GPIO6_PE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_PE_RST /;"	d
PAD_GPIO6_REG_GPIO6_SFE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_SFE_MASK /;"	d
PAD_GPIO6_REG_GPIO6_SFE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_SFE_MASK_INV /;"	d
PAD_GPIO6_REG_GPIO6_SFE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_SFE_POS /;"	d
PAD_GPIO6_REG_GPIO6_SFE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_SFE_RST /;"	d
PAD_GPIO6_REG_GPIO6_TE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_TE_MASK /;"	d
PAD_GPIO6_REG_GPIO6_TE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_TE_MASK_INV /;"	d
PAD_GPIO6_REG_GPIO6_TE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_TE_POS /;"	d
PAD_GPIO6_REG_GPIO6_TE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_GPIO6_TE_RST /;"	d
PAD_GPIO6_REG_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO6_REG_RST /;"	d
PAD_GPIO7_REG	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG /;"	d
PAD_GPIO7_REG_GPIO7_C_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_C_MASK /;"	d
PAD_GPIO7_REG_GPIO7_C_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_C_MASK_INV /;"	d
PAD_GPIO7_REG_GPIO7_C_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_C_POS /;"	d
PAD_GPIO7_REG_GPIO7_C_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_C_RST /;"	d
PAD_GPIO7_REG_GPIO7_DS_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_DS_MASK /;"	d
PAD_GPIO7_REG_GPIO7_DS_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_DS_MASK_INV /;"	d
PAD_GPIO7_REG_GPIO7_DS_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_DS_POS /;"	d
PAD_GPIO7_REG_GPIO7_DS_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_DS_RST /;"	d
PAD_GPIO7_REG_GPIO7_IE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_IE_MASK /;"	d
PAD_GPIO7_REG_GPIO7_IE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_IE_MASK_INV /;"	d
PAD_GPIO7_REG_GPIO7_IE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_IE_POS /;"	d
PAD_GPIO7_REG_GPIO7_IE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_IE_RST /;"	d
PAD_GPIO7_REG_GPIO7_I_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_I_MASK /;"	d
PAD_GPIO7_REG_GPIO7_I_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_I_MASK_INV /;"	d
PAD_GPIO7_REG_GPIO7_I_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_I_POS /;"	d
PAD_GPIO7_REG_GPIO7_I_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_I_RST /;"	d
PAD_GPIO7_REG_GPIO7_OEN_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_OEN_MASK /;"	d
PAD_GPIO7_REG_GPIO7_OEN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_OEN_MASK_INV /;"	d
PAD_GPIO7_REG_GPIO7_OEN_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_OEN_POS /;"	d
PAD_GPIO7_REG_GPIO7_OEN_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_OEN_RST /;"	d
PAD_GPIO7_REG_GPIO7_PE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_PE_MASK /;"	d
PAD_GPIO7_REG_GPIO7_PE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_PE_MASK_INV /;"	d
PAD_GPIO7_REG_GPIO7_PE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_PE_POS /;"	d
PAD_GPIO7_REG_GPIO7_PE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_PE_RST /;"	d
PAD_GPIO7_REG_GPIO7_SFE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_SFE_MASK /;"	d
PAD_GPIO7_REG_GPIO7_SFE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_SFE_MASK_INV /;"	d
PAD_GPIO7_REG_GPIO7_SFE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_SFE_POS /;"	d
PAD_GPIO7_REG_GPIO7_SFE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_SFE_RST /;"	d
PAD_GPIO7_REG_GPIO7_TE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_TE_MASK /;"	d
PAD_GPIO7_REG_GPIO7_TE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_TE_MASK_INV /;"	d
PAD_GPIO7_REG_GPIO7_TE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_TE_POS /;"	d
PAD_GPIO7_REG_GPIO7_TE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_GPIO7_TE_RST /;"	d
PAD_GPIO7_REG_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO7_REG_RST /;"	d
PAD_GPIO8_REG	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG /;"	d
PAD_GPIO8_REG_GPIO8_C_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_C_MASK /;"	d
PAD_GPIO8_REG_GPIO8_C_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_C_MASK_INV /;"	d
PAD_GPIO8_REG_GPIO8_C_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_C_POS /;"	d
PAD_GPIO8_REG_GPIO8_C_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_C_RST /;"	d
PAD_GPIO8_REG_GPIO8_DS_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_DS_MASK /;"	d
PAD_GPIO8_REG_GPIO8_DS_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_DS_MASK_INV /;"	d
PAD_GPIO8_REG_GPIO8_DS_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_DS_POS /;"	d
PAD_GPIO8_REG_GPIO8_DS_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_DS_RST /;"	d
PAD_GPIO8_REG_GPIO8_IE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_IE_MASK /;"	d
PAD_GPIO8_REG_GPIO8_IE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_IE_MASK_INV /;"	d
PAD_GPIO8_REG_GPIO8_IE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_IE_POS /;"	d
PAD_GPIO8_REG_GPIO8_IE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_IE_RST /;"	d
PAD_GPIO8_REG_GPIO8_I_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_I_MASK /;"	d
PAD_GPIO8_REG_GPIO8_I_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_I_MASK_INV /;"	d
PAD_GPIO8_REG_GPIO8_I_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_I_POS /;"	d
PAD_GPIO8_REG_GPIO8_I_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_I_RST /;"	d
PAD_GPIO8_REG_GPIO8_OEN_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_OEN_MASK /;"	d
PAD_GPIO8_REG_GPIO8_OEN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_OEN_MASK_INV /;"	d
PAD_GPIO8_REG_GPIO8_OEN_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_OEN_POS /;"	d
PAD_GPIO8_REG_GPIO8_OEN_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_OEN_RST /;"	d
PAD_GPIO8_REG_GPIO8_PE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_PE_MASK /;"	d
PAD_GPIO8_REG_GPIO8_PE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_PE_MASK_INV /;"	d
PAD_GPIO8_REG_GPIO8_PE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_PE_POS /;"	d
PAD_GPIO8_REG_GPIO8_PE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_PE_RST /;"	d
PAD_GPIO8_REG_GPIO8_SFE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_SFE_MASK /;"	d
PAD_GPIO8_REG_GPIO8_SFE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_SFE_MASK_INV /;"	d
PAD_GPIO8_REG_GPIO8_SFE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_SFE_POS /;"	d
PAD_GPIO8_REG_GPIO8_SFE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_SFE_RST /;"	d
PAD_GPIO8_REG_GPIO8_TE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_TE_MASK /;"	d
PAD_GPIO8_REG_GPIO8_TE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_TE_MASK_INV /;"	d
PAD_GPIO8_REG_GPIO8_TE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_TE_POS /;"	d
PAD_GPIO8_REG_GPIO8_TE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_GPIO8_TE_RST /;"	d
PAD_GPIO8_REG_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO8_REG_RST /;"	d
PAD_GPIO9_REG	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG /;"	d
PAD_GPIO9_REG_GPIO9_C_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_C_MASK /;"	d
PAD_GPIO9_REG_GPIO9_C_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_C_MASK_INV /;"	d
PAD_GPIO9_REG_GPIO9_C_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_C_POS /;"	d
PAD_GPIO9_REG_GPIO9_C_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_C_RST /;"	d
PAD_GPIO9_REG_GPIO9_DS_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_DS_MASK /;"	d
PAD_GPIO9_REG_GPIO9_DS_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_DS_MASK_INV /;"	d
PAD_GPIO9_REG_GPIO9_DS_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_DS_POS /;"	d
PAD_GPIO9_REG_GPIO9_DS_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_DS_RST /;"	d
PAD_GPIO9_REG_GPIO9_IE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_IE_MASK /;"	d
PAD_GPIO9_REG_GPIO9_IE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_IE_MASK_INV /;"	d
PAD_GPIO9_REG_GPIO9_IE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_IE_POS /;"	d
PAD_GPIO9_REG_GPIO9_IE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_IE_RST /;"	d
PAD_GPIO9_REG_GPIO9_I_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_I_MASK /;"	d
PAD_GPIO9_REG_GPIO9_I_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_I_MASK_INV /;"	d
PAD_GPIO9_REG_GPIO9_I_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_I_POS /;"	d
PAD_GPIO9_REG_GPIO9_I_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_I_RST /;"	d
PAD_GPIO9_REG_GPIO9_OEN_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_OEN_MASK /;"	d
PAD_GPIO9_REG_GPIO9_OEN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_OEN_MASK_INV /;"	d
PAD_GPIO9_REG_GPIO9_OEN_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_OEN_POS /;"	d
PAD_GPIO9_REG_GPIO9_OEN_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_OEN_RST /;"	d
PAD_GPIO9_REG_GPIO9_PE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_PE_MASK /;"	d
PAD_GPIO9_REG_GPIO9_PE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_PE_MASK_INV /;"	d
PAD_GPIO9_REG_GPIO9_PE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_PE_POS /;"	d
PAD_GPIO9_REG_GPIO9_PE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_PE_RST /;"	d
PAD_GPIO9_REG_GPIO9_TE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_TE_MASK /;"	d
PAD_GPIO9_REG_GPIO9_TE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_TE_MASK_INV /;"	d
PAD_GPIO9_REG_GPIO9_TE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_TE_POS /;"	d
PAD_GPIO9_REG_GPIO9_TE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_GPIO9_TE_RST /;"	d
PAD_GPIO9_REG_RST	NSC/ptxNSC_Registers.h	/^#define PAD_GPIO9_REG_RST /;"	d
PAD_IRQ_REG	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG /;"	d
PAD_IRQ_REG_IRQ_DS_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_DS_MASK /;"	d
PAD_IRQ_REG_IRQ_DS_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_DS_MASK_INV /;"	d
PAD_IRQ_REG_IRQ_DS_POS	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_DS_POS /;"	d
PAD_IRQ_REG_IRQ_DS_RST	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_DS_RST /;"	d
PAD_IRQ_REG_IRQ_IE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_IE_MASK /;"	d
PAD_IRQ_REG_IRQ_IE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_IE_MASK_INV /;"	d
PAD_IRQ_REG_IRQ_IE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_IE_POS /;"	d
PAD_IRQ_REG_IRQ_IE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_IE_RST /;"	d
PAD_IRQ_REG_IRQ_OEN_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_OEN_MASK /;"	d
PAD_IRQ_REG_IRQ_OEN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_OEN_MASK_INV /;"	d
PAD_IRQ_REG_IRQ_OEN_POS	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_OEN_POS /;"	d
PAD_IRQ_REG_IRQ_OEN_RST	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_OEN_RST /;"	d
PAD_IRQ_REG_IRQ_PE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_PE_MASK /;"	d
PAD_IRQ_REG_IRQ_PE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_PE_MASK_INV /;"	d
PAD_IRQ_REG_IRQ_PE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_PE_POS /;"	d
PAD_IRQ_REG_IRQ_PE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_PE_RST /;"	d
PAD_IRQ_REG_IRQ_TE_MASK	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_TE_MASK /;"	d
PAD_IRQ_REG_IRQ_TE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_TE_MASK_INV /;"	d
PAD_IRQ_REG_IRQ_TE_POS	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_TE_POS /;"	d
PAD_IRQ_REG_IRQ_TE_RST	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_IRQ_TE_RST /;"	d
PAD_IRQ_REG_RST	NSC/ptxNSC_Registers.h	/^#define PAD_IRQ_REG_RST /;"	d
PDATALEN	NDEF/ptxNDEF_T4TOP.h	/^#define PDATALEN /;"	d
POSComp	FELICA_DTE/ptxFeliCa_DTE.h	/^    struct ptxPOS           *POSComp;           \/**< Main Stack component *\/$/;"	m	struct:ptxFeliCa_DTE	typeref:struct:ptxPOS *
PRBS	RF_TEST/ptxRF_Test.h	/^    ptxRF_Test_PRBS_Params_t       PRBS;                \/**< PRBS Parameters *\/$/;"	m	union:ptxRF_Test_Params	typeref:typename:ptxRF_Test_PRBS_Params_t
PTXNSC_REGISTERS_H_	NSC/ptxNSC_Registers.h	/^#define PTXNSC_REGISTERS_H_$/;"	d
PTXNSC_SYSTEM_H_	NSC/ptxNSC_System.h	/^#define PTXNSC_SYSTEM_H_$/;"	d
PTX_API_LIBFUNC	NDEF/ptxNDEF_T4TOP.h	/^    #define PTX_API_LIBFUNC /;"	d
PTX_COMP_CHECK	ptxStatus.h	/^#define PTX_COMP_CHECK(/;"	d
PTX_DBGPORT_DEFAULT_UART_BAUDRATE	ptxDBG_PORT.h	/^#define PTX_DBGPORT_DEFAULT_UART_BAUDRATE /;"	d
PTX_DBGPORT_MAX_TX_BUFF_SIZE	ptxDBG_PORT.h	/^#define PTX_DBGPORT_MAX_TX_BUFF_SIZE /;"	d
PTX_DBGPORT_MAX_UART_BAUDRATE_ERROR	ptxDBG_PORT.h	/^#define PTX_DBGPORT_MAX_UART_BAUDRATE_ERROR /;"	d
PTX_FELICA_DTE_TECH	FELICA_DTE/ptxFeliCa_DTE.c	/^#define PTX_FELICA_DTE_TECH /;"	d	file:
PTX_GET_COMP	ptxStatus.h	/^#define PTX_GET_COMP(/;"	d
PTX_GET_STATUS	ptxStatus.h	/^#define PTX_GET_STATUS(/;"	d
PTX_GPIO_FLAGS_ENABLE_HIGH_DRIVER_STRENGTH	GPIO/ptxGPIO.h	/^#define PTX_GPIO_FLAGS_ENABLE_HIGH_DRIVER_STRENGTH /;"	d
PTX_GPIO_FLAGS_ENABLE_INTERNAL_PULLUP	GPIO/ptxGPIO.h	/^#define PTX_GPIO_FLAGS_ENABLE_INTERNAL_PULLUP /;"	d
PTX_HAL_READ_TIMEOUT	NSC/ptxNSC_Hal.h	/^#define PTX_HAL_READ_TIMEOUT /;"	d
PTX_HAL_WRITE_TIMEOUT	NSC/ptxNSC_Hal.h	/^#define PTX_HAL_WRITE_TIMEOUT /;"	d
PTX_HCE_DEACTIVATE_REASON_DESELECT	HCE/ptxHce.h	/^#define PTX_HCE_DEACTIVATE_REASON_DESELECT /;"	d
PTX_HCE_DEACTIVATE_REASON_FIELD_OFF	HCE/ptxHce.h	/^#define PTX_HCE_DEACTIVATE_REASON_FIELD_OFF /;"	d
PTX_HCE_DEACTIVATE_REASON_RELEASE	HCE/ptxHce.h	/^#define PTX_HCE_DEACTIVATE_REASON_RELEASE /;"	d
PTX_HCE_ISO7816_CLA_ISO	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_CLA_ISO /;"	d
PTX_HCE_ISO7816_H	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_H$/;"	d
PTX_HCE_ISO7816_HEADER_LEN	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_HEADER_LEN /;"	d
PTX_HCE_ISO7816_INS_READ_BINARY	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_INS_READ_BINARY /;"	d
PTX_HCE_ISO7816_INS_SELECT	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_INS_SELECT /;"	d
PTX_HCE_ISO7816_INS_UPDATE_BINARY	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_INS_UPDATE_BINARY /;"	d
PTX_HCE_ISO7816_OFFSET_CDATA	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_OFFSET_CDATA /;"	d
PTX_HCE_ISO7816_OFFSET_CLA	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_OFFSET_CLA /;"	d
PTX_HCE_ISO7816_OFFSET_EXT_CDATA	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_OFFSET_EXT_CDATA /;"	d
PTX_HCE_ISO7816_OFFSET_INS	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_OFFSET_INS /;"	d
PTX_HCE_ISO7816_OFFSET_LC	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_OFFSET_LC /;"	d
PTX_HCE_ISO7816_OFFSET_LE	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_OFFSET_LE /;"	d
PTX_HCE_ISO7816_OFFSET_P1	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_OFFSET_P1 /;"	d
PTX_HCE_ISO7816_OFFSET_P2	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_OFFSET_P2 /;"	d
PTX_HCE_ISO7816_SELECT_OPTION_P1_BY_FILEID	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SELECT_OPTION_P1_BY_FILEID /;"	d
PTX_HCE_ISO7816_SELECT_OPTION_P1_BY_NAME	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SELECT_OPTION_P1_BY_NAME /;"	d
PTX_HCE_ISO7816_SELECT_OPTION_P2_FILEID_FIRST_ONLY_OCC	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SELECT_OPTION_P2_FILEID_FIRST_ONLY_OCC /;"	d
PTX_HCE_ISO7816_SELECT_OPTION_P2_NAME_FIRST_ONLY_OCC	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SELECT_OPTION_P2_NAME_FIRST_ONLY_OCC /;"	d
PTX_HCE_ISO7816_SW_APPLET_SELECT_FAILED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_APPLET_SELECT_FAILED /;"	d
PTX_HCE_ISO7816_SW_BYTES_REMAINING_00	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_BYTES_REMAINING_00 /;"	d
PTX_HCE_ISO7816_SW_CLA_NOT_SUPPORTED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_CLA_NOT_SUPPORTED /;"	d
PTX_HCE_ISO7816_SW_COMMAND_NOT_ALLOWED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_COMMAND_NOT_ALLOWED /;"	d
PTX_HCE_ISO7816_SW_CONDITIONS_NOT_SATISFIED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_CONDITIONS_NOT_SATISFIED /;"	d
PTX_HCE_ISO7816_SW_CORRECT_LENGTH_00	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_CORRECT_LENGTH_00 /;"	d
PTX_HCE_ISO7816_SW_DATA_INVALID	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_DATA_INVALID /;"	d
PTX_HCE_ISO7816_SW_FILE_FULL	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_FILE_FULL /;"	d
PTX_HCE_ISO7816_SW_FILE_INVALID	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_FILE_INVALID /;"	d
PTX_HCE_ISO7816_SW_FILE_NOT_FOUND	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_FILE_NOT_FOUND /;"	d
PTX_HCE_ISO7816_SW_FUNC_NOT_SUPPORTED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_FUNC_NOT_SUPPORTED /;"	d
PTX_HCE_ISO7816_SW_INCORRECT_P1P2	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_INCORRECT_P1P2 /;"	d
PTX_HCE_ISO7816_SW_INS_NOT_SUPPORTED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_INS_NOT_SUPPORTED /;"	d
PTX_HCE_ISO7816_SW_LEN	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_LEN /;"	d
PTX_HCE_ISO7816_SW_LOGICAL_CHANNEL_NOT_SUPPORTED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_LOGICAL_CHANNEL_NOT_SUPPORTED /;"	d
PTX_HCE_ISO7816_SW_NO_INPUT_DATA_AVAILABLE	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_NO_INPUT_DATA_AVAILABLE /;"	d
PTX_HCE_ISO7816_SW_RECORD_NOT_FOUND	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_RECORD_NOT_FOUND /;"	d
PTX_HCE_ISO7816_SW_SECURE_MESSAGING_NOT_SUPPORTED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_SECURE_MESSAGING_NOT_SUPPORTED /;"	d
PTX_HCE_ISO7816_SW_SECURITY_STATUS_NOT_SATISFIED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_SECURITY_STATUS_NOT_SATISFIED /;"	d
PTX_HCE_ISO7816_SW_SELECTED_FILE_DEACTIVATED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_SELECTED_FILE_DEACTIVATED /;"	d
PTX_HCE_ISO7816_SW_SUCCESS	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_SUCCESS /;"	d
PTX_HCE_ISO7816_SW_UNKNOWN	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_UNKNOWN /;"	d
PTX_HCE_ISO7816_SW_WARNING_STATE_UNCHANGED	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_WARNING_STATE_UNCHANGED /;"	d
PTX_HCE_ISO7816_SW_WRONG_LENGTH	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_WRONG_LENGTH /;"	d
PTX_HCE_ISO7816_SW_WRONG_P1P2	COMMON/ptxHCE_ISO7816.h	/^#define PTX_HCE_ISO7816_SW_WRONG_P1P2 /;"	d
PTX_HW_PRODUCT_ID_PTX100X	IOT_READER/ptx_IOT_READER.h	/^#define PTX_HW_PRODUCT_ID_PTX100X /;"	d
PTX_HW_PRODUCT_ID_PTX105X	IOT_READER/ptx_IOT_READER.h	/^#define PTX_HW_PRODUCT_ID_PTX105X /;"	d
PTX_HW_PRODUCT_ID_PTX130X	IOT_READER/ptx_IOT_READER.h	/^#define PTX_HW_PRODUCT_ID_PTX130X /;"	d
PTX_IOTRD_HIGH_LEVEL_PROT_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_HIGH_LEVEL_PROT_MAX_SIZE /;"	d
PTX_IOTRD_MAX_SUPPORTED_DEVICES	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_MAX_SUPPORTED_DEVICES /;"	d
PTX_IOTRD_NO_CARD_SLEEP_TIME	COMMON/ptxIoTRd_COMMON.c	/^#define PTX_IOTRD_NO_CARD_SLEEP_TIME /;"	d	file:
PTX_IOTRD_PROT_ISO_DEP_ATS_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_PROT_ISO_DEP_ATS_MAX_SIZE /;"	d
PTX_IOTRD_PROT_ISO_DEP_ATTRIB_RES_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_PROT_ISO_DEP_ATTRIB_RES_MAX_SIZE /;"	d
PTX_IOTRD_PROT_NFC_DEP_ATR_RES_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_PROT_NFC_DEP_ATR_RES_MAX_SIZE /;"	d
PTX_IOTRD_RF_DEACTIVATION_SLEEP_DONE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_DEACTIVATION_SLEEP_DONE /;"	d
PTX_IOTRD_RF_DEACTIVATION_SLEEP_ONGOING	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_DEACTIVATION_SLEEP_ONGOING /;"	d
PTX_IOTRD_RF_DEACTIVATION_TYPE_DISCOVER	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_DEACTIVATION_TYPE_DISCOVER /;"	d
PTX_IOTRD_RF_DEACTIVATION_TYPE_DISCOVER_PROTOCOL	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_DEACTIVATION_TYPE_DISCOVER_PROTOCOL /;"	d
PTX_IOTRD_RF_DEACTIVATION_TYPE_IDLE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_DEACTIVATION_TYPE_IDLE /;"	d
PTX_IOTRD_RF_DEACTIVATION_TYPE_IDLE_PROTOCOL	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_DEACTIVATION_TYPE_IDLE_PROTOCOL /;"	d
PTX_IOTRD_RF_DEACTIVATION_TYPE_NO_RF_RESET	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_DEACTIVATION_TYPE_NO_RF_RESET /;"	d
PTX_IOTRD_RF_DEACTIVATION_TYPE_SLEEP	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_DEACTIVATION_TYPE_SLEEP /;"	d
PTX_IOTRD_RF_DEACTIVATION_TYPE_SLEEP_NON_BLOCKING	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_DEACTIVATION_TYPE_SLEEP_NON_BLOCKING /;"	d
PTX_IOTRD_RF_MSG_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_RF_MSG_MAX_SIZE /;"	d
PTX_IOTRD_TECH_A_NFCID1_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_TECH_A_NFCID1_MAX_SIZE /;"	d
PTX_IOTRD_TECH_A_SENSRES_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_TECH_A_SENSRES_MAX_SIZE /;"	d
PTX_IOTRD_TECH_B_SENSB_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_TECH_B_SENSB_MAX_SIZE /;"	d
PTX_IOTRD_TECH_F_SENSF_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_TECH_F_SENSF_MAX_SIZE /;"	d
PTX_IOTRD_TECH_V_UID_MAX_SIZE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_IOTRD_TECH_V_UID_MAX_SIZE /;"	d
PTX_NSC_DATA_MSG_CON_MSG_INDEX	NSC/ptxNSC.h	/^#define PTX_NSC_DATA_MSG_CON_MSG_INDEX /;"	d
PTX_NSC_DATA_MSG_CON_MSG_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_DATA_MSG_CON_MSG_LENGTH /;"	d
PTX_NSC_DATA_MSG_CON_MSG_LENGTH_VALUE_ACK	NSC/ptxNSC.h	/^#define PTX_NSC_DATA_MSG_CON_MSG_LENGTH_VALUE_ACK /;"	d
PTX_NSC_DATA_MSG_CON_MSG_LEN_INDEX	NSC/ptxNSC.h	/^#define PTX_NSC_DATA_MSG_CON_MSG_LEN_INDEX /;"	d
PTX_NSC_DATA_MSG_MAX_PAYLOAD_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DATA_MSG_MAX_PAYLOAD_LEN /;"	d
PTX_NSC_DATA_MSG_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_DATA_MSG_OPCODE /;"	d
PTX_NSC_DATA_MSG_OPCODE_CHAINING	NSC/ptxNSC.h	/^#define PTX_NSC_DATA_MSG_OPCODE_CHAINING /;"	d
PTX_NSC_DATA_MSG_OPCODE_INDEX	NSC/ptxNSC.h	/^#define PTX_NSC_DATA_MSG_OPCODE_INDEX /;"	d
PTX_NSC_DATA_MSG_OPCODE_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_DATA_MSG_OPCODE_LENGTH /;"	d
PTX_NSC_DEACT_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_DEACT_CMD_OPCODE /;"	d
PTX_NSC_DEACT_PARAMETERS_LEN	NSC/ptxNSC.c	/^#define PTX_NSC_DEACT_PARAMETERS_LEN /;"	d	file:
PTX_NSC_DEACT_RESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DEACT_RESP_LEN /;"	d
PTX_NSC_DEACT_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_DEACT_RSP_OPCODE /;"	d
PTX_NSC_DISC_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CMD_OPCODE /;"	d
PTX_NSC_DISC_CON_IDLE_TIME_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_IDLE_TIME_LEN /;"	d
PTX_NSC_DISC_CON_LISA_NFCID1_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_LISA_NFCID1_LEN /;"	d
PTX_NSC_DISC_CON_LISB_SENSBRESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_LISB_SENSBRESP_LEN /;"	d
PTX_NSC_DISC_CON_LISF_SENSFRESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_LISF_SENSFRESP_LEN /;"	d
PTX_NSC_DISC_CON_LISV_INVRESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_LISV_INVRESP_LEN /;"	d
PTX_NSC_DISC_CON_LIS_ISODEP_ATS_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_LIS_ISODEP_ATS_LEN /;"	d
PTX_NSC_DISC_CON_LIS_ISODEP_ATTRIB_RES_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_LIS_ISODEP_ATTRIB_RES_LEN /;"	d
PTX_NSC_DISC_CON_LIS_NFCDEP_ATR_RES_G_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_LIS_NFCDEP_ATR_RES_G_LEN /;"	d
PTX_NSC_DISC_CON_LIS_SENSRESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_LIS_SENSRESP_LEN /;"	d
PTX_NSC_DISC_CON_POLLAPROPR_CMD_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_POLLAPROPR_CMD_LEN /;"	d
PTX_NSC_DISC_CON_POLLB_ATTRIB_INF_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_POLLB_ATTRIB_INF_LEN /;"	d
PTX_NSC_DISC_CON_POLLB_CMD_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_POLLB_CMD_LEN /;"	d
PTX_NSC_DISC_CON_POLLF_CMD_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_POLLF_CMD_LEN /;"	d
PTX_NSC_DISC_CON_POLLV_CMD_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_POLLV_CMD_LEN /;"	d
PTX_NSC_DISC_CON_POLL_NFCDEP_ATR_REQ_G_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_CON_POLL_NFCDEP_ATR_REQ_G_LEN /;"	d
PTX_NSC_DISC_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_OPCODE /;"	d
PTX_NSC_DISC_PARAMETERS_LEN	NSC/ptxNSC.c	/^#define PTX_NSC_DISC_PARAMETERS_LEN /;"	d	file:
PTX_NSC_DISC_RESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_DISC_RESP_LEN /;"	d
PTX_NSC_FRAMETYPE	NSC/ptxNSC.h	/^#define PTX_NSC_FRAMETYPE /;"	d
PTX_NSC_FRAMETYPE_CMD	NSC/ptxNSC.h	/^#define PTX_NSC_FRAMETYPE_CMD /;"	d
PTX_NSC_FRAMETYPE_NTF	NSC/ptxNSC.h	/^#define PTX_NSC_FRAMETYPE_NTF /;"	d
PTX_NSC_FRAMETYPE_RSP	NSC/ptxNSC.h	/^#define PTX_NSC_FRAMETYPE_RSP /;"	d
PTX_NSC_FRAMETYPE_TRANSPARENT	NSC/ptxNSC.h	/^#define PTX_NSC_FRAMETYPE_TRANSPARENT /;"	d
PTX_NSC_FRAMETYPE_TRANSP_HCP	NSC/ptxNSC.h	/^#define PTX_NSC_FRAMETYPE_TRANSP_HCP /;"	d
PTX_NSC_FWDOWN_FORCED	NSC/ptxNSC.h	/^#define PTX_NSC_FWDOWN_FORCED /;"	d
PTX_NSC_FWDOWN_NOT_FORCED	NSC/ptxNSC.h	/^#define PTX_NSC_FWDOWN_NOT_FORCED /;"	d
PTX_NSC_GPIO_NR_05	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_05 /;"	d	file:
PTX_NSC_GPIO_NR_05_CFG_INDEX	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_05_CFG_INDEX /;"	d	file:
PTX_NSC_GPIO_NR_06	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_06 /;"	d	file:
PTX_NSC_GPIO_NR_06_CFG_INDEX	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_06_CFG_INDEX /;"	d	file:
PTX_NSC_GPIO_NR_07	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_07 /;"	d	file:
PTX_NSC_GPIO_NR_07_CFG_INDEX	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_07_CFG_INDEX /;"	d	file:
PTX_NSC_GPIO_NR_08	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_08 /;"	d	file:
PTX_NSC_GPIO_NR_08_CFG_INDEX	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_08_CFG_INDEX /;"	d	file:
PTX_NSC_GPIO_NR_09	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_09 /;"	d	file:
PTX_NSC_GPIO_NR_09_CFG_INDEX	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_09_CFG_INDEX /;"	d	file:
PTX_NSC_GPIO_NR_10	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_10 /;"	d	file:
PTX_NSC_GPIO_NR_10_CFG_INDEX	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_10_CFG_INDEX /;"	d	file:
PTX_NSC_GPIO_NR_11	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_11 /;"	d	file:
PTX_NSC_GPIO_NR_11_CFG_INDEX	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_11_CFG_INDEX /;"	d	file:
PTX_NSC_GPIO_NR_12	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_12 /;"	d	file:
PTX_NSC_GPIO_NR_12_CFG_INDEX	GPIO/ptxGPIO.c	/^#define PTX_NSC_GPIO_NR_12_CFG_INDEX /;"	d	file:
PTX_NSC_HAL_ADDRESS_LENGTH	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_ADDRESS_LENGTH /;"	d
PTX_NSC_HAL_BUFFER_ADDRESS_MASK	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_BUFFER_ADDRESS_MASK /;"	d
PTX_NSC_HAL_BUFFER_LENGTH_RX_MAX	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_BUFFER_LENGTH_RX_MAX /;"	d
PTX_NSC_HAL_DUMMY_VALUE	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_DUMMY_VALUE /;"	d
PTX_NSC_HAL_PAYLOAD_LENGTH_WI_MAX	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_PAYLOAD_LENGTH_WI_MAX /;"	d
PTX_NSC_HAL_READ_BUFFER_MASK	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_READ_BUFFER_MASK /;"	d
PTX_NSC_HAL_READ_CONTINUOUS_ADDRESS_MASK	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_READ_CONTINUOUS_ADDRESS_MASK /;"	d
PTX_NSC_HAL_READ_RANDOM_ADDRESS_MASK	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_READ_RANDOM_ADDRESS_MASK /;"	d
PTX_NSC_HAL_WRITE_BUFFER_MASK	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_WRITE_BUFFER_MASK /;"	d
PTX_NSC_HAL_WRITE_CONTINUOUS_ADDRESS_MASK	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_WRITE_CONTINUOUS_ADDRESS_MASK /;"	d
PTX_NSC_HAL_WRITE_INSTRUCTION_MASK	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_WRITE_INSTRUCTION_MASK /;"	d
PTX_NSC_HAL_WRITE_RANDOM_ADDRESS_MASK	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_HAL_WRITE_RANDOM_ADDRESS_MASK /;"	d
PTX_NSC_INIT_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_INIT_CMD_OPCODE /;"	d
PTX_NSC_INIT_CON_HOST_CE_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_INIT_CON_HOST_CE_LENGTH /;"	d
PTX_NSC_INIT_CON_HOST_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_INIT_CON_HOST_LENGTH /;"	d
PTX_NSC_INIT_CON_N_ALM_MAX	NSC/ptxNSC.h	/^#define PTX_NSC_INIT_CON_N_ALM_MAX /;"	d
PTX_NSC_INIT_CON_N_ALM_MIN	NSC/ptxNSC.h	/^#define PTX_NSC_INIT_CON_N_ALM_MIN /;"	d
PTX_NSC_INIT_CON_PRNG_SEED	NSC/ptxNSC.h	/^#define PTX_NSC_INIT_CON_PRNG_SEED /;"	d
PTX_NSC_INIT_CON_UART_CONFIG	NSC/ptxNSC.h	/^#define PTX_NSC_INIT_CON_UART_CONFIG /;"	d
PTX_NSC_INIT_PARAMETERS_LEN	NSC/ptxNSC.c	/^#define PTX_NSC_INIT_PARAMETERS_LEN /;"	d	file:
PTX_NSC_INIT_RESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_INIT_RESP_LEN /;"	d
PTX_NSC_INIT_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_INIT_RSP_OPCODE /;"	d
PTX_NSC_LENGTH_MAX	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_LENGTH_MAX /;"	d
PTX_NSC_MAXIMUM_A_PROPR_RES_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_MAXIMUM_A_PROPR_RES_LEN /;"	d
PTX_NSC_MAXIMUM_NFCID1_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_MAXIMUM_NFCID1_LEN /;"	d
PTX_NSC_MAX_MTU_SIZE	NSC/ptxNSC.h	/^#define PTX_NSC_MAX_MTU_SIZE /;"	d
PTX_NSC_MAX_RSP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_MAX_RSP_LEN /;"	d
PTX_NSC_MISC_RF_CONFIG_BUFFER_SIZE	NSC/ptxNSC.h	/^#define PTX_NSC_MISC_RF_CONFIG_BUFFER_SIZE /;"	d
PTX_NSC_MISC_RF_CONFIG_FLAGS_LOADED	NSC/ptxNSC.h	/^#define PTX_NSC_MISC_RF_CONFIG_FLAGS_LOADED /;"	d
PTX_NSC_MISC_RF_CONFIG_FLAGS_SET	NSC/ptxNSC.h	/^#define PTX_NSC_MISC_RF_CONFIG_FLAGS_SET /;"	d
PTX_NSC_NFCID0_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_NFCID0_LEN /;"	d
PTX_NSC_NFCID2_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_NFCID2_LEN /;"	d
PTX_NSC_OPCODE_LPCDNTF	NSC/ptxNSC.h	/^#define PTX_NSC_OPCODE_LPCDNTF /;"	d
PTX_NSC_OPCODE_RFACTNTF	NSC/ptxNSC.h	/^#define PTX_NSC_OPCODE_RFACTNTF /;"	d
PTX_NSC_OPCODE_RFDEACTNTF	NSC/ptxNSC.h	/^#define PTX_NSC_OPCODE_RFDEACTNTF /;"	d
PTX_NSC_OPCODE_RFDISCNTF	NSC/ptxNSC.h	/^#define PTX_NSC_OPCODE_RFDISCNTF /;"	d
PTX_NSC_OPCODE_RFERRORNTF	NSC/ptxNSC.h	/^#define PTX_NSC_OPCODE_RFERRORNTF /;"	d
PTX_NSC_OPCODE_RFFIELDNTF	NSC/ptxNSC.h	/^#define PTX_NSC_OPCODE_RFFIELDNTF /;"	d
PTX_NSC_READ_CMD_HD_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_READ_CMD_HD_LENGTH /;"	d
PTX_NSC_READ_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_READ_CMD_OPCODE /;"	d
PTX_NSC_READ_RSP_HD_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_READ_RSP_HD_LENGTH /;"	d
PTX_NSC_READ_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_READ_RSP_OPCODE /;"	d
PTX_NSC_RESET_RSP_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_RESET_RSP_LENGTH /;"	d
PTX_NSC_RESET_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RESET_RSP_OPCODE /;"	d
PTX_NSC_RESPONSE_TIMEOUT	NSC/ptxNSC_Hal.h	/^#define PTX_NSC_RESPONSE_TIMEOUT /;"	d
PTX_NSC_RFCONF_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_CMD_OPCODE /;"	d
PTX_NSC_RFCONF_LAST_PARAM	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_LAST_PARAM /;"	d
PTX_NSC_RFCONF_LISTEN	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_LISTEN /;"	d
PTX_NSC_RFCONF_MISC	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_MISC /;"	d
PTX_NSC_RFCONF_POLL_A_106	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_A_106 /;"	d
PTX_NSC_RFCONF_POLL_A_212	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_A_212 /;"	d
PTX_NSC_RFCONF_POLL_A_424	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_A_424 /;"	d
PTX_NSC_RFCONF_POLL_A_848	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_A_848 /;"	d
PTX_NSC_RFCONF_POLL_B_106	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_B_106 /;"	d
PTX_NSC_RFCONF_POLL_B_212	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_B_212 /;"	d
PTX_NSC_RFCONF_POLL_B_424	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_B_424 /;"	d
PTX_NSC_RFCONF_POLL_B_848	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_B_848 /;"	d
PTX_NSC_RFCONF_POLL_F_212	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_F_212 /;"	d
PTX_NSC_RFCONF_POLL_F_424	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_F_424 /;"	d
PTX_NSC_RFCONF_POLL_V	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_POLL_V /;"	d
PTX_NSC_RFCONF_RESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_RESP_LEN /;"	d
PTX_NSC_RFCONF_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_RSP_OPCODE /;"	d
PTX_NSC_RFCONF_TX_POWER_MODE	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_TX_POWER_MODE /;"	d
PTX_NSC_RFCONF_WAVEBANK_0	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_0	/;"	d
PTX_NSC_RFCONF_WAVEBANK_1	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_1	/;"	d
PTX_NSC_RFCONF_WAVEBANK_10	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_10	/;"	d
PTX_NSC_RFCONF_WAVEBANK_11	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_11	/;"	d
PTX_NSC_RFCONF_WAVEBANK_12	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_12	/;"	d
PTX_NSC_RFCONF_WAVEBANK_13	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_13	/;"	d
PTX_NSC_RFCONF_WAVEBANK_14	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_14	/;"	d
PTX_NSC_RFCONF_WAVEBANK_15	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_15	/;"	d
PTX_NSC_RFCONF_WAVEBANK_16	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_16	/;"	d
PTX_NSC_RFCONF_WAVEBANK_17	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_17	/;"	d
PTX_NSC_RFCONF_WAVEBANK_18	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_18	/;"	d
PTX_NSC_RFCONF_WAVEBANK_19	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_19	/;"	d
PTX_NSC_RFCONF_WAVEBANK_2	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_2	/;"	d
PTX_NSC_RFCONF_WAVEBANK_3	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_3	/;"	d
PTX_NSC_RFCONF_WAVEBANK_4	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_4	/;"	d
PTX_NSC_RFCONF_WAVEBANK_5	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_5	/;"	d
PTX_NSC_RFCONF_WAVEBANK_6	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_6	/;"	d
PTX_NSC_RFCONF_WAVEBANK_7	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_7	/;"	d
PTX_NSC_RFCONF_WAVEBANK_8	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_8	/;"	d
PTX_NSC_RFCONF_WAVEBANK_9	NSC/ptxNSC.h	/^#define PTX_NSC_RFCONF_WAVEBANK_9	/;"	d
PTX_NSC_RFD_CTRL_ACK	NSC/ptxNSC.h	/^#define PTX_NSC_RFD_CTRL_ACK /;"	d
PTX_NSC_RFD_CTRL_ATTENTION	NSC/ptxNSC.h	/^#define PTX_NSC_RFD_CTRL_ATTENTION /;"	d
PTX_NSC_RFD_CTRL_EOF	NSC/ptxNSC.h	/^#define PTX_NSC_RFD_CTRL_EOF /;"	d
PTX_NSC_RFD_CTRL_NACK	NSC/ptxNSC.h	/^#define PTX_NSC_RFD_CTRL_NACK /;"	d
PTX_NSC_RFD_CTRL_NR	NSC/ptxNSC.h	/^#define PTX_NSC_RFD_CTRL_NR /;"	d
PTX_NSC_RFD_CTRL_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RFD_CTRL_OPCODE /;"	d
PTX_NSC_RFERRORNTF_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_RFERRORNTF_LENGTH /;"	d
PTX_NSC_RF_ACTIVATE_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ACTIVATE_CMD_OPCODE /;"	d
PTX_NSC_RF_ACTIVATE_CMD_OPCODE_INDEX	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ACTIVATE_CMD_OPCODE_INDEX /;"	d
PTX_NSC_RF_ACTIVATE_CMD_OPCODE_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ACTIVATE_CMD_OPCODE_LENGTH /;"	d
PTX_NSC_RF_ACTIVATE_CMD_PARAMS_MAXLENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ACTIVATE_CMD_PARAMS_MAXLENGTH /;"	d
PTX_NSC_RF_ACTIVATE_RSP_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ACTIVATE_RSP_LENGTH /;"	d
PTX_NSC_RF_ACTIVATE_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ACTIVATE_RSP_OPCODE /;"	d
PTX_NSC_RF_ERROR_NTF_CODE_ERR_CURRENT_LIMIT	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ERROR_NTF_CODE_ERR_CURRENT_LIMIT /;"	d
PTX_NSC_RF_ERROR_NTF_CODE_ERR_EMV_COLL	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ERROR_NTF_CODE_ERR_EMV_COLL /;"	d
PTX_NSC_RF_ERROR_NTF_CODE_ERR_OVERCURRENT	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ERROR_NTF_CODE_ERR_OVERCURRENT /;"	d
PTX_NSC_RF_ERROR_NTF_CODE_ERR_PROTOCOL	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ERROR_NTF_CODE_ERR_PROTOCOL /;"	d
PTX_NSC_RF_ERROR_NTF_CODE_ERR_THERMAL	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ERROR_NTF_CODE_ERR_THERMAL /;"	d
PTX_NSC_RF_ERROR_NTF_CODE_ERR_TIMEOUT	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ERROR_NTF_CODE_ERR_TIMEOUT /;"	d
PTX_NSC_RF_ERROR_NTF_CODE_ERR_TRANSMISSION	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ERROR_NTF_CODE_ERR_TRANSMISSION /;"	d
PTX_NSC_RF_ERROR_NTF_CODE_OK	NSC/ptxNSC.h	/^#define PTX_NSC_RF_ERROR_NTF_CODE_OK /;"	d
PTX_NSC_RF_RUN_TEST_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RF_RUN_TEST_CMD_OPCODE /;"	d
PTX_NSC_RF_RUN_TEST_CMD_RSP_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_RF_RUN_TEST_CMD_RSP_LENGTH /;"	d
PTX_NSC_RF_RUN_TEST_CMD_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RF_RUN_TEST_CMD_RSP_OPCODE /;"	d
PTX_NSC_RF_SET_PARAMS_MAX	NSC/ptxNSC.h	/^#define PTX_NSC_RF_SET_PARAMS_MAX /;"	d
PTX_NSC_RF_SET_ROUTING_TABLE_CMD_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_RF_SET_ROUTING_TABLE_CMD_LENGTH /;"	d
PTX_NSC_RF_SET_ROUTING_TABLE_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RF_SET_ROUTING_TABLE_CMD_OPCODE /;"	d
PTX_NSC_RF_SET_ROUTING_TABLE_RSP_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_RF_SET_ROUTING_TABLE_RSP_LENGTH /;"	d
PTX_NSC_RF_SET_ROUTING_TABLE_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RF_SET_ROUTING_TABLE_RSP_OPCODE /;"	d
PTX_NSC_RF_STOP_TEST_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RF_STOP_TEST_CMD_OPCODE /;"	d
PTX_NSC_RF_STOP_TEST_CMD_RSP_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_RF_STOP_TEST_CMD_RSP_LENGTH /;"	d
PTX_NSC_RF_STOP_TEST_CMD_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_RF_STOP_TEST_CMD_RSP_OPCODE /;"	d
PTX_NSC_SET_PARAMS_DISC_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_SET_PARAMS_DISC_CMD_OPCODE /;"	d
PTX_NSC_SET_PARAMS_DISC_RSP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_SET_PARAMS_DISC_RSP_LEN /;"	d
PTX_NSC_SET_PARAMS_DISC_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_SET_PARAMS_DISC_RSP_OPCODE /;"	d
PTX_NSC_SET_PARAM_CMD_EOC	NSC/ptxNSC.h	/^#define PTX_NSC_SET_PARAM_CMD_EOC /;"	d
PTX_NSC_STANDBY_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_STANDBY_CMD_OPCODE /;"	d
PTX_NSC_STANDBY_PARAMETERS_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_STANDBY_PARAMETERS_LEN /;"	d
PTX_NSC_STANDBY_RESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_STANDBY_RESP_LEN /;"	d
PTX_NSC_STANDBY_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_STANDBY_RSP_OPCODE /;"	d
PTX_NSC_TRANSFER_TO	NSC/ptxNSC.h	/^#define PTX_NSC_TRANSFER_TO /;"	d
PTX_NSC_TYPES_LISBSENSRES_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_LISBSENSRES_LEN /;"	d
PTX_NSC_TYPES_TECH_A	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_A /;"	d
PTX_NSC_TYPES_TECH_A_PROPR	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_A_PROPR /;"	d
PTX_NSC_TYPES_TECH_B	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_B /;"	d
PTX_NSC_TYPES_TECH_F	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_F /;"	d
PTX_NSC_TYPES_TECH_LISTEN_A	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_LISTEN_A /;"	d
PTX_NSC_TYPES_TECH_POLL_A	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_POLL_A /;"	d
PTX_NSC_TYPES_TECH_POLL_ACT	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_POLL_ACT /;"	d
PTX_NSC_TYPES_TECH_POLL_A_PROPR	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_POLL_A_PROPR /;"	d
PTX_NSC_TYPES_TECH_POLL_B	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_POLL_B /;"	d
PTX_NSC_TYPES_TECH_POLL_F	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_POLL_F /;"	d
PTX_NSC_TYPES_TECH_POLL_V	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_POLL_V /;"	d
PTX_NSC_TYPES_TECH_V	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_TECH_V /;"	d
PTX_NSC_TYPES_WRRD_OP_MAX	NSC/ptxNSC.h	/^#define PTX_NSC_TYPES_WRRD_OP_MAX /;"	d
PTX_NSC_TYPEV_UID_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_TYPEV_UID_LEN /;"	d
PTX_NSC_TYPE_FRAME_CMD	NSC/ptxNSC.h	/^#define PTX_NSC_TYPE_FRAME_CMD /;"	d
PTX_NSC_TYPE_FRAME_MASK	NSC/ptxNSC.h	/^#define PTX_NSC_TYPE_FRAME_MASK /;"	d
PTX_NSC_TYPE_FRAME_NTF	NSC/ptxNSC.h	/^#define PTX_NSC_TYPE_FRAME_NTF /;"	d
PTX_NSC_TYPE_FRAME_RSP	NSC/ptxNSC.h	/^#define PTX_NSC_TYPE_FRAME_RSP /;"	d
PTX_NSC_TYPE_FRAME_TRANSP	NSC/ptxNSC.h	/^#define PTX_NSC_TYPE_FRAME_TRANSP /;"	d
PTX_NSC_WAKEUP_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_WAKEUP_CMD_OPCODE /;"	d
PTX_NSC_WAKEUP_PARAMETERS_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_WAKEUP_PARAMETERS_LEN /;"	d
PTX_NSC_WAKEUP_RESP_LEN	NSC/ptxNSC.h	/^#define PTX_NSC_WAKEUP_RESP_LEN /;"	d
PTX_NSC_WAKEUP_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_WAKEUP_RSP_OPCODE /;"	d
PTX_NSC_WRITE_CMD_HD_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_WRITE_CMD_HD_LENGTH /;"	d
PTX_NSC_WRITE_CMD_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_WRITE_CMD_OPCODE /;"	d
PTX_NSC_WRITE_RSP_LENGTH	NSC/ptxNSC.h	/^#define PTX_NSC_WRITE_RSP_LENGTH /;"	d
PTX_NSC_WRITE_RSP_OPCODE	NSC/ptxNSC.h	/^#define PTX_NSC_WRITE_RSP_OPCODE /;"	d
PTX_PLATFORM_LOCAL_CHANGES	ptxPlatform_Revision.h	/^#define PTX_PLATFORM_LOCAL_CHANGES /;"	d
PTX_PLATFORM_REVISION	ptxPlatform_Revision.h	/^#define PTX_PLATFORM_REVISION /;"	d
PTX_PLAT_MAXNUMOF_TXBUFF	PLAT/Psoc/ptxPLAT.c	/^#define PTX_PLAT_MAXNUMOF_TXBUFF /;"	d	file:
PTX_PLAT_MAX_PAYLOAD_LEN	PLAT/Psoc/ptxPLAT.c	/^#define PTX_PLAT_MAX_PAYLOAD_LEN /;"	d	file:
PTX_RF_ERROR_NTF_CODE_ERR_EMV_COLL	IOT_READER/ptx_IOT_READER.h	/^#define PTX_RF_ERROR_NTF_CODE_ERR_EMV_COLL /;"	d
PTX_RF_ERROR_NTF_CODE_ERR_PROTOCOL	IOT_READER/ptx_IOT_READER.h	/^#define PTX_RF_ERROR_NTF_CODE_ERR_PROTOCOL /;"	d
PTX_RF_ERROR_NTF_CODE_ERR_TIMEOUT	IOT_READER/ptx_IOT_READER.h	/^#define PTX_RF_ERROR_NTF_CODE_ERR_TIMEOUT /;"	d
PTX_RF_ERROR_NTF_CODE_ERR_TRANSMISSION	IOT_READER/ptx_IOT_READER.h	/^#define PTX_RF_ERROR_NTF_CODE_ERR_TRANSMISSION /;"	d
PTX_RF_ERROR_NTF_CODE_NO_ERROR	IOT_READER/ptx_IOT_READER.h	/^#define PTX_RF_ERROR_NTF_CODE_NO_ERROR /;"	d
PTX_RF_ERROR_NTF_CODE_UNKNOWN_ERROR	IOT_READER/ptx_IOT_READER.h	/^#define PTX_RF_ERROR_NTF_CODE_UNKNOWN_ERROR /;"	d
PTX_RF_ERROR_NTF_CODE_WARNING_PA_OVERCURRENT_LIMIT	IOT_READER/ptx_IOT_READER.h	/^#define PTX_RF_ERROR_NTF_CODE_WARNING_PA_OVERCURRENT_LIMIT /;"	d
PTX_RF_TEST_FLAGS_PRBS_TYPE_A_INCLUDE_PARITY	RF_TEST/ptxRF_Test.h	/^#define PTX_RF_TEST_FLAGS_PRBS_TYPE_A_INCLUDE_PARITY /;"	d
PTX_STATUS	ptxStatus.h	/^#define PTX_STATUS(/;"	d
PTX_SYSTEM_STATUS_ERR_OVERCURRENT	IOT_READER/ptx_IOT_READER.h	/^#define PTX_SYSTEM_STATUS_ERR_OVERCURRENT /;"	d
PTX_SYSTEM_STATUS_ERR_TEMPERATURE	IOT_READER/ptx_IOT_READER.h	/^#define PTX_SYSTEM_STATUS_ERR_TEMPERATURE /;"	d
PTX_SYSTEM_STATUS_OK	IOT_READER/ptx_IOT_READER.h	/^#define PTX_SYSTEM_STATUS_OK /;"	d
PTX_T2TOP_ACK_CODE	NATIVE_TAG/ptxNativeTag_T2T.c	/^#define PTX_T2TOP_ACK_CODE /;"	d	file:
PTX_T2TOP_ACK_CODE	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_ACK_CODE /;"	d	file:
PTX_T2TOP_BLOCK_SIZE	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_BLOCK_SIZE /;"	d	file:
PTX_T2TOP_CC_BLOCK_NUMBER	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_CC_BLOCK_NUMBER /;"	d	file:
PTX_T2TOP_CC_MAGIC_NUMBER	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_CC_MAGIC_NUMBER /;"	d	file:
PTX_T2TOP_CC_OFFSET_ACCESS_COND	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_CC_OFFSET_ACCESS_COND /;"	d	file:
PTX_T2TOP_CC_OFFSET_MAGIC_NUMBER	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_CC_OFFSET_MAGIC_NUMBER /;"	d	file:
PTX_T2TOP_CC_OFFSET_TAG_SIZE	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_CC_OFFSET_TAG_SIZE /;"	d	file:
PTX_T2TOP_CC_OFFSET_VERSION_INFO	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_CC_OFFSET_VERSION_INFO /;"	d	file:
PTX_T2TOP_INTERNAL_BUFLENGTH	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_INTERNAL_BUFLENGTH /;"	d	file:
PTX_T2TOP_LOCK_CONTROL_TLV_LENGTH	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_LOCK_CONTROL_TLV_LENGTH /;"	d	file:
PTX_T2TOP_LOCK_CONTROL_TLV_T	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_LOCK_CONTROL_TLV_T /;"	d	file:
PTX_T2TOP_MASK_1	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_MASK_1 /;"	d	file:
PTX_T2TOP_MASK_4	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_MASK_4 /;"	d	file:
PTX_T2TOP_MASK_8	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_MASK_8 /;"	d	file:
PTX_T2TOP_MAX_NUMBER_LOCK_CONTROL	NDEF/ptxNDEF_T2TOP.h	/^#define PTX_T2TOP_MAX_NUMBER_LOCK_CONTROL /;"	d
PTX_T2TOP_MAX_NUMBER_MEMORY_CONTROL	NDEF/ptxNDEF_T2TOP.h	/^#define PTX_T2TOP_MAX_NUMBER_MEMORY_CONTROL /;"	d
PTX_T2TOP_MEMORY_CONTROL_TLV_LENGTH	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_MEMORY_CONTROL_TLV_LENGTH /;"	d	file:
PTX_T2TOP_MEMORY_CONTROL_TLV_T	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_MEMORY_CONTROL_TLV_T /;"	d	file:
PTX_T2TOP_MIN_SIZE_FOR_DLA	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_MIN_SIZE_FOR_DLA /;"	d	file:
PTX_T2TOP_NDEF_TLV_T	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_NDEF_TLV_T /;"	d	file:
PTX_T2TOP_NULL_TLV_T	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_NULL_TLV_T /;"	d	file:
PTX_T2TOP_READ_CODE	NATIVE_TAG/ptxNativeTag_T2T.c	/^#define PTX_T2TOP_READ_CODE /;"	d	file:
PTX_T2TOP_SECTOR_SELECT_CODE	NATIVE_TAG/ptxNativeTag_T2T.c	/^#define PTX_T2TOP_SECTOR_SELECT_CODE /;"	d	file:
PTX_T2TOP_STATIC_LOCK_BLOCK_NUMBER	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_STATIC_LOCK_BLOCK_NUMBER /;"	d	file:
PTX_T2TOP_TERMINATOR_TLV_LENGTH	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_TERMINATOR_TLV_LENGTH /;"	d	file:
PTX_T2TOP_TERMINATOR_TLV_T	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_TERMINATOR_TLV_T /;"	d	file:
PTX_T2TOP_TLV_AREA_BEGIN_BLOCK	NDEF/ptxNDEF_T2TOP.c	/^#define PTX_T2TOP_TLV_AREA_BEGIN_BLOCK /;"	d	file:
PTX_T2TOP_WRITE_CODE	NATIVE_TAG/ptxNativeTag_T2T.c	/^#define PTX_T2TOP_WRITE_CODE /;"	d	file:
PTX_T2T_BLOCK_SIZE	NATIVE_TAG/ptxNativeTag_T2T.h	/^#define PTX_T2T_BLOCK_SIZE /;"	d
PTX_T2T_DEFAULT_TIMEOUT_MS	NDEF/ptxNDEF_T2TOP.h	/^#define PTX_T2T_DEFAULT_TIMEOUT_MS /;"	d
PTX_T2T_MIN_TX_BUFFER_SIZE	NATIVE_TAG/ptxNativeTag_T2T.h	/^#define PTX_T2T_MIN_TX_BUFFER_SIZE /;"	d
PTX_T2T_SUPPORTED_VERSION	NDEF/ptxNDEF_T2TOP.h	/^#define PTX_T2T_SUPPORTED_VERSION /;"	d
PTX_T3TOP_ATTRIBUTE_INFORMATION_BYTES	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_ATTRIBUTE_INFORMATION_BYTES /;"	d	file:
PTX_T3TOP_ATTRIBUTE_INFORMATION_BYTES_CHECKSUM	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_ATTRIBUTE_INFORMATION_BYTES_CHECKSUM /;"	d	file:
PTX_T3TOP_BLOCK_SIZE	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_BLOCK_SIZE /;"	d	file:
PTX_T3TOP_CHECK_RSP_OFFSET_DATA	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_CHECK_RSP_OFFSET_DATA /;"	d	file:
PTX_T3TOP_CHECK_RSP_OFFSET_NUMBER_BYTES	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_CHECK_RSP_OFFSET_NUMBER_BYTES /;"	d	file:
PTX_T3TOP_CHECK_RSP_OFFSET_STATUSFLAG1	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_CHECK_RSP_OFFSET_STATUSFLAG1 /;"	d	file:
PTX_T3TOP_CHECK_RSP_OFFSET_STATUSFLAG2	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_CHECK_RSP_OFFSET_STATUSFLAG2 /;"	d	file:
PTX_T3TOP_NOB_NDEF	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_NOB_NDEF /;"	d	file:
PTX_T3TOP_NOS_NDEF	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_NOS_NDEF /;"	d	file:
PTX_T3TOP_READ_ATTRIBUTE_INFORMATION_BLOCK_SC	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_READ_ATTRIBUTE_INFORMATION_BLOCK_SC /;"	d	file:
PTX_T3TOP_READ_NDEF_SC	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_READ_NDEF_SC /;"	d	file:
PTX_T3TOP_READ_ONLY_FLAG	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_READ_ONLY_FLAG /;"	d	file:
PTX_T3TOP_SENSF_REQ_SC_NDEF	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_SENSF_REQ_SC_NDEF /;"	d	file:
PTX_T3TOP_STATUSFLAG1_OK	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_STATUSFLAG1_OK /;"	d	file:
PTX_T3TOP_STATUSFLAG2_OK	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_STATUSFLAG2_OK /;"	d	file:
PTX_T3TOP_UPDATE_RSP_LENGTH	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_UPDATE_RSP_LENGTH /;"	d	file:
PTX_T3TOP_UPDATE_RSP_OFFSET_STATUSFLAG1	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_UPDATE_RSP_OFFSET_STATUSFLAG1 /;"	d	file:
PTX_T3TOP_UPDATE_RSP_OFFSET_STATUSFLAG2	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_UPDATE_RSP_OFFSET_STATUSFLAG2 /;"	d	file:
PTX_T3TOP_UPDATE_RSP_STATUSFLAG2_ACCESS_DENIED	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_UPDATE_RSP_STATUSFLAG2_ACCESS_DENIED /;"	d	file:
PTX_T3TOP_UPDATE_RSP_STATUSFLAG2_MAX_NUM_WRITES	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_UPDATE_RSP_STATUSFLAG2_MAX_NUM_WRITES /;"	d	file:
PTX_T3TOP_WRITE_ATTRIBUTE_INFORMATION_BLOCK_SC	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_WRITE_ATTRIBUTE_INFORMATION_BLOCK_SC /;"	d	file:
PTX_T3TOP_WRITE_FLAG_OFF	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_WRITE_FLAG_OFF /;"	d	file:
PTX_T3TOP_WRITE_FLAG_ON	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_WRITE_FLAG_ON /;"	d	file:
PTX_T3TOP_WRITE_NDEF_SC	NDEF/ptxNDEF_T3TOP.c	/^#define PTX_T3TOP_WRITE_NDEF_SC /;"	d	file:
PTX_T3T_CHECK_CODE	NATIVE_TAG/ptxNativeTag_T3T.c	/^#define PTX_T3T_CHECK_CODE /;"	d	file:
PTX_T3T_DEFAULT_TIMEOUT_MS	NDEF/ptxNDEF_T3TOP.h	/^#define PTX_T3T_DEFAULT_TIMEOUT_MS /;"	d
PTX_T3T_MIN_TX_BUFFER_SIZE	NATIVE_TAG/ptxNativeTag_T3T.h	/^#define PTX_T3T_MIN_TX_BUFFER_SIZE /;"	d
PTX_T3T_NDEF_BLOCKS_PER_OP	NATIVE_TAG/ptxNativeTag_T3T.c	/^#define PTX_T3T_NDEF_BLOCKS_PER_OP /;"	d	file:
PTX_T3T_NFCID2_LEN	NATIVE_TAG/ptxNativeTag_T3T.c	/^#define PTX_T3T_NFCID2_LEN /;"	d	file:
PTX_T3T_NFCID2_SIZE	NATIVE_TAG/ptxNativeTag_T3T.h	/^#define PTX_T3T_NFCID2_SIZE /;"	d
PTX_T3T_SENSF_REQ_CODE	NATIVE_TAG/ptxNativeTag_T3T.c	/^#define PTX_T3T_SENSF_REQ_CODE /;"	d	file:
PTX_T3T_SENSF_REQ_SC_NDEF	NATIVE_TAG/ptxNativeTag_T3T.c	/^#define PTX_T3T_SENSF_REQ_SC_NDEF /;"	d	file:
PTX_T3T_SUPPORTED_VERSION	NDEF/ptxNDEF_T3TOP.h	/^#define PTX_T3T_SUPPORTED_VERSION /;"	d
PTX_T3T_UPDATE_CODE	NATIVE_TAG/ptxNativeTag_T3T.c	/^#define PTX_T3T_UPDATE_CODE /;"	d	file:
PTX_T4T_	COMMON/ptxT4T.h	/^#define PTX_T4T_$/;"	d
PTX_T4T_APPLICATION_IDENTIFIER	COMMON/ptxT4T.h	/^static const uint8_t PTX_T4T_APPLICATION_IDENTIFIER[] =$/;"	v	typeref:typename:const uint8_t[]
PTX_T4T_BER_TLV_T_FIELD	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_BER_TLV_T_FIELD /;"	d	file:
PTX_T4T_BER_TLV_T_FIELD	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_BER_TLV_T_FIELD	/;"	d	file:
PTX_T4T_CC_FILE	COMMON/ptxT4T.h	/^static const uint8_t PTX_T4T_CC_FILE[] =$/;"	v	typeref:typename:const uint8_t[]
PTX_T4T_CC_FILE_IDENTIFIER	COMMON/ptxT4T.h	/^static const uint8_t PTX_T4T_CC_FILE_IDENTIFIER[] =$/;"	v	typeref:typename:const uint8_t[]
PTX_T4T_CC_FILE_SIZE	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_FILE_SIZE /;"	d
PTX_T4T_CC_FILE_SIZE_H	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_FILE_SIZE_H /;"	d
PTX_T4T_CC_FILE_SIZE_L	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_FILE_SIZE_L /;"	d
PTX_T4T_CC_MAPPING_VERSION	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_MAPPING_VERSION /;"	d
PTX_T4T_CC_MLC	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_MLC /;"	d
PTX_T4T_CC_MLC_H	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_MLC_H /;"	d
PTX_T4T_CC_MLC_L	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_MLC_L /;"	d
PTX_T4T_CC_MLE	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_MLE /;"	d
PTX_T4T_CC_MLE_H	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_MLE_H /;"	d
PTX_T4T_CC_MLE_L	COMMON/ptxT4T.h	/^#define PTX_T4T_CC_MLE_L /;"	d
PTX_T4T_CLASS_BYTE_NON_SECURE_MESSAGING	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_CLASS_BYTE_NON_SECURE_MESSAGING /;"	d	file:
PTX_T4T_CLASS_BYTE_NON_SECURE_MESSAGING	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_CLASS_BYTE_NON_SECURE_MESSAGING	/;"	d	file:
PTX_T4T_DATA_TLV_T_FIELD	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_DATA_TLV_T_FIELD /;"	d	file:
PTX_T4T_DEFAULT_TIMEOUT_MS	NDEF/ptxNDEF_T4TOP.h	/^#define PTX_T4T_DEFAULT_TIMEOUT_MS /;"	d
PTX_T4T_ENDEF_LENGTH	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_ENDEF_LENGTH	/;"	d	file:
PTX_T4T_INSTRUCTION_CODE_READ_BINARY	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_INSTRUCTION_CODE_READ_BINARY /;"	d	file:
PTX_T4T_INSTRUCTION_CODE_READ_BINARY	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_INSTRUCTION_CODE_READ_BINARY	/;"	d	file:
PTX_T4T_INSTRUCTION_CODE_READ_BINARY_ODO	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_INSTRUCTION_CODE_READ_BINARY_ODO /;"	d	file:
PTX_T4T_INSTRUCTION_CODE_READ_BINARY_ODO	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_INSTRUCTION_CODE_READ_BINARY_ODO	/;"	d	file:
PTX_T4T_INSTRUCTION_CODE_SELECT	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_INSTRUCTION_CODE_SELECT /;"	d	file:
PTX_T4T_INSTRUCTION_CODE_SELECT	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_INSTRUCTION_CODE_SELECT	/;"	d	file:
PTX_T4T_INSTRUCTION_CODE_UPDATE_BINARY	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_INSTRUCTION_CODE_UPDATE_BINARY /;"	d	file:
PTX_T4T_INSTRUCTION_CODE_UPDATE_BINARY	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_INSTRUCTION_CODE_UPDATE_BINARY	/;"	d	file:
PTX_T4T_INSTRUCTION_CODE_UPDATE_BINARY_ODO	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_INSTRUCTION_CODE_UPDATE_BINARY_ODO /;"	d	file:
PTX_T4T_INSTRUCTION_CODE_UPDATE_BINARY_ODO	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_INSTRUCTION_CODE_UPDATE_BINARY_ODO	/;"	d	file:
PTX_T4T_MAX_BYTES_RECEIVE	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_MAX_BYTES_RECEIVE /;"	d	file:
PTX_T4T_MAX_BYTES_SEND	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_MAX_BYTES_SEND /;"	d	file:
PTX_T4T_MAX_ENLEN	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_MAX_ENLEN /;"	d	file:
PTX_T4T_MAX_NLEN	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_MAX_NLEN /;"	d	file:
PTX_T4T_MIN_TX_BUFFER_SIZE	NATIVE_TAG/ptxNativeTag_T4T.h	/^#define PTX_T4T_MIN_TX_BUFFER_SIZE /;"	d
PTX_T4T_NDEF_ACCESS_FULL_READ	COMMON/ptxT4T.h	/^#define PTX_T4T_NDEF_ACCESS_FULL_READ /;"	d
PTX_T4T_NDEF_ACCESS_FULL_WRITE	COMMON/ptxT4T.h	/^#define PTX_T4T_NDEF_ACCESS_FULL_WRITE /;"	d
PTX_T4T_NDEF_FILE_IDENTIFIER	COMMON/ptxT4T.h	/^static const uint8_t PTX_T4T_NDEF_FILE_IDENTIFIER[] =$/;"	v	typeref:typename:const uint8_t[]
PTX_T4T_NDEF_LENGTH	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_NDEF_LENGTH	/;"	d	file:
PTX_T4T_NDEF_MESSAGE_FILE_SIZE	COMMON/ptxT4T.h	/^#define PTX_T4T_NDEF_MESSAGE_FILE_SIZE /;"	d
PTX_T4T_NDEF_MESSAGE_FILE_SIZE_H	COMMON/ptxT4T.h	/^#define PTX_T4T_NDEF_MESSAGE_FILE_SIZE_H /;"	d
PTX_T4T_NDEF_MESSAGE_FILE_SIZE_L	COMMON/ptxT4T.h	/^#define PTX_T4T_NDEF_MESSAGE_FILE_SIZE_L /;"	d
PTX_T4T_P1_SELECT_NDEF_APP	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_P1_SELECT_NDEF_APP /;"	d	file:
PTX_T4T_P2_SELECT_NDEF_APP	NATIVE_TAG/ptxNativeTag_T4T.c	/^#define PTX_T4T_P2_SELECT_NDEF_APP /;"	d	file:
PTX_T4T_READ_FAIL_FLAG_SW1_EXT	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_READ_FAIL_FLAG_SW1_EXT	/;"	d	file:
PTX_T4T_READ_FAIL_FLAG_SW1_SIMPLE	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_READ_FAIL_FLAG_SW1_SIMPLE	/;"	d	file:
PTX_T4T_READ_FAIL_FLAG_SW2_SIMPLE	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_READ_FAIL_FLAG_SW2_SIMPLE	/;"	d	file:
PTX_T4T_SELECT_FAIL_FLAG_SW1	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_SELECT_FAIL_FLAG_SW1	/;"	d	file:
PTX_T4T_SELECT_FAIL_FLAG_SW2	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_SELECT_FAIL_FLAG_SW2	/;"	d	file:
PTX_T4T_STATUS_WORD_LENGTH	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_STATUS_WORD_LENGTH /;"	d	file:
PTX_T4T_SUCCESS_FLAG_SW1	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_SUCCESS_FLAG_SW1 /;"	d	file:
PTX_T4T_SUCCESS_FLAG_SW2	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_SUCCESS_FLAG_SW2 /;"	d	file:
PTX_T4T_SW1_ERROR_WRONG_P1P2	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_SW1_ERROR_WRONG_P1P2 /;"	d	file:
PTX_T4T_SW2_ERROR_FILE_OR_APP_NOT_FOUND	NDEF/ptxNDEF_T4TOP.c	/^#define PTX_T4T_SW2_ERROR_FILE_OR_APP_NOT_FOUND /;"	d	file:
PTX_T5TOP_2ND_READ_OP_3BL_GET_FULL_LENGTH	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_2ND_READ_OP_3BL_GET_FULL_LENGTH /;"	d	file:
PTX_T5TOP_2ND_READ_OP_3BL_GET_PART_LENGTH	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_2ND_READ_OP_3BL_GET_PART_LENGTH /;"	d	file:
PTX_T5TOP_2ND_READ_OP_GET_FULL_LENGTH	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_2ND_READ_OP_GET_FULL_LENGTH /;"	d	file:
PTX_T5TOP_2ND_READ_OP_NOT_REQUIRED	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_2ND_READ_OP_NOT_REQUIRED /;"	d	file:
PTX_T5TOP_CC_ADD_INFO_LOCK_BLOCK_MASK	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_ADD_INFO_LOCK_BLOCK_MASK /;"	d	file:
PTX_T5TOP_CC_ADD_INFO_MBREAD_MASK	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_ADD_INFO_MBREAD_MASK /;"	d	file:
PTX_T5TOP_CC_ADD_INFO_SPECIAL_FRAME_MASK	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_ADD_INFO_SPECIAL_FRAME_MASK /;"	d	file:
PTX_T5TOP_CC_BLOCK_NUMBER	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_BLOCK_NUMBER /;"	d	file:
PTX_T5TOP_CC_MAGIC_NUMBER_E1	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_MAGIC_NUMBER_E1 /;"	d	file:
PTX_T5TOP_CC_MAGIC_NUMBER_E2	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_MAGIC_NUMBER_E2 /;"	d	file:
PTX_T5TOP_CC_OFFSET_ADDITIONAL_FEATURE	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_OFFSET_ADDITIONAL_FEATURE /;"	d	file:
PTX_T5TOP_CC_OFFSET_MAGIC_NUMBER	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_OFFSET_MAGIC_NUMBER /;"	d	file:
PTX_T5TOP_CC_OFFSET_MLEN_BASIC	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_OFFSET_MLEN_BASIC /;"	d	file:
PTX_T5TOP_CC_OFFSET_MLEN_EXTENDED	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_OFFSET_MLEN_EXTENDED /;"	d	file:
PTX_T5TOP_CC_OFFSET_VERSION_ACCESS	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_OFFSET_VERSION_ACCESS /;"	d	file:
PTX_T5TOP_CC_READ_ACCESS_MASK	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_READ_ACCESS_MASK /;"	d	file:
PTX_T5TOP_CC_VERSION_MASK	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_VERSION_MASK /;"	d	file:
PTX_T5TOP_CC_WRITE_ACCESS_MASK	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_CC_WRITE_ACCESS_MASK /;"	d	file:
PTX_T5TOP_INTERNAL_BUFLENGTH	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_INTERNAL_BUFLENGTH /;"	d	file:
PTX_T5TOP_NDEF_MESSAGE_TLV_T	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_NDEF_MESSAGE_TLV_T /;"	d	file:
PTX_T5TOP_OFFSET_RES_DATA	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_OFFSET_RES_DATA /;"	d	file:
PTX_T5TOP_OFFSET_RES_FLAG	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_OFFSET_RES_FLAG /;"	d	file:
PTX_T5TOP_RES_FLAG_ERROR_MASK	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_RES_FLAG_ERROR_MASK /;"	d	file:
PTX_T5TOP_TERMINATOR_TLV_T	NDEF/ptxNDEF_T5TOP.c	/^#define PTX_T5TOP_TERMINATOR_TLV_T /;"	d	file:
PTX_T5T_DEFAULT_TIMEOUT_MS	NDEF/ptxNDEF_T5TOP.h	/^#define PTX_T5T_DEFAULT_TIMEOUT_MS /;"	d
PTX_T5T_EXT_LOCK_SINGLE_BLOCK_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_EXT_LOCK_SINGLE_BLOCK_REQ_CODE /;"	d	file:
PTX_T5T_EXT_READ_MULTIPLE_BLOCK_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_EXT_READ_MULTIPLE_BLOCK_REQ_CODE /;"	d	file:
PTX_T5T_EXT_READ_SINGLE_BLOCK_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_EXT_READ_SINGLE_BLOCK_REQ_CODE /;"	d	file:
PTX_T5T_EXT_WRITE_SINGLE_BLOCK_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_EXT_WRITE_SINGLE_BLOCK_REQ_CODE /;"	d	file:
PTX_T5T_FDT_V_EOF	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_FDT_V_EOF /;"	d	file:
PTX_T5T_LOCK_SINGLE_BLOCK_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_LOCK_SINGLE_BLOCK_REQ_CODE /;"	d	file:
PTX_T5T_MIN_TX_BUFFER_SIZE	NATIVE_TAG/ptxNativeTag_T5T.h	/^#define PTX_T5T_MIN_TX_BUFFER_SIZE /;"	d
PTX_T5T_READ_MULTIPLE_BLOCK_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_READ_MULTIPLE_BLOCK_REQ_CODE /;"	d	file:
PTX_T5T_READ_SINGLE_BLOCK_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_READ_SINGLE_BLOCK_REQ_CODE /;"	d	file:
PTX_T5T_REQ_FLAG_AMS_SET_MASK	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_REQ_FLAG_AMS_SET_MASK /;"	d	file:
PTX_T5T_REQ_FLAG_HIGHT_DATA_RATE_SET_MASK	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_REQ_FLAG_HIGHT_DATA_RATE_SET_MASK /;"	d	file:
PTX_T5T_REQ_FLAG_OPTION_BIT_SET_MASK	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_REQ_FLAG_OPTION_BIT_SET_MASK /;"	d	file:
PTX_T5T_REQ_FLAG_SELECT_FLAG_SET_MASK	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_REQ_FLAG_SELECT_FLAG_SET_MASK /;"	d	file:
PTX_T5T_REQ_FLAG_TEMPLATE_MASK	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_REQ_FLAG_TEMPLATE_MASK /;"	d	file:
PTX_T5T_SELECTED_FALSE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_SELECTED_FALSE /;"	d	file:
PTX_T5T_SELECTED_TRUE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_SELECTED_TRUE /;"	d	file:
PTX_T5T_SELECT_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_SELECT_REQ_CODE /;"	d	file:
PTX_T5T_SLPV_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_SLPV_REQ_CODE /;"	d	file:
PTX_T5T_SUPPORTED_VERSION	NDEF/ptxNDEF_T5TOP.h	/^#define PTX_T5T_SUPPORTED_VERSION /;"	d
PTX_T5T_UID_SIZE	NATIVE_TAG/ptxNativeTag_T5T.h	/^#define PTX_T5T_UID_SIZE /;"	d
PTX_T5T_WRITE_SINGLE_BLOCK_REQ_CODE	NATIVE_TAG/ptxNativeTag_T5T.c	/^#define PTX_T5T_WRITE_SINGLE_BLOCK_REQ_CODE /;"	d	file:
Params	FELICA_DTE/ptxFeliCa_DTE.h	/^    ptxFeliCa_DTE_Params_t              Params;             \/**< Test Parameter *\/$/;"	m	struct:ptxFeliCa_DTE_TestParams	typeref:typename:ptxFeliCa_DTE_Params_t
Params	RF_TEST/ptxRF_Test.h	/^    ptxRF_Test_Params_t         Params;                 \/**< RF-Test-specific parameters *\/$/;"	m	struct:ptxRF_Test_TestParams	typeref:typename:ptxRF_Test_Params_t
Parm	NSC/ptxNSC.h	/^    ptxNSC_RfPar_Params_t               Parm;                   \/**< Param. *\/$/;"	m	struct:ptxNSC_RfPar	typeref:typename:ptxNSC_RfPar_Params_t
ParmId	NSC/ptxNSC.h	/^    ptxNSC_RfParameter_Id_t             ParmId;                 \/**< Param Type. *\/$/;"	m	struct:ptxNSC_RfPar	typeref:typename:ptxNSC_RfParameter_Id_t
PerformanceTest	FELICA_DTE/ptxFeliCa_DTE.h	/^    ptxFeliCa_DTE_PerformanceTest_t     PerformanceTest;    \/**< RFU *\/$/;"	m	union:ptxFeliCa_DTE_Params	typeref:typename:ptxFeliCa_DTE_PerformanceTest_t
Plat	HCE/ptxHce.h	/^    struct ptxPlat          *Plat;              \/**< Reference to Plat Component. *\/$/;"	m	struct:ptxHce	typeref:struct:ptxPlat *
Plat	IOT_READER/ptx_IOT_READER.h	/^        struct ptxPlat              *Plat;                              \/**< Reference to Plat /;"	m	struct:ptxIoTRd	typeref:struct:ptxPlat *
Plat	NSC/ptxNSC.h	/^    void                        *Plat;                      \/**< Pointer to platform component./;"	m	struct:ptxNSC	typeref:typename:void *
Plat	NSC/ptxNSC.h	/^    void                        *Plat;                      \/**< Pointer to platform component./;"	m	struct:ptxNSC_ConfigPars	typeref:typename:void *
PollA	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_HBRConfig_Int_t  PollA;                            \/**< Higher bitrate settings fo/;"	m	struct:ptxIoTRd_HBRConfig	typeref:typename:ptxIoTRd_HBRConfig_Int_t
PollB	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_HBRConfig_Int_t  PollB;                            \/**< Higher bitrate settings fo/;"	m	struct:ptxIoTRd_HBRConfig	typeref:typename:ptxIoTRd_HBRConfig_Int_t
PollGuardTime	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollGuardTime;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PollMode	IOT_READER/ptx_IOT_READER.h	/^        ptxNSC_PollType_t           PollMode;                           \/**< Poll Mode *\/$/;"	m	struct:ptxIoTRd	typeref:typename:ptxNSC_PollType_t
PollModeDisabled	NSC/ptxNSC.h	/^    PollModeDisabled,                                           \/**< Disables any polling activ/;"	e	enum:ptxNSC_PollType
PollTypeA	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollTypeA;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PollTypeADeviceLimit	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollTypeADeviceLimit;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PollTypeB	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollTypeB;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PollTypeBDeviceLimit	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollTypeBDeviceLimit;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PollTypeF212	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollTypeF212;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PollTypeF424	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollTypeF424;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PollTypeFDeviceLimit	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollTypeFDeviceLimit;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PollTypeV	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollTypeV;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PollTypeVDeviceLimit	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     PollTypeVDeviceLimit;$/;"	m	struct:ptxIoTRd_DiscConfig	typeref:typename:uint8_t
PowerAmpOverCurrThreshold	NSC/ptxNSC_System.h	/^    uint8_t PowerAmpOverCurrThreshold;      \/**< Power Amplifier: Over-current Threshold.>*\/$/;"	m	struct:ptxNSC_System	typeref:typename:uint8_t
PowerAmpTempThreshold	NSC/ptxNSC_System.h	/^    uint8_t PowerAmpTempThreshold;          \/**< Power Amplifier: Temperature Threshold.>*\/$/;"	m	struct:ptxNSC_System	typeref:typename:uint8_t
PowerMode_Active	NSC/ptxNSC.h	/^    PowerMode_Active           = 0x00u,                     \/**< Active mode. Default mode of o/;"	e	enum:ptxNSC_Power_Mode
PowerMode_StandBy	NSC/ptxNSC.h	/^    PowerMode_StandBy          = 0x01u,                     \/**< StandBy mode. Low power mode, /;"	e	enum:ptxNSC_Power_Mode
Pps1	NSC/ptxNSC.h	/^    uint8_t         Pps1;                                               \/**< PPS1.*\/$/;"	m	union:ptxNSC_RfActProt_ISODEP_Param	typeref:typename:uint8_t
PresCheck_A	IOT_READER/ptx_IOT_READER.h	/^    PresCheck_A,                                                            \/**< Mechanism A. P/;"	e	enum:ptxIoTRd_CheckPresType
PresCheck_B	IOT_READER/ptx_IOT_READER.h	/^    PresCheck_B                                                             \/**< Mechanism B. P/;"	e	enum:ptxIoTRd_CheckPresType
ProductID	NSC/ptxNSC.h	/^    uint8_t                     ProductID;                  \/**< Chip-specific product (family)/;"	m	struct:ptxNSC	typeref:typename:uint8_t
ProgressCB	FELICA_DTE/ptxFeliCa_DTE.h	/^    ptxFeliCa_DTE_ProgressFn_t          ProgressCB;         \/**< Optional Callback-Function to /;"	m	struct:ptxFeliCa_DTE_TestParams	typeref:typename:ptxFeliCa_DTE_ProgressFn_t
Prot_ISODEP	IOT_READER/ptx_IOT_READER.h	/^    Prot_ISODEP    = 4,$/;"	e	enum:ptxIoTRd_CardProtocol
Prot_NFCDEP	IOT_READER/ptx_IOT_READER.h	/^    Prot_NFCDEP    = 5,$/;"	e	enum:ptxIoTRd_CardProtocol
Prot_T2T	IOT_READER/ptx_IOT_READER.h	/^    Prot_T2T       = 2,$/;"	e	enum:ptxIoTRd_CardProtocol
Prot_T3T	IOT_READER/ptx_IOT_READER.h	/^    Prot_T3T       = 3,$/;"	e	enum:ptxIoTRd_CardProtocol
Prot_T5T	IOT_READER/ptx_IOT_READER.h	/^    Prot_T5T       = 6,$/;"	e	enum:ptxIoTRd_CardProtocol
Prot_Undefined	IOT_READER/ptx_IOT_READER.h	/^    Prot_Undefined = 0,$/;"	e	enum:ptxIoTRd_CardProtocol
RES_FLAG	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     RES_FLAG;                                       \/**< RF-Technology Type-V. RES_/;"	m	struct:ptxIoTRd_CardVParams	typeref:typename:uint8_t
RFConfigMiscParams	NSC/ptxNSC.h	/^    ptxNSC_RFMiscConfig_Param_t RFConfigMiscParams;         \/**< Shadow-Copy of RF Config Misc./;"	m	struct:ptxNSC	typeref:typename:ptxNSC_RFMiscConfig_Param_t
RFU	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         RFU[4];                         \/**< to be ignored and not /;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint8_t[4]
RFU	RF_TEST/ptxRF_Test.h	/^    uint8_t                     RFU;                  \/**< RFU Parameter *\/$/;"	m	struct:ptxRF_Test_Carrier_Params	typeref:typename:uint8_t
RF_DISCOVER_STATUS_CARD_ACTIVE	IOT_READER/ptx_IOT_READER.h	/^#define RF_DISCOVER_STATUS_CARD_ACTIVE /;"	d
RF_DISCOVER_STATUS_DISCOVER_DONE	IOT_READER/ptx_IOT_READER.h	/^#define RF_DISCOVER_STATUS_DISCOVER_DONE /;"	d
RF_DISCOVER_STATUS_DISCOVER_RUNNING	IOT_READER/ptx_IOT_READER.h	/^#define RF_DISCOVER_STATUS_DISCOVER_RUNNING /;"	d
RF_DISCOVER_STATUS_LISTEN_A	IOT_READER/ptx_IOT_READER.h	/^#define RF_DISCOVER_STATUS_LISTEN_A /;"	d
RF_DISCOVER_STATUS_NO_CARD	IOT_READER/ptx_IOT_READER.h	/^#define RF_DISCOVER_STATUS_NO_CARD /;"	d
RF_LAST_RF_CONFIG_ENTRY	IOT_READER/ptx_IOT_READER.h	/^    RF_LAST_RF_CONFIG_ENTRY,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_LPCD_STATUS_DEVICE_FOUND	IOT_READER/ptx_IOT_READER.h	/^#define RF_LPCD_STATUS_DEVICE_FOUND /;"	d
RF_LPCD_STATUS_NO_DEVICE	IOT_READER/ptx_IOT_READER.h	/^#define RF_LPCD_STATUS_NO_DEVICE /;"	d
RF_Listen	IOT_READER/ptx_IOT_READER.h	/^    RF_Listen,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Misc	IOT_READER/ptx_IOT_READER.h	/^    RF_Misc,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollA106	IOT_READER/ptx_IOT_READER.h	/^    RF_PollA106,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollA212	IOT_READER/ptx_IOT_READER.h	/^    RF_PollA212,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollA424	IOT_READER/ptx_IOT_READER.h	/^    RF_PollA424,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollA848	IOT_READER/ptx_IOT_READER.h	/^    RF_PollA848,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollB106	IOT_READER/ptx_IOT_READER.h	/^    RF_PollB106,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollB212	IOT_READER/ptx_IOT_READER.h	/^    RF_PollB212,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollB424	IOT_READER/ptx_IOT_READER.h	/^    RF_PollB424,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollB848	IOT_READER/ptx_IOT_READER.h	/^    RF_PollB848,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollF212	IOT_READER/ptx_IOT_READER.h	/^    RF_PollF212,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollF424	IOT_READER/ptx_IOT_READER.h	/^    RF_PollF424,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_PollV	IOT_READER/ptx_IOT_READER.h	/^    RF_PollV,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_TEST_BITRATE_106	RF_TEST/ptxRF_Test.h	/^    RF_TEST_BITRATE_106,                                \/**< RF Bitrate 106 kBit\/s *\/$/;"	e	enum:ptxRF_Test_BitRate
RF_TEST_BITRATE_212	RF_TEST/ptxRF_Test.h	/^    RF_TEST_BITRATE_212,                                \/**< RF Bitrate 212 kBit\/s *\/$/;"	e	enum:ptxRF_Test_BitRate
RF_TEST_BITRATE_424	RF_TEST/ptxRF_Test.h	/^    RF_TEST_BITRATE_424,                                \/**< RF Bitrate 424 kBit\/s *\/$/;"	e	enum:ptxRF_Test_BitRate
RF_TEST_BITRATE_848	RF_TEST/ptxRF_Test.h	/^    RF_TEST_BITRATE_848,                                \/**< RF Bitrate 848 kBit\/s *\/$/;"	e	enum:ptxRF_Test_BitRate
RF_TEST_ID_Carrier	RF_TEST/ptxRF_Test.h	/^    RF_TEST_ID_Carrier,                                 \/**< Unmodulated Carrier-On Test *\/$/;"	e	enum:ptxRF_Test_TestID
RF_TEST_ID_PRBS_15	RF_TEST/ptxRF_Test.h	/^    RF_TEST_ID_PRBS_15,                                 \/**< PRBS-15 Test *\/$/;"	e	enum:ptxRF_Test_TestID
RF_TEST_ID_PRBS_9	RF_TEST/ptxRF_Test.h	/^    RF_TEST_ID_PRBS_9,                                  \/**< PRBS-9 Test *\/$/;"	e	enum:ptxRF_Test_TestID
RF_TEST_TECH_A	RF_TEST/ptxRF_Test.h	/^    RF_TEST_TECH_A,                                     \/**< NFC-A Technology *\/$/;"	e	enum:ptxRF_Test_TechType
RF_TEST_TECH_B	RF_TEST/ptxRF_Test.h	/^    RF_TEST_TECH_B,                                     \/**< NFC-B Technology *\/$/;"	e	enum:ptxRF_Test_TechType
RF_TEST_TECH_F	RF_TEST/ptxRF_Test.h	/^    RF_TEST_TECH_F,                                     \/**< NFC-F Technology *\/$/;"	e	enum:ptxRF_Test_TechType
RF_TEST_TECH_V	RF_TEST/ptxRF_Test.h	/^    RF_TEST_TECH_V,                                     \/**< NFC-V Technology *\/$/;"	e	enum:ptxRF_Test_TechType
RF_Wavebank_0	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_0,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_1	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_1,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_10	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_10,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_11	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_11,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_12	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_12,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_13	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_13,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_14	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_14,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_15	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_15,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_16	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_16,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_17	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_17,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_18	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_18,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_19	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_19,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_2	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_2,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_3	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_3,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_4	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_4,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_5	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_5,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_6	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_6,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_7	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_7,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_8	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_8,$/;"	e	enum:ptxIoTRd_ChipConfigID
RF_Wavebank_9	IOT_READER/ptx_IOT_READER.h	/^    RF_Wavebank_9,$/;"	e	enum:ptxIoTRd_ChipConfigID
RSSIModeCfg	IOT_READER/ptx_IOT_READER.h	/^        uint8_t                     RSSIModeCfg[5];                     \/**< Internal Config-Bu/;"	m	struct:ptxIoTRd	typeref:typename:uint8_t[5]
RSSI_Mode_Disabled	IOT_READER/ptx_IOT_READER.h	/^    RSSI_Mode_Disabled,                                                     \/**< Disable RSSI-M/;"	e	enum:ptxIoTRd_RSSI_Mode
RSSI_Mode_Enabled	IOT_READER/ptx_IOT_READER.h	/^    RSSI_Mode_Enabled,                                                      \/**< Enable RSSI-Mo/;"	e	enum:ptxIoTRd_RSSI_Mode
RWFlag	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         RWFlag;                         \/**< access condition wheth/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint8_t
RX_BUFFER_SIZE	COMMON/ptxCOMMON.h	/^#define RX_BUFFER_SIZE /;"	d
ReadAccess	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         ReadAccess;                     \/**< read permission *\/$/;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint8_t
ReadAccess	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         ReadAccess;                 \/**< Read permission *\/$/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint8_t
ReadRandomAdd	NSC/ptxNSC.h	/^    ReadRandomAdd = 1u,                \/**< Read Random Addres. *\/$/;"	e	enum:ptxNSC_ReadCmd_Type
Regs	NSC/ptxNSC.h	/^    ptxNSC_RfConfig_Regs_t  Regs;                               \/**< REGISTERS *\/$/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:ptxNSC_RfConfig_Regs_t
RegsListen	NSC/ptxNSC.h	/^    uint8_t    *RegsListen;             \/**< Array of Registers for Listen Mode. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsListen_Len	NSC/ptxNSC.h	/^    size_t      RegsListen_Len;         \/**< length of \\ref RegsListen. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPollV	NSC/ptxNSC.h	/^    uint8_t    *RegsPollV;              \/**< Array of Registers for Poll V Tech. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPollV_Len	NSC/ptxNSC.h	/^    size_t      RegsPollV_Len;          \/**< Length of \\ref RegsPollV *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPolla106	NSC/ptxNSC.h	/^    uint8_t    *RegsPolla106;           \/**< Array of Registers for Poll A Tech at 106 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPolla106_Len	NSC/ptxNSC.h	/^    size_t      RegsPolla106_Len;       \/**< Length of \\ref RegsPolla106 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPolla212	NSC/ptxNSC.h	/^    uint8_t    *RegsPolla212;           \/**< Array of Registers for Poll A Tech at 212 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPolla212_Len	NSC/ptxNSC.h	/^    size_t      RegsPolla212_Len;       \/**< Length of \\ref RegsPolla212 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPolla424	NSC/ptxNSC.h	/^    uint8_t    *RegsPolla424;           \/**< Array of Registers for Poll A Tech at 424 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPolla424_Len	NSC/ptxNSC.h	/^    size_t      RegsPolla424_Len;       \/**< Length of \\ref RegsPolla424 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPolla848	NSC/ptxNSC.h	/^    uint8_t    *RegsPolla848;           \/**< Array of Registers for Poll A Tech at 848 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPolla848_Len	NSC/ptxNSC.h	/^    size_t      RegsPolla848_Len;       \/**< Length of \\ref RegsPolla424 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPollb106	NSC/ptxNSC.h	/^    uint8_t    *RegsPollb106;           \/**< Array of Registers for Poll B Tech at 106 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPollb106_Len	NSC/ptxNSC.h	/^    size_t      RegsPollb106_Len;       \/**< Length of \\ref RegsPollb106 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPollb212	NSC/ptxNSC.h	/^    uint8_t    *RegsPollb212;           \/**< Array of Registers for Poll B Tech at 212 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPollb212_Len	NSC/ptxNSC.h	/^    size_t      RegsPollb212_Len;       \/**< Length of \\ref RegsPollb212 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPollb424	NSC/ptxNSC.h	/^    uint8_t    *RegsPollb424;           \/**< Array of Registers for Poll B Tech at 424 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPollb424_Len	NSC/ptxNSC.h	/^    size_t      RegsPollb424_Len;       \/**< Length of \\ref RegsPollb424 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPollb848	NSC/ptxNSC.h	/^    uint8_t    *RegsPollb848;           \/**< Array of Registers for Poll A Tech at 848 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPollb848_Len	NSC/ptxNSC.h	/^    size_t      RegsPollb848_Len;       \/**< Length of \\ref RegsPollb848 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPollf212	NSC/ptxNSC.h	/^    uint8_t    *RegsPollf212;           \/**< Array of Registers for Poll F Tech at 212 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPollf212_Len	NSC/ptxNSC.h	/^    size_t      RegsPollf212_Len;       \/**< Length of \\ref RegsPollf212 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
RegsPollf424	NSC/ptxNSC.h	/^    uint8_t    *RegsPollf424;           \/**< Array of Registers for Poll F Tech at 424 Kbps. *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:uint8_t *
RegsPollf424_Len	NSC/ptxNSC.h	/^    size_t      RegsPollf424_Len;       \/**< Length of \\ref RegsPollf424 *\/$/;"	m	struct:ptxNSC_RfConfig_Regs	typeref:typename:size_t
ResLimit	NSC/ptxNSC.h	/^    ptxNsc_RfPar_ResLimit_t             ResLimit;               \/**< RES Limit. *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNsc_RfPar_ResLimit_t
ResLimit	NSC/ptxNSC.h	/^    uint8_t     ResLimit;                                       \/**< RES Limit. *\/$/;"	m	struct:ptxNsc_RfPar_ResLimit	typeref:typename:uint8_t
ResultBuffer	FELICA_DTE/ptxFeliCa_DTE.h	/^    uint8_t                             *ResultBuffer;      \/**< Pointer to Result-Buffer *\/$/;"	m	struct:ptxFeliCa_DTE_PerformanceTest	typeref:typename:uint8_t *
ResultBufferSize	FELICA_DTE/ptxFeliCa_DTE.h	/^    uint8_t                             ResultBufferSize;   \/**< Size of Result-Buffer *\/$/;"	m	struct:ptxFeliCa_DTE_PerformanceTest	typeref:typename:uint8_t
RevInfo_C_Stack	IOT_READER/ptx_IOT_READER.h	/^    RevInfo_C_Stack,$/;"	e	enum:ptxIoTRd_RevisionType
RevInfo_ChipID	IOT_READER/ptx_IOT_READER.h	/^    RevInfo_ChipID,$/;"	e	enum:ptxIoTRd_RevisionType
RevInfo_DFY_Code	IOT_READER/ptx_IOT_READER.h	/^    RevInfo_DFY_Code,$/;"	e	enum:ptxIoTRd_RevisionType
RevInfo_DFY_Toolchain	IOT_READER/ptx_IOT_READER.h	/^    RevInfo_DFY_Toolchain,$/;"	e	enum:ptxIoTRd_RevisionType
RevInfo_Local_Changes	IOT_READER/ptx_IOT_READER.h	/^    RevInfo_Local_Changes,$/;"	e	enum:ptxIoTRd_RevisionType
RevInfo_ProductID	IOT_READER/ptx_IOT_READER.h	/^    RevInfo_ProductID,$/;"	e	enum:ptxIoTRd_RevisionType
RfAct_APropr_Params	NSC/ptxNSC.h	/^    ptxNSC_RfActTech_APropr_Param_t RfAct_APropr_Params;                            \/**< NSC Rf/;"	m	union:ptxNSC_RfActTech_Param	typeref:typename:ptxNSC_RfActTech_APropr_Param_t
RfAct_A_Params	NSC/ptxNSC.h	/^    ptxNSC_RfActTech_A_Param_t      RfAct_A_Params;                                 \/**< NSC Rf/;"	m	union:ptxNSC_RfActTech_Param	typeref:typename:ptxNSC_RfActTech_A_Param_t
RfAct_B_Params	NSC/ptxNSC.h	/^    ptxNSC_RfActTech_B_Param_t      RfAct_B_Params;                                 \/**< NSC Rf/;"	m	union:ptxNSC_RfActTech_Param	typeref:typename:ptxNSC_RfActTech_B_Param_t
RfAct_F_Params	NSC/ptxNSC.h	/^    ptxNSC_RfActTech_F_Param_t      RfAct_F_Params;                                 \/**< NSC Rf/;"	m	union:ptxNSC_RfActTech_Param	typeref:typename:ptxNSC_RfActTech_F_Param_t
RfAct_V_Params	NSC/ptxNSC.h	/^    ptxNSC_RfActTech_V_Param_t      RfAct_V_Params;                                 \/**< NSC Rf/;"	m	union:ptxNSC_RfActTech_Param	typeref:typename:ptxNSC_RfActTech_V_Param_t
RfCfgParam_Listen	NSC/ptxNSC.h	/^    RfCfgParam_Listen,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_MaxNum	NSC/ptxNSC.h	/^    RfCfgParam_MaxNum$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsMisc	NSC/ptxNSC.h	/^    RfCfgParam_RegsMisc,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollA106	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollA106,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollA212	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollA212,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollA424	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollA424,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollA848	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollA848,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollB106	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollB106,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollB212	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollB212,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollB424	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollB424,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollB848	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollB848,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollF212	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollF212,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollF424	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollF424,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_RegsPollV	NSC/ptxNSC.h	/^    RfCfgParam_RegsPollV,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Undefined	NSC/ptxNSC.h	/^    RfCfgParam_Undefined,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_0	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_0,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_1	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_1,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_10	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_10,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_11	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_11,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_12	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_12,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_13	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_13,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_14	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_14,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_15	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_15,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_16	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_16,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_17	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_17,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_18	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_18,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_19	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_19,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_2	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_2,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_3	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_3,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_4	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_4,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_5	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_5,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_6	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_6,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_7	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_7,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_8	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_8,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfCfgParam_Wavebank_9	NSC/ptxNSC.h	/^	RfCfgParam_Wavebank_9,$/;"	e	enum:ptxNSC_RfConfig_ParamList
RfDiscoverNoFieldOff	NSC/ptxNSC.h	/^    RfDiscoverNoFieldOff  = 0x05u,                                      \/**< Rf Discovery No Fi/;"	e	enum:ptxNSC_RfDeact_State
RfDiscovery	NSC/ptxNSC.h	/^    RfDiscovery           = 0x02u,                                      \/**< Rf Discovery State/;"	e	enum:ptxNSC_RfDeact_State
RfEvent_NotRcvd	IOT_READER/ptx_IOT_READER.c	/^    RfEvent_NotRcvd,$/;"	e	enum:ptxIoTRd_RfEventRcvd_Id	file:
RfEvent_RfCltRcvd	IOT_READER/ptx_IOT_READER.c	/^    RfEvent_RfCltRcvd,$/;"	e	enum:ptxIoTRd_RfEventRcvd_Id	file:
RfEvent_RfCtrlAck	IOT_READER/ptx_IOT_READER.c	/^    RfEvent_RfCtrlAck,$/;"	e	enum:ptxIoTRd_RfEventRcvd_Id	file:
RfEvent_RfCtrlAttCmd	IOT_READER/ptx_IOT_READER.c	/^    RfEvent_RfCtrlAttCmd$/;"	e	enum:ptxIoTRd_RfEventRcvd_Id	file:
RfEvent_RfErrorRcvd	IOT_READER/ptx_IOT_READER.c	/^    RfEvent_RfErrorRcvd,$/;"	e	enum:ptxIoTRd_RfEventRcvd_Id	file:
RfEvent_RfErrorTimeOutRcvd	IOT_READER/ptx_IOT_READER.c	/^    RfEvent_RfErrorTimeOutRcvd,$/;"	e	enum:ptxIoTRd_RfEventRcvd_Id	file:
RfEvent_RfMsgChainedRcvd	IOT_READER/ptx_IOT_READER.c	/^    RfEvent_RfMsgChainedRcvd,$/;"	e	enum:ptxIoTRd_RfEventRcvd_Id	file:
RfEvent_RfMsgRcvd	IOT_READER/ptx_IOT_READER.c	/^    RfEvent_RfMsgRcvd,$/;"	e	enum:ptxIoTRd_RfEventRcvd_Id	file:
RfField	NSC/ptxNSC.h	/^    ptxNsc_RfPar_RfField_t              RfField;                \/**< RF Field *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNsc_RfPar_RfField_t
RfField	NSC/ptxNSC.h	/^    uint8_t     RfField;                                        \/**< RF field *\/$/;"	m	struct:ptxNsc_RfPar_RfField	typeref:typename:uint8_t
RfIdle	NSC/ptxNSC.h	/^    RfIdle                = 0x01u,                                      \/**< Rf Idle State. *\/$/;"	e	enum:ptxNSC_RfDeact_State
RfMsg	IOT_READER/ptx_IOT_READER.h	/^        ptxIoTRd_RfMsg_t            RfMsg;                              \/**< Rf Message receive/;"	m	struct:ptxIoTRd	typeref:typename:ptxIoTRd_RfMsg_t
RfMsg_CtrlAck	IOT_READER/ptx_IOT_READER.h	/^    RfMsg_CtrlAck,$/;"	e	enum:ptxIoTRd_RfMsgState
RfMsg_CtrlAttCmd	IOT_READER/ptx_IOT_READER.h	/^    RfMsg_CtrlAttCmd,$/;"	e	enum:ptxIoTRd_RfMsgState
RfMsg_NotReceived	IOT_READER/ptx_IOT_READER.h	/^    RfMsg_NotReceived,$/;"	e	enum:ptxIoTRd_RfMsgState
RfMsg_RfClt	IOT_READER/ptx_IOT_READER.h	/^    RfMsg_RfClt$/;"	e	enum:ptxIoTRd_RfMsgState
RfMsg_RfError	IOT_READER/ptx_IOT_READER.h	/^    RfMsg_RfError,$/;"	e	enum:ptxIoTRd_RfMsgState
RfMsg_RfErrorTimeOut	IOT_READER/ptx_IOT_READER.h	/^    RfMsg_RfErrorTimeOut,$/;"	e	enum:ptxIoTRd_RfMsgState
RfMsg_RfMsg_Chained_Rcv	IOT_READER/ptx_IOT_READER.h	/^    RfMsg_RfMsg_Chained_Rcv,$/;"	e	enum:ptxIoTRd_RfMsgState
RfMsg_RfMsg_Rcv	IOT_READER/ptx_IOT_READER.h	/^    RfMsg_RfMsg_Rcv,$/;"	e	enum:ptxIoTRd_RfMsgState
RfParameter_EoC	NSC/ptxNSC.h	/^    RfParameter_EoC,                                            \/**< End-of-Command parameter i/;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Fwt	NSC/ptxNSC.h	/^    RfParameter_Fwt,                                            \/**< Set Frame Waiting Time in /;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Res_Limit	NSC/ptxNSC.h	/^    RfParameter_Res_Limit,                                      \/**< Set max. response limit fo/;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Rf_Field	NSC/ptxNSC.h	/^    RfParameter_Rf_Field,                                       \/**< Enables or disables the RF/;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Rf_Tech	NSC/ptxNSC.h	/^    RfParameter_Rf_Tech,                                        \/**< Set RF technology. *\/$/;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Rx_Bit_Rate	NSC/ptxNSC.h	/^    RfParameter_Rx_Bit_Rate,                                    \/**< Set reception bitrate *\/$/;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Rx_CRC	NSC/ptxNSC.h	/^    RfParameter_Rx_CRC,                                         \/**< Enable or disable RF CRC o/;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Rx_PAR	NSC/ptxNSC.h	/^    RfParameter_Rx_PAR,                                         \/**< Enable or disable RF PARIT/;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Tx_Bit_Rate	NSC/ptxNSC.h	/^    RfParameter_Tx_Bit_Rate,                                    \/**< Set transmission bitrate */;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Tx_CRC	NSC/ptxNSC.h	/^    RfParameter_Tx_CRC,                                         \/**< Enable or disable RF CRC o/;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Tx_PAR	NSC/ptxNSC.h	/^    RfParameter_Tx_PAR,                                         \/**< Enable or disable RF PARIT/;"	e	enum:ptxNSC_RfParameter_Id
RfParameter_Tx_Residual_Bits	NSC/ptxNSC.h	/^    RfParameter_Tx_Residual_Bits,                               \/**< Defines residual bits for /;"	e	enum:ptxNSC_RfParameter_Id
RfParams	NSC/ptxNSC.h	/^    ptxNSC_RfPar_t              RfParams[PTX_NSC_RF_SET_PARAMS_MAX];                \/**< Buffer/;"	m	struct:ptxNSC_RfSetParams_Par	typeref:typename:ptxNSC_RfPar_t[]
RfPollSleep	NSC/ptxNSC.h	/^    RfPollSleep           = 0x03u,                                      \/**< Rf Poll State. *\/$/;"	e	enum:ptxNSC_RfDeact_State
RfProt	NSC/ptxNSC.h	/^    uint8_t                     RfProt;                                 \/**< Rf Protocol. *\/$/;"	m	struct:ptxNSC_RfActiv_Param	typeref:typename:uint8_t
RfTech	NSC/ptxNSC.h	/^    ptxNSC_RfPar_RfTech_t               RfTech;                 \/**< RF technology. *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNSC_RfPar_RfTech_t
RfTech	NSC/ptxNSC.h	/^    uint8_t                     RfTech;                                 \/**< Rf Technology. *\/$/;"	m	struct:ptxNSC_RfActiv_Param	typeref:typename:uint8_t
RfTech	NSC/ptxNSC.h	/^    uint8_t     RfTech;                                         \/**< RF technology. *\/$/;"	m	struct:ptxNSC_RfPar_RfTech	typeref:typename:uint8_t
RfTechActParams	NSC/ptxNSC.h	/^    ptxNSC_RfActTech_Param_t    RfTechActParams;                        \/**< Rf Technology spec/;"	m	struct:ptxNSC_RfActiv_Param	typeref:typename:ptxNSC_RfActTech_Param_t
RfTest_Carrier	NSC/ptxNSC.h	/^    RfTest_Carrier   = 3,                                       \/**< RF-Test Identifier CARRIER/;"	e	enum:ptxNSC_RfTest_ID
RfTest_PRBS_15	NSC/ptxNSC.h	/^    RfTest_PRBS_15   = 5,                                       \/**< RF-Test Identifier PRBS-15/;"	e	enum:ptxNSC_RfTest_ID
RfTest_PRBS_9	NSC/ptxNSC.h	/^    RfTest_PRBS_9    = 4,                                       \/**< RF-Test Identifier PRBS-9./;"	e	enum:ptxNSC_RfTest_ID
RfTest_TRANSAC_A	NSC/ptxNSC.h	/^    RfTest_TRANSAC_A = 1,                                       \/**< RF-Test Identifier TRANSAC/;"	e	enum:ptxNSC_RfTest_ID
RfTest_TRANSAC_B	NSC/ptxNSC.h	/^    RfTest_TRANSAC_B = 2,                                       \/**< RF-Test Identifier TRANSAC/;"	e	enum:ptxNSC_RfTest_ID
Rf_Deactivate_Type	NSC/ptxNSC.h	/^    ptxNSC_RfDeact_Type_t       Rf_Deactivate_Type;                     \/**< RF deactivation ty/;"	m	struct:ptxNSC_RfDeactPars	typeref:typename:ptxNSC_RfDeact_Type_t
Rf_State	NSC/ptxNSC.h	/^    ptxNSC_RfDeact_State_t      Rf_State;                               \/**< RF state-machine s/;"	m	struct:ptxNSC_RfDeactPars	typeref:typename:ptxNSC_RfDeact_State_t
RspBuff	NSC/ptxNSC.h	/^    uint8_t         RspBuff[PTX_NSC_MAX_RSP_LEN];           \/**< Buffer used for Responses *\/$/;"	m	struct:ptxNSC_Rsp	typeref:typename:uint8_t[]
RspLen	NSC/ptxNSC.h	/^    size_t          RspLen;                                 \/**< Length of RSP. *\/$/;"	m	struct:ptxNSC_Rsp	typeref:typename:size_t
RsvdArea	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        RsvdArea[PTX_T2TOP_MAX_NUMBER_MEMORY_CONTROL * 2];          /;"	m	struct:ptxNDEF_T2TOP_MEMORY_CONTROL_TLV	typeref:typename:uint16_t[]
Rx	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_BitRates_t Rx;                                     \/**< Higher bitrate settings in/;"	m	struct:ptxIoTRd_HBRConfig_Int	typeref:typename:ptxIoTRd_BitRates_t
RxBitRate	NSC/ptxNSC.h	/^    ptxNSC_RfPar_RxBitRate_t            RxBitRate;              \/**< RX Bit Rate. *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNSC_RfPar_RxBitRate_t
RxBitRate	NSC/ptxNSC.h	/^    uint8_t     RxBitRate;                                      \/**< RX Bit Rate. *\/$/;"	m	struct:ptxNSC_RfPar_RxBitRate	typeref:typename:uint8_t
RxBuffer	NDEF/ptxNDEF.h	/^    uint8_t                         *RxBuffer;          \/**< Internal Rx-Buffer provided by upp/;"	m	struct:ptxNDEF_InitParams	typeref:typename:uint8_t *
RxBuffer	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         *RxBuffer;                      \/**< Internal Rx-Buffer pro/;"	m	struct:ptxNDEF_T2TOP_InitParams	typeref:typename:uint8_t *
RxBuffer	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         *RxBuffer;             \/**< Internal Rx-Buffer provided by /;"	m	struct:ptxNDEF_T2TOP	typeref:typename:uint8_t *
RxBuffer	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         *RxBuffer;                      \/**< Internal Rx-Buffer pro/;"	m	struct:ptxNDEF_T3TOP_InitParams	typeref:typename:uint8_t *
RxBuffer	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         *RxBuffer;             \/**< Internal Rx-Buffer provided by /;"	m	struct:ptxNDEF_T3TOP	typeref:typename:uint8_t *
RxBuffer	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         *RxBuffer;             \/**< Internal Rx-Buffer provided by /;"	m	struct:ptxNDEF_T4TOP	typeref:typename:uint8_t *
RxBuffer	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         *RxBuffer;     \/**< Internal Rx-Buffer *\/$/;"	m	struct:ptxNDEF_T4TOP_InitParams	typeref:typename:uint8_t *
RxBuffer	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         *RxBuffer;              \/**< Internal Rx-Buffer *\/$/;"	m	struct:ptxNDEF_T5TOP_InitParams	typeref:typename:uint8_t *
RxBuffer	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         *RxBuffer;              \/**< Internal Rx-Buffer provided by/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:uint8_t *
RxBufferSize	NDEF/ptxNDEF.h	/^    uint32_t                        RxBufferSize;       \/**< Size of Internal Rx-Buffer *\/$/;"	m	struct:ptxNDEF_InitParams	typeref:typename:uint32_t
RxBufferSize	NDEF/ptxNDEF_T2TOP.h	/^    uint32_t                        RxBufferSize;                   \/**< Size of Internal Rx-Bu/;"	m	struct:ptxNDEF_T2TOP_InitParams	typeref:typename:uint32_t
RxBufferSize	NDEF/ptxNDEF_T2TOP.h	/^    uint32_t                        RxBufferSize;          \/**< Internal Rx-Buffer size *\/$/;"	m	struct:ptxNDEF_T2TOP	typeref:typename:uint32_t
RxBufferSize	NDEF/ptxNDEF_T3TOP.h	/^    uint32_t                        RxBufferSize;                   \/**< Size of Internal Rx-Bu/;"	m	struct:ptxNDEF_T3TOP_InitParams	typeref:typename:uint32_t
RxBufferSize	NDEF/ptxNDEF_T3TOP.h	/^    uint32_t                        RxBufferSize;          \/**< Internal Rx-Buffer size *\/$/;"	m	struct:ptxNDEF_T3TOP	typeref:typename:uint32_t
RxBufferSize	NDEF/ptxNDEF_T4TOP.h	/^    uint32_t                        RxBufferSize;          \/**< Internal Rx-Buffer size *\/$/;"	m	struct:ptxNDEF_T4TOP	typeref:typename:uint32_t
RxBufferSize	NDEF/ptxNDEF_T4TOP.h	/^    uint32_t                        RxBufferSize;  \/**< Size of Internal Rx-Buffer *\/$/;"	m	struct:ptxNDEF_T4TOP_InitParams	typeref:typename:uint32_t
RxBufferSize	NDEF/ptxNDEF_T5TOP.h	/^    uint32_t                        RxBufferSize;           \/**< Internal Rx-Buffer size *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:uint32_t
RxBufferSize	NDEF/ptxNDEF_T5TOP.h	/^    uint32_t                        RxBufferSize;           \/**< Size of internal Rx-Buffer *\/$/;"	m	struct:ptxNDEF_T5TOP_InitParams	typeref:typename:uint32_t
RxCRC	NSC/ptxNSC.h	/^    ptxNSC_RfPar_RxCRC_t                RxCRC;                  \/**< RX CRC. *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNSC_RfPar_RxCRC_t
RxCRC	NSC/ptxNSC.h	/^    uint8_t     RxCRC;                                          \/**< RX CRC. *\/$/;"	m	struct:ptxNSC_RfPar_RxCRC	typeref:typename:uint8_t
RxCb	PLAT/Psoc/ptxPLAT_INT.h	/^        pptxPlat_RxCallBack_t       RxCb;               \/**< Callback function *\/$/;"	m	struct:ptxPlat	typeref:typename:pptxPlat_RxCallBack_t
RxCb	PLAT/Psoc/ptxPLAT_SPI.h	/^    pptxPlat_RxCallBack_t   RxCb;           \/**< Rx Callback function. *\/$/;"	m	struct:ptxPLAT_Spi	typeref:typename:pptxPlat_RxCallBack_t
RxCltMode	NSC/ptxNSC.h	/^    uint8_t                     RxCltMode;                  \/**< Rx Clt Mode. *\/$/;"	m	struct:ptxNSC	typeref:typename:uint8_t
RxMsgData	HCE/ptxHce.h	/^    uint8_t                    *RxMsgData;      \/**< Rx Message data buffer *\/$/;"	m	struct:__anond974ec060508	typeref:typename:uint8_t *
RxMsgDataLen	HCE/ptxHce.h	/^    uint32_t                    RxMsgDataLen;   \/**< Rx Message data length *\/$/;"	m	struct:__anond974ec060508	typeref:typename:uint32_t
RxMsgDataShortMsgData	HCE/ptxHce.h	/^    uint8_t                     RxMsgDataShortMsgData[e_SizeOfShortMsgBuffer];      \/**< Rx mes/;"	m	struct:__anond974ec060508	typeref:typename:uint8_t[]
RxParity	NSC/ptxNSC.h	/^    ptxNSC_RfPar_RxParity_t             RxParity;               \/**< RX Parity. *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNSC_RfPar_RxParity_t
RxParity	NSC/ptxNSC.h	/^    uint8_t     RxParity;                                       \/**< RX Parity. *\/$/;"	m	struct:ptxNSC_RfPar_RxParity	typeref:typename:uint8_t
SEL_RES	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     SEL_RES;                                        \/**< RF-Technology Type-A. SEL_/;"	m	struct:ptxIoTRd_CardAParams	typeref:typename:uint8_t
SEL_RES_LEN	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     SEL_RES_LEN;                                    \/**< RF-Technology Type-A. SEL_/;"	m	struct:ptxIoTRd_CardAParams	typeref:typename:uint8_t
SENSB_RES	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     SENSB_RES[PTX_IOTRD_TECH_B_SENSB_MAX_SIZE];     \/**< RF-Technology Type-B. SENS/;"	m	struct:ptxIoTRd_CardBParams	typeref:typename:uint8_t[]
SENSF_RES	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     SENSF_RES[PTX_IOTRD_TECH_F_SENSF_MAX_SIZE];     \/**< RF-Technology Type-F. SENS/;"	m	struct:ptxIoTRd_CardFParams	typeref:typename:uint8_t[]
SENSF_RES_LEN	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     SENSF_RES_LEN;                                  \/**< RF-Technology Type-F. SENS/;"	m	struct:ptxIoTRd_CardFParams	typeref:typename:uint8_t
SENS_RES	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     SENS_RES[PTX_IOTRD_TECH_A_SENSRES_MAX_SIZE];    \/**< RF-Technology Type-A. SENS/;"	m	struct:ptxIoTRd_CardAParams	typeref:typename:uint8_t[]
SIZE_OF_SECTION_0	NSC/ptxNSC_uCODE.h	/^#define SIZE_OF_SECTION_0 /;"	d
SIZE_OF_SECTION_1	NSC/ptxNSC_uCODE.h	/^#define SIZE_OF_SECTION_1 /;"	d
STACK_COMPS_DEBUG_PORT_PTXDBG_PORT_H_	ptxDBG_PORT.h	/^#define STACK_COMPS_DEBUG_PORT_PTXDBG_PORT_H_$/;"	d
SYSTEM_CFG_TAG_CON_CLK_SOURCE	NSC/ptxNSC_System.h	/^# define SYSTEM_CFG_TAG_CON_CLK_SOURCE /;"	d
SYSTEM_CFG_TAG_CON_NHOST	NSC/ptxNSC_System.h	/^# define SYSTEM_CFG_TAG_CON_NHOST /;"	d
SYSTEM_CFG_TAG_CON_NHOST_CE	NSC/ptxNSC_System.h	/^# define SYSTEM_CFG_TAG_CON_NHOST_CE /;"	d
SYSTEM_CFG_TAG_CON_VAR_LBS	NSC/ptxNSC_System.h	/^# define SYSTEM_CFG_TAG_CON_VAR_LBS /;"	d
SYSTEM_CFG_TAG_PA_OVERCURRENT_TH	NSC/ptxNSC_System.h	/^# define SYSTEM_CFG_TAG_PA_OVERCURRENT_TH /;"	d
SYSTEM_CFG_TAG_PA_TEMPERATURE_TH	NSC/ptxNSC_System.h	/^# define SYSTEM_CFG_TAG_PA_TEMPERATURE_TH /;"	d
SYSTEM_CFG_TAG_VERSION	NSC/ptxNSC_System.h	/^# define SYSTEM_CFG_TAG_VERSION /;"	d
SYSTEM_DEFAULT_CON_CLK_SOURCE	NSC/ptxNSC_System.h	/^# define SYSTEM_DEFAULT_CON_CLK_SOURCE /;"	d
SYSTEM_DEFAULT_CON_NHOST	NSC/ptxNSC_System.h	/^static const uint8_t SYSTEM_DEFAULT_CON_NHOST[4]        = {0x78U, 0x00U, 0x00U, 0x00U};         /;"	v	typeref:typename:const uint8_t[4]
SYSTEM_DEFAULT_CON_NHOST_CE	NSC/ptxNSC_System.h	/^static const uint8_t SYSTEM_DEFAULT_CON_NHOST_CE[4]     = {0x78U, 0x40U, 0x00U, 0x00U};         /;"	v	typeref:typename:const uint8_t[4]
SYSTEM_DEFAULT_CON_VAR_LBS	NSC/ptxNSC_System.h	/^# define SYSTEM_DEFAULT_CON_VAR_LBS /;"	d
SYSTEM_DEFAULT_PA_OVERCURRENT_TH	NSC/ptxNSC_System.h	/^# define SYSTEM_DEFAULT_PA_OVERCURRENT_TH /;"	d
SYSTEM_DEFAULT_PA_TEMPERATURE_TH	NSC/ptxNSC_System.h	/^# define SYSTEM_DEFAULT_PA_TEMPERATURE_TH /;"	d
SYSTEM_DEFAULT_VERSION	NSC/ptxNSC_System.h	/^# define SYSTEM_DEFAULT_VERSION /;"	d
SYS_CONTROL_REG	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG /;"	d
SYS_CONTROL_REG_DFY_ENABLE_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_DFY_ENABLE_MASK /;"	d
SYS_CONTROL_REG_DFY_ENABLE_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_DFY_ENABLE_MASK_INV /;"	d
SYS_CONTROL_REG_DFY_ENABLE_POS	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_DFY_ENABLE_POS /;"	d
SYS_CONTROL_REG_DFY_ENABLE_RST	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_DFY_ENABLE_RST /;"	d
SYS_CONTROL_REG_RST	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_RST /;"	d
SYS_CONTROL_REG_SYS_SOFT_RESET_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_SYS_SOFT_RESET_MASK /;"	d
SYS_CONTROL_REG_SYS_SOFT_RESET_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_SYS_SOFT_RESET_MASK_INV /;"	d
SYS_CONTROL_REG_SYS_SOFT_RESET_POS	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_SYS_SOFT_RESET_POS /;"	d
SYS_CONTROL_REG_SYS_SOFT_RESET_RST	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_SYS_SOFT_RESET_RST /;"	d
SYS_CONTROL_REG_SYS_STANDBY_EN_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_SYS_STANDBY_EN_MASK /;"	d
SYS_CONTROL_REG_SYS_STANDBY_EN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_SYS_STANDBY_EN_MASK_INV /;"	d
SYS_CONTROL_REG_SYS_STANDBY_EN_POS	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_SYS_STANDBY_EN_POS /;"	d
SYS_CONTROL_REG_SYS_STANDBY_EN_RST	NSC/ptxNSC_Registers.h	/^#define SYS_CONTROL_REG_SYS_STANDBY_EN_RST /;"	d
SYS_ConClockSrc	IOT_READER/ptx_IOT_READER.h	/^    SYS_ConClockSrc,$/;"	e	enum:ptxIoTRd_ChipConfigID
SYS_ConNHosCE	IOT_READER/ptx_IOT_READER.h	/^    SYS_ConNHosCE,$/;"	e	enum:ptxIoTRd_ChipConfigID
SYS_ConNHost	IOT_READER/ptx_IOT_READER.h	/^    SYS_ConNHost,$/;"	e	enum:ptxIoTRd_ChipConfigID
SYS_ConVarLBS	IOT_READER/ptx_IOT_READER.h	/^    SYS_ConVarLBS,$/;"	e	enum:ptxIoTRd_ChipConfigID
SYS_IRQ_EN_REG	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG /;"	d
SYS_IRQ_EN_REG_CL_RFF_DET_OFF_IRQ_EN_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RFF_DET_OFF_IRQ_EN_MASK /;"	d
SYS_IRQ_EN_REG_CL_RFF_DET_OFF_IRQ_EN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RFF_DET_OFF_IRQ_EN_MASK_INV /;"	d
SYS_IRQ_EN_REG_CL_RFF_DET_OFF_IRQ_EN_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RFF_DET_OFF_IRQ_EN_POS /;"	d
SYS_IRQ_EN_REG_CL_RFF_DET_OFF_IRQ_EN_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RFF_DET_OFF_IRQ_EN_RST /;"	d
SYS_IRQ_EN_REG_CL_RFF_DET_ON_IRQ_EN_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RFF_DET_ON_IRQ_EN_MASK /;"	d
SYS_IRQ_EN_REG_CL_RFF_DET_ON_IRQ_EN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RFF_DET_ON_IRQ_EN_MASK_INV /;"	d
SYS_IRQ_EN_REG_CL_RFF_DET_ON_IRQ_EN_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RFF_DET_ON_IRQ_EN_POS /;"	d
SYS_IRQ_EN_REG_CL_RFF_DET_ON_IRQ_EN_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RFF_DET_ON_IRQ_EN_RST /;"	d
SYS_IRQ_EN_REG_CL_RX_IRQ_EN_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RX_IRQ_EN_MASK /;"	d
SYS_IRQ_EN_REG_CL_RX_IRQ_EN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RX_IRQ_EN_MASK_INV /;"	d
SYS_IRQ_EN_REG_CL_RX_IRQ_EN_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RX_IRQ_EN_POS /;"	d
SYS_IRQ_EN_REG_CL_RX_IRQ_EN_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_RX_IRQ_EN_RST /;"	d
SYS_IRQ_EN_REG_CL_TIMER0_EXP_IRQ_EN_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_TIMER0_EXP_IRQ_EN_MASK /;"	d
SYS_IRQ_EN_REG_CL_TIMER0_EXP_IRQ_EN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_TIMER0_EXP_IRQ_EN_MASK_INV /;"	d
SYS_IRQ_EN_REG_CL_TIMER0_EXP_IRQ_EN_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_TIMER0_EXP_IRQ_EN_POS /;"	d
SYS_IRQ_EN_REG_CL_TIMER0_EXP_IRQ_EN_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_TIMER0_EXP_IRQ_EN_RST /;"	d
SYS_IRQ_EN_REG_CL_TX_IRQ_EN_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_TX_IRQ_EN_MASK /;"	d
SYS_IRQ_EN_REG_CL_TX_IRQ_EN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_TX_IRQ_EN_MASK_INV /;"	d
SYS_IRQ_EN_REG_CL_TX_IRQ_EN_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_TX_IRQ_EN_POS /;"	d
SYS_IRQ_EN_REG_CL_TX_IRQ_EN_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_CL_TX_IRQ_EN_RST /;"	d
SYS_IRQ_EN_REG_DFY_IRQ_EN_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_DFY_IRQ_EN_MASK /;"	d
SYS_IRQ_EN_REG_DFY_IRQ_EN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_DFY_IRQ_EN_MASK_INV /;"	d
SYS_IRQ_EN_REG_DFY_IRQ_EN_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_DFY_IRQ_EN_POS /;"	d
SYS_IRQ_EN_REG_DFY_IRQ_EN_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_DFY_IRQ_EN_RST /;"	d
SYS_IRQ_EN_REG_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_RST /;"	d
SYS_IRQ_EN_REG_SYS_GEN_IRQ_EN_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_SYS_GEN_IRQ_EN_MASK /;"	d
SYS_IRQ_EN_REG_SYS_GEN_IRQ_EN_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_SYS_GEN_IRQ_EN_MASK_INV /;"	d
SYS_IRQ_EN_REG_SYS_GEN_IRQ_EN_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_SYS_GEN_IRQ_EN_POS /;"	d
SYS_IRQ_EN_REG_SYS_GEN_IRQ_EN_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_EN_REG_SYS_GEN_IRQ_EN_RST /;"	d
SYS_IRQ_REG	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG /;"	d
SYS_IRQ_REG_CL_RFF_DET_OFF_IRQ_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RFF_DET_OFF_IRQ_MASK /;"	d
SYS_IRQ_REG_CL_RFF_DET_OFF_IRQ_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RFF_DET_OFF_IRQ_MASK_INV /;"	d
SYS_IRQ_REG_CL_RFF_DET_OFF_IRQ_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RFF_DET_OFF_IRQ_POS /;"	d
SYS_IRQ_REG_CL_RFF_DET_OFF_IRQ_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RFF_DET_OFF_IRQ_RST /;"	d
SYS_IRQ_REG_CL_RFF_DET_ON_IRQ_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RFF_DET_ON_IRQ_MASK /;"	d
SYS_IRQ_REG_CL_RFF_DET_ON_IRQ_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RFF_DET_ON_IRQ_MASK_INV /;"	d
SYS_IRQ_REG_CL_RFF_DET_ON_IRQ_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RFF_DET_ON_IRQ_POS /;"	d
SYS_IRQ_REG_CL_RFF_DET_ON_IRQ_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RFF_DET_ON_IRQ_RST /;"	d
SYS_IRQ_REG_CL_RX_IRQ_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RX_IRQ_MASK /;"	d
SYS_IRQ_REG_CL_RX_IRQ_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RX_IRQ_MASK_INV /;"	d
SYS_IRQ_REG_CL_RX_IRQ_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RX_IRQ_POS /;"	d
SYS_IRQ_REG_CL_RX_IRQ_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_RX_IRQ_RST /;"	d
SYS_IRQ_REG_CL_TIMER0_EXP_IRQ_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_TIMER0_EXP_IRQ_MASK /;"	d
SYS_IRQ_REG_CL_TIMER0_EXP_IRQ_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_TIMER0_EXP_IRQ_MASK_INV /;"	d
SYS_IRQ_REG_CL_TIMER0_EXP_IRQ_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_TIMER0_EXP_IRQ_POS /;"	d
SYS_IRQ_REG_CL_TIMER0_EXP_IRQ_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_TIMER0_EXP_IRQ_RST /;"	d
SYS_IRQ_REG_CL_TX_IRQ_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_TX_IRQ_MASK /;"	d
SYS_IRQ_REG_CL_TX_IRQ_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_TX_IRQ_MASK_INV /;"	d
SYS_IRQ_REG_CL_TX_IRQ_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_TX_IRQ_POS /;"	d
SYS_IRQ_REG_CL_TX_IRQ_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_CL_TX_IRQ_RST /;"	d
SYS_IRQ_REG_DFY_IRQ_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_DFY_IRQ_MASK /;"	d
SYS_IRQ_REG_DFY_IRQ_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_DFY_IRQ_MASK_INV /;"	d
SYS_IRQ_REG_DFY_IRQ_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_DFY_IRQ_POS /;"	d
SYS_IRQ_REG_DFY_IRQ_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_DFY_IRQ_RST /;"	d
SYS_IRQ_REG_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_RST /;"	d
SYS_IRQ_REG_SYS_GEN_IRQ_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_SYS_GEN_IRQ_MASK /;"	d
SYS_IRQ_REG_SYS_GEN_IRQ_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_SYS_GEN_IRQ_MASK_INV /;"	d
SYS_IRQ_REG_SYS_GEN_IRQ_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_SYS_GEN_IRQ_POS /;"	d
SYS_IRQ_REG_SYS_GEN_IRQ_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_SYS_GEN_IRQ_RST /;"	d
SYS_IRQ_REG_SYS_IRQ_UPD_MASK	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_SYS_IRQ_UPD_MASK /;"	d
SYS_IRQ_REG_SYS_IRQ_UPD_MASK_INV	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_SYS_IRQ_UPD_MASK_INV /;"	d
SYS_IRQ_REG_SYS_IRQ_UPD_POS	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_SYS_IRQ_UPD_POS /;"	d
SYS_IRQ_REG_SYS_IRQ_UPD_RST	NSC/ptxNSC_Registers.h	/^#define SYS_IRQ_REG_SYS_IRQ_UPD_RST /;"	d
SYS_OvercurrentThreshold	IOT_READER/ptx_IOT_READER.h	/^    SYS_OvercurrentThreshold,$/;"	e	enum:ptxIoTRd_ChipConfigID
SYS_ThermalThreshold	IOT_READER/ptx_IOT_READER.h	/^    SYS_ThermalThreshold = 100,$/;"	e	enum:ptxIoTRd_ChipConfigID
SectorParams	NDEF/ptxNDEF_T2TOP.h	/^    ptxNDEF_T2TOP_Sector_t          SectorParams;          \/**< T2T Sector Parameters *\/$/;"	m	struct:ptxNDEF_T2TOP	typeref:typename:ptxNDEF_T2TOP_Sector_t
SelRes	NSC/ptxNSC.h	/^    uint8_t                     SelRes;                                             \/**< Select/;"	m	struct:ptxNSC_RfActTech_APropr_Param	typeref:typename:uint8_t
SensBRes	NSC/ptxNSC.h	/^    uint8_t                     SensBRes[PTX_NSC_TYPES_LISBSENSRES_LEN];            \/**< Buffer/;"	m	struct:ptxNSC_RfActTech_B_Param	typeref:typename:uint8_t[]
Size	NDEF/ptxNDEF_T2TOP.h	/^    uint16_t                        Size;                           \/**< Size in bytes *\/$/;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint16_t
Size	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         Size;                       \/**< Size *\/$/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint8_t
SpecialFrameRequired	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         SpecialFrameRequired;       \/**< special frame required *\/$/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint8_t
Speed	IOT_READER/ptx_IOT_READER.h	/^    uint32_t    Speed;                      \/**< Interface speed. Baudrate in bps. *\/$/;"	m	struct:ptxIoTRd_ComInterface_Params	typeref:typename:uint32_t
Spi	PLAT/Psoc/ptxPLAT_INT.h	/^        ptxPLAT_Spi_t               *Spi;               \/**< Pointer to SPI Context. Platform d/;"	m	struct:ptxPlat	typeref:typename:ptxPLAT_Spi_t *
SpiInstance	PLAT/Psoc/ptxPLAT_SPI.h	/^    void const              *SpiInstance;       \/**< Pointer to generated SPI interface instanc/;"	m	struct:ptxPLAT_SpiPort	typeref:typename:void const *
State	COMMON/ptxT4T.h	/^    ptxT4T_State_t          State;                                          \/**< (Application) /;"	m	struct:ptxT4T	typeref:typename:ptxT4T_State_t
State	IOT_READER/ptx_IOT_READER.h	/^        ptxIoTRd_RfMsgState_t     State;                                    \/**< RF Message sta/;"	m	struct:ptxIoTRd_RfMsg	typeref:typename:ptxIoTRd_RfMsgState_t
StatusType_DeactivateSleep	IOT_READER/ptx_IOT_READER.h	/^    StatusType_DeactivateSleep,$/;"	e	enum:ptxIoTRd_StatusType
StatusType_Discover	IOT_READER/ptx_IOT_READER.h	/^    StatusType_Discover,$/;"	e	enum:ptxIoTRd_StatusType
StatusType_LastRFError	IOT_READER/ptx_IOT_READER.h	/^    StatusType_LastRFError,$/;"	e	enum:ptxIoTRd_StatusType
StatusType_Lpcd	IOT_READER/ptx_IOT_READER.h	/^    StatusType_Lpcd,$/;"	e	enum:ptxIoTRd_StatusType
StatusType_System	IOT_READER/ptx_IOT_READER.h	/^    StatusType_System,$/;"	e	enum:ptxIoTRd_StatusType
SysInfo_VDPA_Calibration_Result	IOT_READER/ptx_IOT_READER.h	/^    SysInfo_VDPA_Calibration_Result,$/;"	e	enum:ptxIoTRd_SysInfoType
SysParams	NSC/ptxNSC.h	/^    struct ptxNSC_System        *SysParams;                 \/**< System parameters *\/$/;"	m	struct:ptxNSC	typeref:struct:ptxNSC_System *
SysState	NSC/ptxNSC.h	/^    ptxNSC_System_State_t       SysState;                   \/**< System state *\/$/;"	m	struct:ptxNSC	typeref:typename:ptxNSC_System_State_t
SystemState_ERR_CurrentLimit	NSC/ptxNSC.h	/^    SystemState_ERR_CurrentLimit$/;"	e	enum:ptxNSC_System_State
SystemState_ERR_Overcurrent	NSC/ptxNSC.h	/^    SystemState_ERR_Overcurrent,$/;"	e	enum:ptxNSC_System_State
SystemState_ERR_Temperature	NSC/ptxNSC.h	/^    SystemState_ERR_Temperature,$/;"	e	enum:ptxNSC_System_State
SystemState_OK	NSC/ptxNSC.h	/^    SystemState_OK,$/;"	e	enum:ptxNSC_System_State
T2TOP	NDEF/ptxNDEF.h	/^    ptxNDEF_T2TOP_t                 T2TOP;                  \/**< T2T Operation Component *\/$/;"	m	struct:ptxNDEF	typeref:typename:ptxNDEF_T2TOP_t
T3TOP	NDEF/ptxNDEF.h	/^    ptxNDEF_T3TOP_t                 T3TOP;                  \/**< T3T Operation Component *\/$/;"	m	struct:ptxNDEF	typeref:typename:ptxNDEF_T3TOP_t
T4TOP	NDEF/ptxNDEF.h	/^    ptxNDEF_T4TOP_t                 T4TOP;                  \/**< T4T Operation Component *\/$/;"	m	struct:ptxNDEF	typeref:typename:ptxNDEF_T4TOP_t
T4T_State_CC_File_Selected	COMMON/ptxT4T.h	/^    T4T_State_CC_File_Selected,$/;"	e	enum:ptxT4T_State
T4T_State_NDEF_Application_Selected	COMMON/ptxT4T.h	/^    T4T_State_NDEF_Application_Selected,$/;"	e	enum:ptxT4T_State
T4T_State_NDEF_File_Selected	COMMON/ptxT4T.h	/^    T4T_State_NDEF_File_Selected,$/;"	e	enum:ptxT4T_State
T4T_State_Reset	COMMON/ptxT4T.h	/^    T4T_State_Reset,$/;"	e	enum:ptxT4T_State
T5TOP	NDEF/ptxNDEF.h	/^    ptxNDEF_T5TOP_t                 T5TOP;                  \/**< T5T Operation Component *\/$/;"	m	struct:ptxNDEF	typeref:typename:ptxNDEF_T5TOP_t
T5T_FrameType_Special	NATIVE_TAG/ptxNativeTag_T5T.c	/^    T5T_FrameType_Special,$/;"	e	enum:ptxNativeTag_T5TFrameType	file:
T5T_FrameType_Standard	NATIVE_TAG/ptxNativeTag_T5T.c	/^    T5T_FrameType_Standard,$/;"	e	enum:ptxNativeTag_T5TFrameType	file:
THINKEY_GPIO_INTR_PIN	PLAT/Psoc/ptxPLAT_SPI.c	/^#define THINKEY_GPIO_INTR_PIN /;"	d	file:
THINKEY_SPI_MISO	PLAT/Psoc/ptxPLAT_SPI.c	/^#define THINKEY_SPI_MISO /;"	d	file:
THINKEY_SPI_MOSI	PLAT/Psoc/ptxPLAT_SPI.c	/^#define THINKEY_SPI_MOSI /;"	d	file:
THINKEY_SPI_SCLK	PLAT/Psoc/ptxPLAT_SPI.c	/^#define THINKEY_SPI_SCLK /;"	d	file:
THINKEY_SPI_SS	PLAT/Psoc/ptxPLAT_SPI.c	/^#define THINKEY_SPI_SS /;"	d	file:
TLVs	NDEF/ptxNDEF_T2TOP.h	/^    ptxNDEF_T2TOP_TLV_t             TLVs;                  \/**< T2T TLVs *\/$/;"	m	struct:ptxNDEF_T2TOP	typeref:typename:ptxNDEF_T2TOP_TLV_t
TX_BUFFER_SIZE	COMMON/ptxCOMMON.h	/^#define TX_BUFFER_SIZE /;"	d
TagLC_Initialized	NDEF/ptxNDEF_Defines.h	/^    TagLC_Initialized,$/;"	e	enum:ptxNDEF_TagLifeCycle
TagLC_NoNDEFTag	NDEF/ptxNDEF_Defines.h	/^    TagLC_NoNDEFTag,$/;"	e	enum:ptxNDEF_TagLifeCycle
TagLC_ReadOnly	NDEF/ptxNDEF_Defines.h	/^    TagLC_ReadOnly,$/;"	e	enum:ptxNDEF_TagLifeCycle
TagLC_ReadWrite	NDEF/ptxNDEF_Defines.h	/^    TagLC_ReadWrite,$/;"	e	enum:ptxNDEF_TagLifeCycle
TagTimeoutCheck	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint32_t            TagTimeoutCheck;        \/**< Timeout value of the tag for check operati/;"	m	struct:ptxNativeTag_T3T	typeref:typename:uint32_t
TagTimeoutUpdate	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint32_t            TagTimeoutUpdate;       \/**< Timeout value of the tag for update operat/;"	m	struct:ptxNativeTag_T3T	typeref:typename:uint32_t
TailIndex	HCE/ptxHce.h	/^    ptxHce_EventQueueRanges_t    TailIndex;     \/**< Tail Index *\/$/;"	m	struct:__anond974ec060608	typeref:typename:ptxHce_EventQueueRanges_t
Tambient	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     Tambient;                   \/**< Ambient temperature at which temp. sensor cali/;"	m	struct:ptxIoTRd_TempSense_Params	typeref:typename:uint8_t
TechParams	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_CardTechParams_t   TechParams;                                          \/**< Gener/;"	m	struct:ptxIoTRd_CardParams	typeref:typename:ptxIoTRd_CardTechParams_t
TechType	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_CardRFTechType_t   TechType;                                            \/**< Gener/;"	m	struct:ptxIoTRd_CardParams	typeref:typename:ptxIoTRd_CardRFTechType_t
Tech_TypeA	IOT_READER/ptx_IOT_READER.h	/^    Tech_TypeA = 0,$/;"	e	enum:ptxIoTRd_CardRFTechType
Tech_TypeB	IOT_READER/ptx_IOT_READER.h	/^    Tech_TypeB = 1,$/;"	e	enum:ptxIoTRd_CardRFTechType
Tech_TypeF	IOT_READER/ptx_IOT_READER.h	/^    Tech_TypeF = 2,$/;"	e	enum:ptxIoTRd_CardRFTechType
Tech_TypeV	IOT_READER/ptx_IOT_READER.h	/^    Tech_TypeV = 6,$/;"	e	enum:ptxIoTRd_CardRFTechType
Technology	RF_TEST/ptxRF_Test.h	/^    ptxRF_Test_TechType_t       Technology;             \/**< RF-Technology *\/$/;"	m	struct:ptxRF_Test_PRBS_Params	typeref:typename:ptxRF_Test_TechType_t
TemperatureSensor	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_TempSense_Params_t         *TemperatureSensor;   \/**< Initialization parameters fo/;"	m	struct:ptxIoTRd_InitPars	typeref:typename:ptxIoTRd_TempSense_Params_t *
TerminatorTLV	NDEF/ptxNDEF_T2TOP.h	/^    ptxNDEF_T2TOP_TERMINATOR_TLV_t                      TerminatorTLV;                          /;"	m	struct:ptxNDEF_T2TOP_TLV	typeref:typename:ptxNDEF_T2TOP_TERMINATOR_TLV_t
TerminatorTLVFound	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         TerminatorTLVFound;             \/**< Terminator TLV found c/;"	m	struct:ptxNDEF_T2TOP_TERMINATOR_TLV	typeref:typename:uint8_t
Thinkey_SysTick_Handler	PLAT/Psoc/ptxPLAT_TIMER.c	/^void Thinkey_SysTick_Handler(void) {$/;"	f	typeref:typename:void
TimeOutMS	FELICA_DTE/ptxFeliCa_DTE.h	/^    uint32_t                            TimeOutMS;          \/**< Timeout value in [ms] for a si/;"	m	struct:ptxFeliCa_DTE_PerformanceTest	typeref:typename:uint32_t
TimerInstance	PLAT/Psoc/ptxPLAT_TIMER.h	/^        void                        *TimerInstance;         \/*< Timer driver API instance. *\/$/;"	m	struct:ptxPlatTimer	typeref:typename:void *
TimerState	PLAT/Psoc/ptxPLAT_TIMER.h	/^        ptxPlatTimerState_t         TimerState;             \/*< Timer State. *\/$/;"	m	struct:ptxPlatTimer	typeref:typename:ptxPlatTimerState_t
Timer_Free	PLAT/Psoc/ptxPLAT_TIMER.h	/^        Timer_Free,                                         \/*< Available to be used. *\/$/;"	e	enum:ptxPlatTimerState
Timer_InUse	PLAT/Psoc/ptxPLAT_TIMER.h	/^        Timer_InUse,                                        \/*< Timer already used. *\/$/;"	e	enum:ptxPlatTimerState
Timer_NotInitialized	PLAT/Psoc/ptxPLAT_TIMER.h	/^        Timer_NotInitialized = 0,                           \/*< Initial state after allocation./;"	e	enum:ptxPlatTimerState
TransferState	PLAT/Psoc/ptxPLAT_SPI.h	/^    volatile uint8_t        TransferState;  \/**< Current state of the ongoing transfer. *\/$/;"	m	struct:ptxPLAT_Spi	typeref:typename:volatile uint8_t
Tshutdown	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     Tshutdown;                  \/**< Expected thermal shutdown treshold value. *\/$/;"	m	struct:ptxIoTRd_TempSense_Params	typeref:typename:uint8_t
Tx	IOT_READER/ptx_IOT_READER.h	/^    ptxIoTRd_BitRates_t Tx;                                     \/**< Higher bitrate settings in/;"	m	struct:ptxIoTRd_HBRConfig_Int	typeref:typename:ptxIoTRd_BitRates_t
TxBitRate	NSC/ptxNSC.h	/^    ptxNSC_RfPar_TxBitRate_t            TxBitRate;              \/**< TX Bit Rate. *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNSC_RfPar_TxBitRate_t
TxBitRate	NSC/ptxNSC.h	/^    uint8_t     TxBitRate;                                      \/**< TX Bit Rate. *\/$/;"	m	struct:ptxNSC_RfPar_TxBitRate	typeref:typename:uint8_t
TxBuffer	NATIVE_TAG/ptxNativeTag_T2T.h	/^    uint8_t             *TxBuffer;              \/**< Internal Tx-Buffer provided by upper layer/;"	m	struct:ptxNativeTag_T2T	typeref:typename:uint8_t *
TxBuffer	NATIVE_TAG/ptxNativeTag_T2T.h	/^    uint8_t             *TxBuffer;              \/**< Tx buffer *\/$/;"	m	struct:ptxNativeTag_T2T_InitParams	typeref:typename:uint8_t *
TxBuffer	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint8_t             *TxBuffer;              \/**< Internal Tx-Buffer provided by upper layer/;"	m	struct:ptxNativeTag_T3T	typeref:typename:uint8_t *
TxBuffer	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint8_t             *TxBuffer;              \/**< Internal Tx-Buffer provided by upper layer/;"	m	struct:ptxNativeTag_T3T_InitParams	typeref:typename:uint8_t *
TxBuffer	NATIVE_TAG/ptxNativeTag_T4T.h	/^    uint8_t                                 *TxBuffer;      \/**< Internal Tx-Buffer provided by/;"	m	struct:ptxNativeTag_T4T	typeref:typename:uint8_t *
TxBuffer	NATIVE_TAG/ptxNativeTag_T4T.h	/^    uint8_t             *TxBuffer;          \/**< Internal Tx-Buffer provided by upper layer *\/$/;"	m	struct:ptxNativeTag_T4T_InitParams	typeref:typename:uint8_t *
TxBuffer	NATIVE_TAG/ptxNativeTag_T5T.h	/^    uint8_t             *TxBuffer;              \/**< Internal Tx-Buffer provided by upper layer/;"	m	struct:ptxNativeTag_T5T	typeref:typename:uint8_t *
TxBuffer	NATIVE_TAG/ptxNativeTag_T5T.h	/^    uint8_t             *TxBuffer;              \/**< Internal Tx-Buffer provided by upper layer/;"	m	struct:ptxNativeTag_T5T_InitParams	typeref:typename:uint8_t *
TxBuffer	NDEF/ptxNDEF.h	/^    uint8_t                         *TxBuffer;          \/**< Internal Tx-Buffer provided by upp/;"	m	struct:ptxNDEF_InitParams	typeref:typename:uint8_t *
TxBuffer	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         *TxBuffer;                      \/**< Internal Tx-Buffer pro/;"	m	struct:ptxNDEF_T2TOP_InitParams	typeref:typename:uint8_t *
TxBuffer	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         *TxBuffer;                      \/**< Internal Tx-Buffer pro/;"	m	struct:ptxNDEF_T3TOP_InitParams	typeref:typename:uint8_t *
TxBuffer	NDEF/ptxNDEF_T4TOP.h	/^    uint8_t                         *TxBuffer;     \/**< Internal Tx-Buffer *\/$/;"	m	struct:ptxNDEF_T4TOP_InitParams	typeref:typename:uint8_t *
TxBuffer	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         *TxBuffer;              \/**< Internal Tx-Buffer *\/$/;"	m	struct:ptxNDEF_T5TOP_InitParams	typeref:typename:uint8_t *
TxBufferSize	NATIVE_TAG/ptxNativeTag_T2T.h	/^    uint32_t            TxBufferSize;           \/**< Tx buffer size *\/$/;"	m	struct:ptxNativeTag_T2T_InitParams	typeref:typename:uint32_t
TxBufferSize	NATIVE_TAG/ptxNativeTag_T3T.h	/^    uint32_t            TxBufferSize;           \/**< Size of TX Buffer *\/$/;"	m	struct:ptxNativeTag_T3T_InitParams	typeref:typename:uint32_t
TxBufferSize	NATIVE_TAG/ptxNativeTag_T4T.h	/^    uint32_t             TxBufferSize;      \/**< Size of TX Buffer *\/$/;"	m	struct:ptxNativeTag_T4T_InitParams	typeref:typename:uint32_t
TxBufferSize	NATIVE_TAG/ptxNativeTag_T5T.h	/^    uint32_t            TxBufferSize;           \/**< Size of Internal TX-Buffer *\/$/;"	m	struct:ptxNativeTag_T5T_InitParams	typeref:typename:uint32_t
TxBufferSize	NDEF/ptxNDEF.h	/^    uint32_t                        TxBufferSize;       \/**< Size of Internal TX-Buffer *\/$/;"	m	struct:ptxNDEF_InitParams	typeref:typename:uint32_t
TxBufferSize	NDEF/ptxNDEF_T2TOP.h	/^    uint32_t                        TxBufferSize;                   \/**< Size of Internal TX-Bu/;"	m	struct:ptxNDEF_T2TOP_InitParams	typeref:typename:uint32_t
TxBufferSize	NDEF/ptxNDEF_T3TOP.h	/^    uint32_t                        TxBufferSize;                   \/**< Size of Internal TX-Bu/;"	m	struct:ptxNDEF_T3TOP_InitParams	typeref:typename:uint32_t
TxBufferSize	NDEF/ptxNDEF_T4TOP.h	/^    uint32_t                        TxBufferSize;  \/**< Size of Internal TX-Buffer *\/$/;"	m	struct:ptxNDEF_T4TOP_InitParams	typeref:typename:uint32_t
TxBufferSize	NDEF/ptxNDEF_T5TOP.h	/^    uint32_t                        TxBufferSize;           \/**< Size of internal Tx-Buffer *\/$/;"	m	struct:ptxNDEF_T5TOP_InitParams	typeref:typename:uint32_t
TxCRC	NSC/ptxNSC.h	/^    ptxNSC_RfPar_TxCRC_t                TxCRC;                  \/**< TX CRC. *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNSC_RfPar_TxCRC_t
TxCRC	NSC/ptxNSC.h	/^    uint8_t     TxCRC;                                          \/**< TX CRC. *\/$/;"	m	struct:ptxNSC_RfPar_TxCRC	typeref:typename:uint8_t
TxParity	NSC/ptxNSC.h	/^    ptxNSC_RfPar_TxParity_t             TxParity;               \/**< TX Parity. *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNSC_RfPar_TxParity_t
TxParity	NSC/ptxNSC.h	/^    uint8_t     TxParity;                                       \/**< TX Parity. *\/$/;"	m	struct:ptxNSC_RfPar_TxParity	typeref:typename:uint8_t
TxResidualBits	NSC/ptxNSC.h	/^    ptxNsc_RfPar_TxResidualBits_t       TxResidualBits;         \/**< TX Residual Bits *\/$/;"	m	union:ptxNSC_RfPar_Params	typeref:typename:ptxNsc_RfPar_TxResidualBits_t
TxResidualBits	NSC/ptxNSC.h	/^    uint8_t     TxResidualBits;                                 \/**< Tx residual bits *\/$/;"	m	struct:ptxNsc_RfPar_TxResidualBits	typeref:typename:uint8_t
Type	NSC/ptxNSC.h	/^    ptxNSC_ReadCmd_Type_t       Type;                                           \/**< Type of NS/;"	m	struct:ptxNSC_ReadCmd_Par	typeref:typename:ptxNSC_ReadCmd_Type_t
Type	NSC/ptxNSC.h	/^    ptxNSC_WriteCmd_Type_t      Type;                                           \/**< Type of NS/;"	m	struct:ptxNSC_WriteCmd_Par	typeref:typename:ptxNSC_WriteCmd_Type_t
UID	IOT_READER/ptx_IOT_READER.h	/^    uint8_t     UID[PTX_IOTRD_TECH_V_UID_MAX_SIZE];             \/**< RF-Technology Type-V. UID./;"	m	struct:ptxIoTRd_CardVParams	typeref:typename:uint8_t[]
UID	NATIVE_TAG/ptxNativeTag_T5T.h	/^    uint8_t             *UID;                   \/**< UID *\/$/;"	m	struct:ptxNativeTag_T5T	typeref:typename:uint8_t *
UID	NATIVE_TAG/ptxNativeTag_T5T.h	/^    uint8_t             *UID;                   \/**< UID *\/$/;"	m	struct:ptxNativeTag_T5T_InitParams	typeref:typename:uint8_t *
UID	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         *UID;                   \/**< UID *\/$/;"	m	struct:ptxNDEF_T5TOP_InitParams	typeref:typename:uint8_t *
UIDLen	NATIVE_TAG/ptxNativeTag_T5T.h	/^    uint8_t             UIDLen;                 \/**< Length of UID *\/$/;"	m	struct:ptxNativeTag_T5T_InitParams	typeref:typename:uint8_t
UIDLen	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         UIDLen;                 \/**< Size of UID *\/$/;"	m	struct:ptxNDEF_T5TOP_InitParams	typeref:typename:uint8_t
Uart	PLAT/Psoc/ptxPLAT_INT.h	/^        ptxPlatUart_t               *Uart;              \/**< Pointer to UART Context. Platform /;"	m	struct:ptxPlat	typeref:typename:ptxPlatUart_t *
Uid	NSC/ptxNSC.h	/^    uint8_t                     Uid[PTX_NSC_TYPEV_UID_LEN];                         \/**< Buffer/;"	m	struct:ptxNSC_RfActTech_V_Param	typeref:typename:uint8_t[]
UnspecifiedEvent	NSC/ptxNSC_Event.h	/^    UnspecifiedEvent                        \/**< Unknown Event. *\/$/;"	e	enum:ptxNscEventId
UseExtCfg	NSC/ptxNSC_System.h	/^    uint8_t UseExtCfg;                      \/**< Global-Flag: Use configuration values from Fun/;"	m	struct:ptxNSC_System	typeref:typename:uint8_t
UseShortActivation	NSC/ptxNSC.h	/^    uint8_t                     UseShortActivation;                     \/**< Short Activation (/;"	m	struct:ptxNSC_RfActiv_Param	typeref:typename:uint8_t
VERSION_REG	NSC/ptxNSC_Registers.h	/^#define VERSION_REG /;"	d
VERSION_REG_CHIP_VERSION_MASK	NSC/ptxNSC_Registers.h	/^#define VERSION_REG_CHIP_VERSION_MASK /;"	d
VERSION_REG_CHIP_VERSION_MASK_INV	NSC/ptxNSC_Registers.h	/^#define VERSION_REG_CHIP_VERSION_MASK_INV /;"	d
VERSION_REG_CHIP_VERSION_POS	NSC/ptxNSC_Registers.h	/^#define VERSION_REG_CHIP_VERSION_POS /;"	d
VERSION_REG_CHIP_VERSION_RST	NSC/ptxNSC_Registers.h	/^#define VERSION_REG_CHIP_VERSION_RST /;"	d
VERSION_REG_RST	NSC/ptxNSC_Registers.h	/^#define VERSION_REG_RST /;"	d
Value	IOT_READER/ptx_IOT_READER.h	/^    uint8_t                 *Value;         \/**< Value *\/$/;"	m	struct:ptxIoTRd_ChipConfig	typeref:typename:uint8_t *
Value	NSC/ptxNSC.h	/^    uint8_t                         *Value;                     \/**< Value *\/$/;"	m	struct:ptxNSC_RfConfigTlv	typeref:typename:uint8_t *
Values	NSC/ptxNSC.h	/^    uint8_t                     Values[PTX_NSC_TYPES_WRRD_OP_MAX];              \/**< Buffer of /;"	m	struct:ptxNSC_WriteCmd_Par	typeref:typename:uint8_t[]
Version	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         Version;                        \/**< Version *\/$/;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint8_t
Version	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         Version;                        \/**< version information, c/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint8_t
Version	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         Version;                    \/**< Version *\/$/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint8_t
Version	NSC/ptxNSC_System.h	/^    uint8_t Version;                        \/**< System Feature Version>*\/$/;"	m	struct:ptxNSC_System	typeref:typename:uint8_t
VersionMajor	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         VersionMajor;                   \/**< Major Version *\/$/;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint8_t
VersionMinor	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         VersionMinor;                   \/**< Minor Version *\/$/;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint8_t
VersionNvm	NSC/ptxNSC.h	/^    uint8_t                 VersionNvm;                         \/**< Version Nvm File *\/$/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:uint8_t
WfeCb	NSC/ptxNSC.h	/^    pptxNSC_WfeCallBack_t        WfeCb;                     \/**< Callback function to report up/;"	m	struct:ptxNSC_ConfigPars	typeref:typename:pptxNSC_WfeCallBack_t
WfeCb	NSC/ptxNSC.h	/^    pptxNSC_WfeCallBack_t       WfeCb;                      \/**< Wait for Event CallBack functi/;"	m	struct:ptxNSC	typeref:typename:pptxNSC_WfeCallBack_t
WorkBuffer	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         WorkBuffer[64];        \/**< Internal Work-Buffer *\/$/;"	m	struct:ptxNDEF_T2TOP	typeref:typename:uint8_t[64]
WorkBuffer	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         WorkBuffer[64];        \/**< Internal Work-Buffer *\/$/;"	m	struct:ptxNDEF_T3TOP	typeref:typename:uint8_t[64]
WorkBuffer	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         WorkBuffer[64];         \/**< Internal Work-Buffer *\/$/;"	m	struct:ptxNDEF_T5TOP	typeref:typename:uint8_t[64]
WriteAccess	NDEF/ptxNDEF_T2TOP.h	/^    uint8_t                         WriteAccess;                    \/**< write permission *\/$/;"	m	struct:ptxNDEF_T2TOP_CC	typeref:typename:uint8_t
WriteAccess	NDEF/ptxNDEF_T5TOP.h	/^    uint8_t                         WriteAccess;                \/**< Write permission *\/$/;"	m	struct:ptxNDEF_T5TOP_CC	typeref:typename:uint8_t
WriteFlag	NDEF/ptxNDEF_T3TOP.h	/^    uint8_t                         WriteFlag;                      \/**< indicator whether a pr/;"	m	struct:ptxNDEF_T3TOP_CC	typeref:typename:uint8_t
WriteRandomAdd	NSC/ptxNSC.h	/^    WriteRandomAdd = 1u,                \/**< Write Random Address. *\/$/;"	e	enum:ptxNSC_WriteCmd_Type
__anond974ec060108	HCE/ptxHce.h	/^{$/;"	s
__anond974ec060203	HCE/ptxHce.h	/^{$/;"	g
__anond974ec060303	HCE/ptxHce.h	/^{$/;"	g
__anond974ec060403	HCE/ptxHce.h	/^{$/;"	g
__anond974ec060508	HCE/ptxHce.h	/^{$/;"	s
__anond974ec060608	HCE/ptxHce.h	/^{$/;"	s
baudRate	PLAT/ptxPLAT.h	/^    uint32_t    baudRate;         \/**< Baud rate *\/$/;"	m	struct:ptxPlat_ConfigPars	typeref:typename:uint32_t
ber_tlv_data_field	NATIVE_TAG/ptxNativeTag_T4T.h	/^    uint8_t             ber_tlv_data_field[5];              \/**< ber-tlv container *\/$/;"	m	struct:ptxNativeTag_T4T_CommandAPDUFields	typeref:typename:uint8_t[5]
conHost	NSC/ptxNSC_System.h	/^    uint8_t conHost[4];                     \/**< Division factor for Clock synthesizer.>*\/$/;"	m	struct:ptxNSC_System	typeref:typename:uint8_t[4]
conHostCE	NSC/ptxNSC_System.h	/^    uint8_t conHostCE[4];                   \/**< Division factor for Clock synthesizer in CE-mo/;"	m	struct:ptxNSC_System	typeref:typename:uint8_t[4]
conTxListenModeHighPower	NSC/ptxNSC.h	/^    uint8_t                 *conTxListenModeHighPower;          \/**< LISTEN MODE HIGH POWER *\/$/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:uint8_t *
conTxListenModeHighPowerLen	NSC/ptxNSC.h	/^    size_t                  conTxListenModeHighPowerLen;        \/**< LISTEN MODE HIGH POWER Len/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:size_t
conTxListenModeLowPower	NSC/ptxNSC.h	/^    uint8_t                 *conTxListenModeLowPower;           \/**< LISTEN MODE LOW POWER *\/$/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:uint8_t *
conTxListenModeLowPowerLen	NSC/ptxNSC.h	/^    size_t                  conTxListenModeLowPowerLen;         \/**< LISTEN MODE LOW POWER Leng/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:size_t
conTxPollModeHighPowerMod10	NSC/ptxNSC.h	/^    uint8_t                 *conTxPollModeHighPowerMod10;       \/**< POLL MODE HIGH POWER MOD10/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:uint8_t *
conTxPollModeHighPowerMod100	NSC/ptxNSC.h	/^    uint8_t                 *conTxPollModeHighPowerMod100;      \/**< POLL MODE HIGH POWER MOD10/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:uint8_t *
conTxPollModeHighPowerMod100Len	NSC/ptxNSC.h	/^    size_t                  conTxPollModeHighPowerMod100Len;    \/**< POLL MODE HIGH POWER MOD10/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:size_t
conTxPollModeHighPowerMod10Len	NSC/ptxNSC.h	/^    size_t                  conTxPollModeHighPowerMod10Len;     \/**< POLL MODE LOW POWER MOD10 /;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:size_t
conTxPollModeLowPowerMod10	NSC/ptxNSC.h	/^    uint8_t                 *conTxPollModeLowPowerMod10;        \/**< POLL MODE LOW POWER MOD10 /;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:uint8_t *
conTxPollModeLowPowerMod100	NSC/ptxNSC.h	/^    uint8_t                 *conTxPollModeLowPowerMod100;       \/**< POLL MODE LOW POWER MOD100/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:uint8_t *
conTxPollModeLowPowerMod100Len	NSC/ptxNSC.h	/^    size_t                  conTxPollModeLowPowerMod100Len;     \/**< POLL MODE LOW POWER MOD100/;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:size_t
conTxPollModeLowPowerMod10Len	NSC/ptxNSC.h	/^    size_t                  conTxPollModeLowPowerMod10Len;      \/**< POLL MODE LOW POWER MOD10 /;"	m	struct:ptxNSC_RfConfig_Param	typeref:typename:size_t
cyhalCtx	PLAT/Psoc/ptxPLAT_SPI.c	/^cyhal_spi_t cyhalCtx;$/;"	v	typeref:typename:cyhal_spi_t
cyhalSPICxt	PLAT/Psoc/ptxPLAT_SPI.h	/^    cyhal_spi_t       		*cyhalSPICxt;   \/**< SPI context of cyhal *\/$/;"	m	struct:ptxPLAT_Spi	typeref:typename:cyhal_spi_t *
data_length_field	NATIVE_TAG/ptxNativeTag_T4T.h	/^    uint8_t             data_length_field[3];               \/**< Lc field *\/$/;"	m	struct:ptxNativeTag_T4T_CommandAPDUFields	typeref:typename:uint8_t[3]
deviceFsPath	COMMON/ptxCOMMON.h	/^    char            *deviceFsPath;$/;"	m	struct:ptx_InitStack_Params	typeref:typename:char *
deviceGpioNum	COMMON/ptxCOMMON.h	/^    uint32_t        deviceGpioNum;$/;"	m	struct:ptx_InitStack_Params	typeref:typename:uint32_t
deviceName	COMMON/ptxCOMMON.h	/^    char            *deviceName;$/;"	m	struct:ptx_InitStack_Params	typeref:typename:char *
deviceName	COMMON/ptxCOMMON.h	/^    char *deviceName;$/;"	m	struct:ptxCmdLineParameters	typeref:typename:char *
deviceSpeed	COMMON/ptxCOMMON.h	/^    uint32_t        deviceSpeed;$/;"	m	struct:ptx_InitStack_Params	typeref:typename:uint32_t
discCardRegistry	IOT_READER/ptx_IOT_READER.c	/^ptxIoTRd_CardRegistry_t discCardRegistry;$/;"	v	typeref:typename:ptxIoTRd_CardRegistry_t
e_EvtMaxNrOfRecords	HCE/ptxHce.h	/^    e_EvtMaxNrOfRecords,$/;"	e	enum:__anond974ec060403
e_EvtRecIndexNotSet	HCE/ptxHce.h	/^    e_EvtRecIndexNotSet$/;"	e	enum:__anond974ec060403
e_EvtRecordIndexMax	HCE/ptxHce.h	/^    e_EvtRecordIndexMax = e_MaxNrOfEventRecords-1,$/;"	e	enum:__anond974ec060403
e_EvtRecordIndexMin	HCE/ptxHce.h	/^    e_EvtRecordIndexMin = 0,$/;"	e	enum:__anond974ec060403
e_MaxNrOfEventRecords	HCE/ptxHce.h	/^    e_MaxNrOfEventRecords           =  32,$/;"	e	enum:__anond974ec060303
e_SizeOfActivationBuffer	HCE/ptxHce.h	/^    e_SizeOfActivationBuffer        =  16,  \/* pay-load of medium size data message buffers. *\/$/;"	e	enum:__anond974ec060303
e_SizeOfShortMsgBuffer	HCE/ptxHce.h	/^    e_SizeOfShortMsgBuffer          =   3,  \/* pay-load of medium size data message buffers. *\/$/;"	e	enum:__anond974ec060303
expected_length_field	NATIVE_TAG/ptxNativeTag_T4T.h	/^    uint8_t             expected_length_field[3];           \/**< Le field *\/$/;"	m	struct:ptxNativeTag_T4T_CommandAPDUFields	typeref:typename:uint8_t[3]
flowControl	PLAT/ptxPLAT.h	/^    uint8_t     flowControl;      \/**< Flow control *\/$/;"	m	struct:ptxPlat_ConfigPars	typeref:typename:uint8_t
interfaceType	COMMON/ptxCOMMON.h	/^    uint8_t         interfaceType;$/;"	m	struct:ptx_InitStack_Params	typeref:typename:uint8_t
interfaceType	COMMON/ptxCOMMON.h	/^    uint8_t interfaceType;$/;"	m	struct:ptxCmdLineParameters	typeref:typename:uint8_t
isSelected	NATIVE_TAG/ptxNativeTag_T5T.h	/^    uint8_t             isSelected;             \/**< Flag indicating if commands are to be sent/;"	m	struct:ptxNativeTag_T5T	typeref:typename:uint8_t
msExpiryTick	PLAT/Psoc/ptxPLAT_TIMER.c	/^int msExpiryTick;$/;"	v	typeref:typename:int
nbr_data_bytes	NATIVE_TAG/ptxNativeTag_T4T.h	/^    uint16_t            nbr_data_bytes;                     \/**< length of data field *\/$/;"	m	struct:ptxNativeTag_T4T_CommandAPDUFields	typeref:typename:uint16_t
nbr_data_length_bytes	NATIVE_TAG/ptxNativeTag_T4T.h	/^    uint8_t             nbr_data_length_bytes;              \/**< length of Lc field *\/$/;"	m	struct:ptxNativeTag_T4T_CommandAPDUFields	typeref:typename:uint8_t
nbr_expected_length_bytes	NATIVE_TAG/ptxNativeTag_T4T.h	/^    uint8_t             nbr_expected_length_bytes;          \/**< length of Le field *\/$/;"	m	struct:ptxNativeTag_T4T_CommandAPDUFields	typeref:typename:uint8_t
nsc_comp	NSC/ptxNSC.c	/^ptxNSC_t nsc_comp;$/;"	v	typeref:typename:ptxNSC_t
nvmFilePath	COMMON/ptxCOMMON.h	/^    char *nvmFilePath;$/;"	m	struct:ptxCmdLineParameters	typeref:typename:char *
platform	PLAT/Psoc/ptxPLAT.c	/^ptxPlat_t platform;$/;"	v	typeref:typename:ptxPlat_t
pptxNSC_ExtCallBack_t	NSC/ptxNSC.h	/^ typedef void (*pptxNSC_ExtCallBack_t) (void *ctx, void *events, uint8_t *pld, size_t pldLen);$/;"	t	typeref:typename:void (*)(void * ctx,void * events,uint8_t * pld,size_t pldLen)
pptxNSC_Process_Ext_NTF_t	NSC/ptxNSC.h	/^ typedef void (*pptxNSC_Process_Ext_NTF_t) (void *ctx, uint8_t *pld, size_t pldLen);$/;"	t	typeref:typename:void (*)(void * ctx,uint8_t * pld,size_t pldLen)
pptxNSC_WfeCallBack_t	NSC/ptxNSC.h	/^typedef void (*pptxNSC_WfeCallBack_t) (void *ctx, ptxNSC_Event_t *event);$/;"	t	typeref:typename:void (*)(void * ctx,ptxNSC_Event_t * event)
pptxNsc_WfrxCallBack_t	NSC/ptxNSC.c	/^typedef void (*pptxNsc_WfrxCallBack_t) (void *ctx, ptxNSC_Event_t *event);$/;"	t	typeref:typename:void (*)(void * ctx,ptxNSC_Event_t * event)	file:
pptxPlat_RxCallBack_t	PLAT/ptxPLAT.h	/^typedef void (*pptxPlat_RxCallBack_t) (void *ctx);$/;"	t	typeref:typename:void (*)(void * ctx)
pptxPlat_TimerCallBack_t	PLAT/ptxPLAT.h	/^typedef void (*pptxPlat_TimerCallBack_t) (void *ctx);$/;"	t	typeref:typename:void (*)(void * ctx)
printbuf	PLAT/Psoc/ptxPLAT_SPI.c	/^void printbuf(uint8_t *buf, unsigned int len) {$/;"	f	typeref:typename:void
ptxCmdLineParameters	COMMON/ptxCOMMON.h	/^typedef struct ptxCmdLineParameters$/;"	s
ptxCmdLineParameters_t	COMMON/ptxCOMMON.h	/^} ptxCmdLineParameters_t;$/;"	t	typeref:struct:ptxCmdLineParameters
ptxCommon_PrintF	COMMON/ptxCOMMON.c	/^void ptxCommon_PrintF(const char *format, ...)$/;"	f	typeref:typename:void
ptxCommon_PrintStatusMessage	COMMON/ptxCOMMON.c	/^void ptxCommon_PrintStatusMessage(const char *message, ptxStatus_t st)$/;"	f	typeref:typename:void
ptxCommon_Print_Buffer	COMMON/ptxCOMMON.c	/^void ptxCommon_Print_Buffer(uint8_t *buffer, uint32_t bufferOffset, uint32_t bufferLength, uint8/;"	f	typeref:typename:void
ptxDBGPORT_Close	ptxDBG_PORT.c	/^uint16_t ptxDBGPORT_Close(void)$/;"	f	typeref:typename:uint16_t
ptxDBGPORT_Get_Available_Bytes	ptxDBG_PORT.c	/^uint32_t ptxDBGPORT_Get_Available_Bytes(void)$/;"	f	typeref:typename:uint32_t
ptxDBGPORT_Open	ptxDBG_PORT.c	/^uint16_t ptxDBGPORT_Open(void)$/;"	f	typeref:typename:uint16_t
ptxDBGPORT_Read_Buffer_	ptxDBG_PORT.c	/^uint16_t ptxDBGPORT_Read_Buffer_(uint8_t *buffer, uint32_t bufferOffset)$/;"	f	typeref:typename:uint16_t
ptxDBGPORT_RegisterCB	ptxDBG_PORT.c	/^uint16_t ptxDBGPORT_RegisterCB(void *cb)$/;"	f	typeref:typename:uint16_t
ptxDBGPORT_Reset_FIFO_Level	ptxDBG_PORT.c	/^void ptxDBGPORT_Reset_FIFO_Level(void)$/;"	f	typeref:typename:void
ptxDBGPORT_Write	ptxDBG_PORT.c	/^uint16_t ptxDBGPORT_Write(char *message)$/;"	f	typeref:typename:uint16_t
ptxDBGPORT_Write_Buffer	ptxDBG_PORT.c	/^uint16_t ptxDBGPORT_Write_Buffer(uint8_t *buffer, uint32_t bufferLen)$/;"	f	typeref:typename:uint16_t
ptxFeliCa_DTE	FELICA_DTE/ptxFeliCa_DTE.h	/^typedef struct ptxFeliCa_DTE$/;"	s
ptxFeliCa_DTE_BitRate	FELICA_DTE/ptxFeliCa_DTE.h	/^typedef enum ptxFeliCa_DTE_BitRate$/;"	g
ptxFeliCa_DTE_BitRate_t	FELICA_DTE/ptxFeliCa_DTE.h	/^} ptxFeliCa_DTE_BitRate_t;$/;"	t	typeref:enum:ptxFeliCa_DTE_BitRate
ptxFeliCa_DTE_Data_Exchange	FELICA_DTE/ptxFeliCa_DTE.c	/^static ptxStatus_t ptxFeliCa_DTE_Data_Exchange(ptxFeliCa_DTE_t *feliCaDTEComp, uint8_t *tx, uint/;"	f	typeref:typename:ptxStatus_t	file:
ptxFeliCa_DTE_Deinit	FELICA_DTE/ptxFeliCa_DTE.c	/^ptxStatus_t ptxFeliCa_DTE_Deinit (ptxFeliCa_DTE_t *feliCaDTEComp)$/;"	f	typeref:typename:ptxStatus_t
ptxFeliCa_DTE_EnableMode	FELICA_DTE/ptxFeliCa_DTE.c	/^ptxStatus_t ptxFeliCa_DTE_EnableMode (ptxFeliCa_DTE_t *feliCaDTEComp, uint8_t enableMode, ptxFel/;"	f	typeref:typename:ptxStatus_t
ptxFeliCa_DTE_HandleCarrier	FELICA_DTE/ptxFeliCa_DTE.c	/^static ptxStatus_t ptxFeliCa_DTE_HandleCarrier (ptxFeliCa_DTE_t *feliCaDTEComp, uint8_t switchOn/;"	f	typeref:typename:ptxStatus_t	file:
ptxFeliCa_DTE_Init	FELICA_DTE/ptxFeliCa_DTE.c	/^ptxStatus_t ptxFeliCa_DTE_Init (ptxFeliCa_DTE_t *feliCaDTEComp, ptxFeliCa_DTE_InitParams_t *init/;"	f	typeref:typename:ptxStatus_t
ptxFeliCa_DTE_InitParams	FELICA_DTE/ptxFeliCa_DTE.h	/^typedef struct ptxFeliCa_DTE_InitParams$/;"	s
ptxFeliCa_DTE_InitParams_t	FELICA_DTE/ptxFeliCa_DTE.h	/^} ptxFeliCa_DTE_InitParams_t;$/;"	t	typeref:struct:ptxFeliCa_DTE_InitParams
ptxFeliCa_DTE_Params	FELICA_DTE/ptxFeliCa_DTE.h	/^typedef union ptxFeliCa_DTE_Params$/;"	u
ptxFeliCa_DTE_Params_t	FELICA_DTE/ptxFeliCa_DTE.h	/^} ptxFeliCa_DTE_Params_t;$/;"	t	typeref:union:ptxFeliCa_DTE_Params
ptxFeliCa_DTE_PerformanceTest	FELICA_DTE/ptxFeliCa_DTE.h	/^typedef struct ptxFeliCa_DTE_PerformanceTest$/;"	s
ptxFeliCa_DTE_PerformanceTest_t	FELICA_DTE/ptxFeliCa_DTE.h	/^} ptxFeliCa_DTE_PerformanceTest_t;$/;"	t	typeref:struct:ptxFeliCa_DTE_PerformanceTest
ptxFeliCa_DTE_ProgressFn_t	FELICA_DTE/ptxFeliCa_DTE.h	/^typedef void (*ptxFeliCa_DTE_ProgressFn_t)(ptxFeliCa_DTE_TestProgressParams_t *progressParams);$/;"	t	typeref:typename:void (*)(ptxFeliCa_DTE_TestProgressParams_t * progressParams)
ptxFeliCa_DTE_RunPerformanceTest	FELICA_DTE/ptxFeliCa_DTE.c	/^static ptxStatus_t ptxFeliCa_DTE_RunPerformanceTest(ptxFeliCa_DTE_t *feliCaDTEComp, ptxFeliCa_DT/;"	f	typeref:typename:ptxStatus_t	file:
ptxFeliCa_DTE_RunTest	FELICA_DTE/ptxFeliCa_DTE.c	/^ptxStatus_t ptxFeliCa_DTE_RunTest(ptxFeliCa_DTE_t *feliCaDTEComp, ptxFeliCa_DTE_TestParams_t *te/;"	f	typeref:typename:ptxStatus_t
ptxFeliCa_DTE_SetParams	FELICA_DTE/ptxFeliCa_DTE.c	/^static ptxStatus_t ptxFeliCa_DTE_SetParams (ptxFeliCa_DTE_t *feliCaDTEComp, uint8_t rfTech, uint/;"	f	typeref:typename:ptxStatus_t	file:
ptxFeliCa_DTE_TestID	FELICA_DTE/ptxFeliCa_DTE.h	/^typedef enum ptxFeliCa_DTE_TestID$/;"	g
ptxFeliCa_DTE_TestID_t	FELICA_DTE/ptxFeliCa_DTE.h	/^} ptxFeliCa_DTE_TestID_t;$/;"	t	typeref:enum:ptxFeliCa_DTE_TestID
ptxFeliCa_DTE_TestParams	FELICA_DTE/ptxFeliCa_DTE.h	/^typedef struct ptxFeliCa_DTE_TestParams$/;"	s
ptxFeliCa_DTE_TestParams_t	FELICA_DTE/ptxFeliCa_DTE.h	/^} ptxFeliCa_DTE_TestParams_t;$/;"	t	typeref:struct:ptxFeliCa_DTE_TestParams
ptxFeliCa_DTE_TestProgressParams	FELICA_DTE/ptxFeliCa_DTE.h	/^typedef struct ptxFeliCa_DTE_TestProgressParams$/;"	s
ptxFeliCa_DTE_TestProgressParams_t	FELICA_DTE/ptxFeliCa_DTE.h	/^} ptxFeliCa_DTE_TestProgressParams_t;$/;"	t	typeref:struct:ptxFeliCa_DTE_TestProgressParams
ptxFeliCa_DTE_t	FELICA_DTE/ptxFeliCa_DTE.h	/^} ptxFeliCa_DTE_t;$/;"	t	typeref:struct:ptxFeliCa_DTE
ptxGPIO	GPIO/ptxGPIO.h	/^typedef struct ptxGPIO$/;"	s
ptxGPIO_CheckState	GPIO/ptxGPIO.c	/^static ptxStatus_t ptxGPIO_CheckState (ptxGPIO_t *gpioComp)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxGPIO_Config	GPIO/ptxGPIO.c	/^ptxStatus_t ptxGPIO_Config(ptxGPIO_t *gpioComp, ptxGPIO_Pin_t gpioNr, ptxGPIO_Config_t gpioConfi/;"	f	typeref:typename:ptxStatus_t
ptxGPIO_Config	GPIO/ptxGPIO.h	/^typedef enum ptxGPIO_Config$/;"	g
ptxGPIO_Config_t	GPIO/ptxGPIO.h	/^} ptxGPIO_Config_t;$/;"	t	typeref:enum:ptxGPIO_Config
ptxGPIO_Deinit	GPIO/ptxGPIO.c	/^ptxStatus_t ptxGPIO_Deinit (ptxGPIO_t *gpioComp)$/;"	f	typeref:typename:ptxStatus_t
ptxGPIO_Flags	GPIO/ptxGPIO.h	/^typedef enum ptxGPIO_Flags$/;"	g
ptxGPIO_Flags_t	GPIO/ptxGPIO.h	/^} ptxGPIO_Flags_t;$/;"	t	typeref:enum:ptxGPIO_Flags
ptxGPIO_GetAddress	GPIO/ptxGPIO.c	/^static ptxStatus_t ptxGPIO_GetAddress(ptxGPIO_Pin_t gpioNr, uint16_t * gpioHWAddr, uint8_t * gpi/;"	f	typeref:typename:ptxStatus_t	file:
ptxGPIO_Init	GPIO/ptxGPIO.c	/^ptxStatus_t ptxGPIO_Init (ptxGPIO_t *gpioComp, ptxGPIO_InitParams_t *initParams)$/;"	f	typeref:typename:ptxStatus_t
ptxGPIO_InitParams	GPIO/ptxGPIO.h	/^typedef struct ptxGPIO_InitParams$/;"	s
ptxGPIO_InitParams_t	GPIO/ptxGPIO.h	/^} ptxGPIO_InitParams_t;$/;"	t	typeref:struct:ptxGPIO_InitParams
ptxGPIO_Pin	GPIO/ptxGPIO.h	/^typedef enum ptxGPIO_Pin$/;"	g
ptxGPIO_Pin_t	GPIO/ptxGPIO.h	/^} ptxGPIO_Pin_t;$/;"	t	typeref:enum:ptxGPIO_Pin
ptxGPIO_Read	GPIO/ptxGPIO.c	/^ptxStatus_t ptxGPIO_Read(ptxGPIO_t *gpioComp, ptxGPIO_Pin_t gpioNr, uint8_t *gpioValue)$/;"	f	typeref:typename:ptxStatus_t
ptxGPIO_Write	GPIO/ptxGPIO.c	/^ptxStatus_t ptxGPIO_Write(ptxGPIO_t *gpioComp, ptxGPIO_Pin_t gpioNr, uint8_t gpioValue)$/;"	f	typeref:typename:ptxStatus_t
ptxGPIO_Write_DAC	GPIO/ptxGPIO.c	/^ptxStatus_t ptxGPIO_Write_DAC(ptxGPIO_t *gpioComp, uint8_t dacValue)$/;"	f	typeref:typename:ptxStatus_t
ptxGPIO_t	GPIO/ptxGPIO.h	/^} ptxGPIO_t;$/;"	t	typeref:struct:ptxGPIO
ptxHce	HCE/ptxHce.h	/^typedef struct ptxHce$/;"	s
ptxHce_AddNewEventPending	HCE/ptxHce.c	/^ptxStatus_t ptxHce_AddNewEventPending ( ptxHce_t *hce, uint16_t recordIndex )$/;"	f	typeref:typename:ptxStatus_t
ptxHce_AddToTail	HCE/ptxHce.c	/^static ptxStatus_t ptxHce_AddToTail ( ptxHce_t *hce, uint16_t recordIndex )$/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_DeactivateTag	COMMON/ptxHce_Exchange.c	/^static ptxStatus_t ptxHce_DeactivateTag(ptxHce_t *hce, ptxT4T_t *tag, uint8_t reason)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_Deinit	HCE/ptxHce.c	/^ptxStatus_t ptxHce_Deinit ( ptxHce_t *hce )$/;"	f	typeref:typename:ptxStatus_t
ptxHce_DiscConfig_t	HCE/ptxHce.h	/^} ptxHce_DiscConfig_t;$/;"	t	typeref:struct:__anond974ec060108
ptxHce_EmulateT4T	COMMON/ptxHce_Exchange.c	/^ptxStatus_t ptxHce_EmulateT4T (ptxHce_t *hce, ptxT4T_t *tag, uint8_t *exit_loop)$/;"	f	typeref:typename:ptxStatus_t
ptxHce_EventQueueDimensions_t	HCE/ptxHce.h	/^} ptxHce_EventQueueDimensions_t;$/;"	t	typeref:enum:__anond974ec060303
ptxHce_EventQueueRanges_t	HCE/ptxHce.h	/^} ptxHce_EventQueueRanges_t;$/;"	t	typeref:enum:__anond974ec060403
ptxHce_EventQueue_t	HCE/ptxHce.h	/^} ptxHce_EventQueue_t;$/;"	t	typeref:struct:__anond974ec060608
ptxHce_EventRecord_t	HCE/ptxHce.h	/^} ptxHce_EventRecord_t;$/;"	t	typeref:struct:__anond974ec060508
ptxHce_EventType	HCE/ptxHce.h	/^typedef enum ptxHce_EventType$/;"	g
ptxHce_EventType_t	HCE/ptxHce.h	/^} ptxHce_EventType_t;$/;"	t	typeref:enum:ptxHce_EventType
ptxHce_Get_Event	HCE/ptxHce.c	/^ptxStatus_t ptxHce_Get_Event ( ptxHce_t *hce, ptxHce_EventRecord_t **event )$/;"	f	typeref:typename:ptxStatus_t
ptxHce_HandleEvent	COMMON/ptxHce_Exchange.c	/^static ptxStatus_t ptxHce_HandleEvent(ptxHce_t *hce, ptxT4T_t *tag, ptxHce_EventRecord_t *event)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_Init	HCE/ptxHce.c	/^ptxStatus_t ptxHce_Init ( ptxHce_t *hce, struct ptxPlat *plat, struct ptxNSC *nsc, uint8_t *appR/;"	f	typeref:typename:ptxStatus_t
ptxHce_InitEventQueue	HCE/ptxHce.c	/^static ptxStatus_t ptxHce_InitEventQueue ( ptxHce_t *hce )$/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_ProcessData	COMMON/ptxHce_Exchange.c	/^static ptxStatus_t ptxHce_ProcessData(ptxHce_t *hce, ptxT4T_t *tag, ptxHce_EventRecord_t *event)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_ReadFromHead	HCE/ptxHce.c	/^static ptxStatus_t ptxHce_ReadFromHead ( ptxHce_t *hce, uint16_t *recordIndex )$/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_ReadFromTail	HCE/ptxHce.c	/^static ptxStatus_t ptxHce_ReadFromTail ( ptxHce_t *hce, uint16_t *recordIndex )$/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_ReadNextEvent	HCE/ptxHce.c	/^static ptxStatus_t ptxHce_ReadNextEvent ( ptxHce_t *hce, ptxHce_EventRecord_t **evtRecord, uint1/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_ReleaseEvent	HCE/ptxHce.c	/^static ptxStatus_t ptxHce_ReleaseEvent ( ptxHce_t *hce, ptxHce_EventRecord_t *evtRecord, uint16_/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_RemoveFromHead	HCE/ptxHce.c	/^static ptxStatus_t ptxHce_RemoveFromHead ( ptxHce_t *hce, uint16_t *recordIndex )$/;"	f	typeref:typename:ptxStatus_t	file:
ptxHce_ReserveEventRecord	HCE/ptxHce.c	/^ptxStatus_t ptxHce_ReserveEventRecord ( ptxHce_t *hce, ptxHce_EventRecord_t **evtRecord, uint16_/;"	f	typeref:typename:ptxStatus_t
ptxHce_RfProtocol_t	HCE/ptxHce.h	/^} ptxHce_RfProtocol_t;$/;"	t	typeref:enum:__anond974ec060203
ptxHce_Send_Data	HCE/ptxHce.c	/^ptxStatus_t ptxHce_Send_Data (ptxHce_t *hce, uint8_t *tx, uint32_t txLength)$/;"	f	typeref:typename:ptxStatus_t
ptxHce_t	HCE/ptxHce.h	/^} ptxHce_t;$/;"	t	typeref:struct:ptxHce
ptxHostRequestHandler	ptxDBG_PORT.h	/^typedef void (*ptxHostRequestHandler)(void *, uint32_t);$/;"	t	typeref:typename:void (*)(void *,uint32_t)
ptxIoTRd	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd$/;"	s
ptxIoTRdInt_DemoState_DeactivateReader	COMMON/ptxIoTRd_COMMON.c	/^ptxStatus_t ptxIoTRdInt_DemoState_DeactivateReader(ptxIoTRd_t *iotRd, ptxIotRdInt_Demo_State_t */;"	f	typeref:typename:ptxStatus_t
ptxIoTRdInt_DemoState_HostCardEmulation	COMMON/ptxIoTRd_COMMON.c	/^ptxStatus_t ptxIoTRdInt_DemoState_HostCardEmulation(ptxIotRdInt_Demo_State_t *demoState, ptxHce_/;"	f	typeref:typename:ptxStatus_t
ptxIoTRdInt_DemoState_SelectCard	COMMON/ptxIoTRd_COMMON.c	/^ptxStatus_t ptxIoTRdInt_DemoState_SelectCard(ptxIoTRd_t *iotRd, ptxIoTRd_CardRegistry_t *cardReg/;"	f	typeref:typename:ptxStatus_t
ptxIoTRdInt_DemoState_SelectCard_TypeA	COMMON/ptxIoTRd_COMMON.c	/^ptxStatus_t ptxIoTRdInt_DemoState_SelectCard_TypeA(ptxIoTRd_t *iotRd, ptxIoTRd_CardRegistry_t *c/;"	f	typeref:typename:ptxStatus_t
ptxIoTRdInt_DemoState_SelectCard_TypeB	COMMON/ptxIoTRd_COMMON.c	/^ptxStatus_t ptxIoTRdInt_DemoState_SelectCard_TypeB(ptxIoTRd_t *iotRd, ptxIoTRd_CardRegistry_t *c/;"	f	typeref:typename:ptxStatus_t
ptxIoTRdInt_DemoState_SelectCard_TypeF	COMMON/ptxIoTRd_COMMON.c	/^ptxStatus_t ptxIoTRdInt_DemoState_SelectCard_TypeF(ptxIoTRd_t *iotRd, ptxIoTRd_CardRegistry_t *c/;"	f	typeref:typename:ptxStatus_t
ptxIoTRdInt_DemoState_SelectCard_TypeV	COMMON/ptxIoTRd_COMMON.c	/^ptxStatus_t ptxIoTRdInt_DemoState_SelectCard_TypeV(ptxIoTRd_t *iotRd, ptxIoTRd_CardRegistry_t *c/;"	f	typeref:typename:ptxStatus_t
ptxIoTRdInt_DemoState_SystemError	COMMON/ptxIoTRd_COMMON.c	/^void ptxIoTRdInt_DemoState_SystemError(ptxIoTRd_t *iotRd, ptxIoTRd_CardRegistry_t *cardRegistry,/;"	f	typeref:typename:void
ptxIoTRdInt_DemoState_WaitForActivation	COMMON/ptxIoTRd_COMMON.c	/^void ptxIoTRdInt_DemoState_WaitForActivation(ptxIoTRd_t *iotRd, ptxIoTRd_CardRegistry_t *cardReg/;"	f	typeref:typename:void
ptxIoTRdInt_Get_Card_Details	COMMON/ptxIoTRd_COMMON.c	/^void ptxIoTRdInt_Get_Card_Details(ptxIoTRd_CardRegistry_t *cardRegistry, ptxIoTRd_CardParams_t */;"	f	typeref:typename:void
ptxIoTRdInt_Sleep	COMMON/ptxIoTRd_COMMON.c	/^void ptxIoTRdInt_Sleep(ptxIoTRd_t *iotRd, uint32_t timeout)$/;"	f	typeref:typename:void
ptxIoTRd_Activate_Card	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Activate_Card (ptxIoTRd_t *iotRd, ptxIoTRd_CardParams_t *cardParams, ptxIoT/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_AddCardToRegistryFromNTF	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_AddCardToRegistryFromNTF(ptxIoTRd_t *iotRd, ptxNSC_Event_t *event)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_AddCardToRegistryFromRSP	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_AddCardToRegistryFromRSP(ptxIoTRd_t *iotRd,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_BitRates	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_BitRates$/;"	s
ptxIoTRd_BitRates_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_BitRates_t ;$/;"	t	typeref:struct:ptxIoTRd_BitRates
ptxIoTRd_Bits_Exchange	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Bits_Exchange (ptxIoTRd_t *iotRd, uint8_t *tx, uint8_t *txPar, size_t txLen/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Bits_Exchange_Mode	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Bits_Exchange_Mode (ptxIoTRd_t *iotRd, uint8_t enable)$/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_CallBackEvents	IOT_READER/ptx_IOT_READER.c	/^static void ptxIoTRd_CallBackEvents (void *iotRd, ptxNSC_Event_t *event)$/;"	f	typeref:typename:void	file:
ptxIoTRd_CardAParams	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_CardAParams$/;"	s
ptxIoTRd_CardAParams_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CardAParams_t;$/;"	t	typeref:struct:ptxIoTRd_CardAParams
ptxIoTRd_CardBParams	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_CardBParams$/;"	s
ptxIoTRd_CardBParams_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CardBParams_t;$/;"	t	typeref:struct:ptxIoTRd_CardBParams
ptxIoTRd_CardFParams	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_CardFParams$/;"	s
ptxIoTRd_CardFParams_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CardFParams_t;$/;"	t	typeref:struct:ptxIoTRd_CardFParams
ptxIoTRd_CardParams	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_CardParams$/;"	s
ptxIoTRd_CardParams_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CardParams_t;$/;"	t	typeref:struct:ptxIoTRd_CardParams
ptxIoTRd_CardProtocol	IOT_READER/ptx_IOT_READER.h	/^typedef enum ptxIoTRd_CardProtocol$/;"	g
ptxIoTRd_CardProtocol_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CardProtocol_t;$/;"	t	typeref:enum:ptxIoTRd_CardProtocol
ptxIoTRd_CardRFTechType	IOT_READER/ptx_IOT_READER.h	/^typedef enum ptxIoTRd_CardRFTechType$/;"	g
ptxIoTRd_CardRFTechType_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CardRFTechType_t;$/;"	t	typeref:enum:ptxIoTRd_CardRFTechType
ptxIoTRd_CardRegistry	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_CardRegistry$/;"	s
ptxIoTRd_CardRegistry_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CardRegistry_t;$/;"	t	typeref:struct:ptxIoTRd_CardRegistry
ptxIoTRd_CardTechParams	IOT_READER/ptx_IOT_READER.h	/^typedef union ptxIoTRd_CardTechParams$/;"	u
ptxIoTRd_CardTechParams_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CardTechParams_t;$/;"	t	typeref:union:ptxIoTRd_CardTechParams
ptxIoTRd_CardVParams	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_CardVParams$/;"	s
ptxIoTRd_CardVParams_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CardVParams_t;$/;"	t	typeref:struct:ptxIoTRd_CardVParams
ptxIoTRd_CheckPresType	IOT_READER/ptx_IOT_READER.h	/^typedef enum ptxIoTRd_CheckPresType$/;"	g
ptxIoTRd_CheckPresType_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_CheckPresType_t;$/;"	t	typeref:enum:ptxIoTRd_CheckPresType
ptxIoTRd_ChipConfig	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_ChipConfig$/;"	s
ptxIoTRd_ChipConfigID	IOT_READER/ptx_IOT_READER.h	/^typedef enum ptxIoTRd_ChipConfigID$/;"	g
ptxIoTRd_ChipConfigID_t	IOT_READER/ptx_IOT_READER.h	/^}ptxIoTRd_ChipConfigID_t;$/;"	t	typeref:enum:ptxIoTRd_ChipConfigID
ptxIoTRd_ChipConfig_t	IOT_READER/ptx_IOT_READER.h	/^}ptxIoTRd_ChipConfig_t;$/;"	t	typeref:struct:ptxIoTRd_ChipConfig
ptxIoTRd_ClearRfMsgRcvd	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_ClearRfMsgRcvd(ptxIoTRd_t *iotRd, ptxIoTRd_RfMsg_t *RfMsg)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_ComInterface_Params	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_ComInterface_Params$/;"	s
ptxIoTRd_ComInterface_Params_t	IOT_READER/ptx_IOT_READER.h	/^}ptxIoTRd_ComInterface_Params_t;$/;"	t	typeref:struct:ptxIoTRd_ComInterface_Params
ptxIoTRd_ConfigHBR	IOT_READER/ptx_IOT_READER.c	/^uint16_t ptxIoTRd_ConfigHBR (ptxIoTRd_t *iotRd, ptxIoTRd_HBRConfig_t *configParams)$/;"	f	typeref:typename:uint16_t
ptxIoTRd_Data_Exchange	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Data_Exchange (ptxIoTRd_t *iotRd, uint8_t *tx, uint32_t txLength, uint8_t */;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Deinit	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Deinit(ptxIoTRd_t *iotRd)$/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_DiscConfig	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_DiscConfig$/;"	s
ptxIoTRd_DiscConfig_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_DiscConfig_t;$/;"	t	typeref:struct:ptxIoTRd_DiscConfig
ptxIoTRd_GetRfDiscParams	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_GetRfDiscParams(ptxIoTRd_t *iotRd, ptxNSC_RfDiscPars_t *discoverPara/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_Get_Card_Registry	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Get_Card_Registry (ptxIoTRd_t *iotRd, ptxIoTRd_CardRegistry_t **cardRegistr/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Get_RSSI_Value	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Get_RSSI_Value (ptxIoTRd_t *iotRd, uint16_t *rssiValue)$/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Get_Revision_Info	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Get_Revision_Info (ptxIoTRd_t *iotRd, ptxIoTRd_RevisionType_t revisionType,/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Get_Status_Info	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Get_Status_Info (ptxIoTRd_t *iotRd, ptxIoTRd_StatusType_t statusType, uint8/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Get_System_Info	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Get_System_Info (ptxIoTRd_t *iotRd, ptxIoTRd_SysInfoType_t infoType, uint8_/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_HBRConfig	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_HBRConfig$/;"	s
ptxIoTRd_HBRConfig_Int	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_HBRConfig_Int$/;"	s
ptxIoTRd_HBRConfig_Int_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_HBRConfig_Int_t;$/;"	t	typeref:struct:ptxIoTRd_HBRConfig_Int
ptxIoTRd_HBRConfig_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_HBRConfig_t;$/;"	t	typeref:struct:ptxIoTRd_HBRConfig
ptxIoTRd_Init	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Init(ptxIoTRd_t *iotRd, ptxIoTRd_InitPars_t *initParams)$/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_InitNSC	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_InitNSC(ptxIoTRd_t *iotRd, ptxIoTRd_ComInterface_Params_t *initParams)$/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_InitPars	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_InitPars$/;"	s
ptxIoTRd_InitPars_t	IOT_READER/ptx_IOT_READER.h	/^}ptxIoTRd_InitPars_t;$/;"	t	typeref:struct:ptxIoTRd_InitPars
ptxIoTRd_Initiate_Discovery	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Initiate_Discovery (ptxIoTRd_t *iotRd, ptxIoTRd_DiscConfig_t *discConfig)$/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_IsRfRcvd	IOT_READER/ptx_IOT_READER.c	/^static ptxIoTRd_RfEventRcvd_Id_t ptxIoTRd_IsRfRcvd(ptxIoTRd_t *iotRd, ptxIoTRd_RfMsg_t *RfMsg)$/;"	f	typeref:typename:ptxIoTRd_RfEventRcvd_Id_t	file:
ptxIoTRd_Manage_DDPC	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_Manage_DDPC (ptxIoTRd_t *iotRd, uint8_t enableDDPC)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_MapRFConfigID	IOT_READER/ptx_IOT_READER.c	/^static ptxNSC_RfConfig_ParamList_t ptxIoTRd_MapRFConfigID(ptxIoTRd_ChipConfigID_t configID)$/;"	f	typeref:typename:ptxNSC_RfConfig_ParamList_t	file:
ptxIoTRd_NSCRfClearCltMode	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_NSCRfClearCltMode (ptxIoTRd_t *iotRd)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_NSCRfSetCltMode	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_NSCRfSetCltMode (ptxIoTRd_t *iotRd)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_RF_PresenceCheck	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_RF_PresenceCheck (ptxIoTRd_t *iotRd, ptxIoTRd_CheckPresType_t presCheckType/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_RSSI_Mode	IOT_READER/ptx_IOT_READER.h	/^typedef enum ptxIoTRd_RSSI_Mode$/;"	g
ptxIoTRd_RSSI_Mode_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_RSSI_Mode_t;$/;"	t	typeref:enum:ptxIoTRd_RSSI_Mode
ptxIoTRd_RcvRfCltMsg	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_RcvRfCltMsg (ptxIoTRd_t *iotRd, uint8_t *pld, uint8_t *pldPar, size_/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_RcvRfMsg	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_RcvRfMsg (ptxIoTRd_t *iotRd, uint8_t *msgDataRx, size_t *msgLenRx, u/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_RcvRfPresenceCheck_ISODEP_Ack	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_RcvRfPresenceCheck_ISODEP_Ack (ptxIoTRd_t *iotRd, uint32_t timeoutMs/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_RcvRfPresenceCheck_ISODEP_EmptyFrame	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_RcvRfPresenceCheck_ISODEP_EmptyFrame (ptxIoTRd_t *iotRd, uint32_t ti/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_RcvRfPresenceCheck_NFCDEP_AttCmd	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_RcvRfPresenceCheck_NFCDEP_AttCmd (ptxIoTRd_t *iotRd, uint32_t timeou/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_Reader_Deactivation	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Reader_Deactivation (ptxIoTRd_t *iotRd, uint8_t deactivationType)$/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_ResetCardRegistry	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_ResetCardRegistry(ptxIoTRd_t *iotRd)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_RevisionType	IOT_READER/ptx_IOT_READER.h	/^typedef enum ptxIoTRd_RevisionType$/;"	g
ptxIoTRd_RevisionType_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_RevisionType_t;$/;"	t	typeref:enum:ptxIoTRd_RevisionType
ptxIoTRd_RfEventRcvd_Id	IOT_READER/ptx_IOT_READER.c	/^typedef enum ptxIoTRd_RfEventRcvd_Id$/;"	g	file:
ptxIoTRd_RfEventRcvd_Id_t	IOT_READER/ptx_IOT_READER.c	/^}ptxIoTRd_RfEventRcvd_Id_t;$/;"	t	typeref:enum:ptxIoTRd_RfEventRcvd_Id	file:
ptxIoTRd_RfMsg	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_RfMsg$/;"	s
ptxIoTRd_RfMsgState	IOT_READER/ptx_IOT_READER.h	/^typedef enum ptxIoTRd_RfMsgState$/;"	g
ptxIoTRd_RfMsgState_t	IOT_READER/ptx_IOT_READER.h	/^}ptxIoTRd_RfMsgState_t;$/;"	t	typeref:enum:ptxIoTRd_RfMsgState
ptxIoTRd_RfMsg_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_RfMsg_t; $/;"	t	typeref:struct:ptxIoTRd_RfMsg
ptxIoTRd_RfPresenceCheck_ISODEP_EmptyFrame	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_RfPresenceCheck_ISODEP_EmptyFrame (ptxIoTRd_t *iotRd)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_RfPresenceCheck_ISODEP_Nack	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_RfPresenceCheck_ISODEP_Nack (ptxIoTRd_t *iotRd)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_RfPresenceCheck_NFCDEP_AttCmd	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_RfPresenceCheck_NFCDEP_AttCmd (ptxIoTRd_t *iotRd)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_SWReset	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_SWReset (ptxIoTRd_t *iotRd)$/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Set_Power_Mode	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Set_Power_Mode (ptxIoTRd_t *iotRd, uint8_t newPowerMode)$/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Set_RSSI_Mode	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Set_RSSI_Mode (ptxIoTRd_t *iotRd, ptxIoTRd_RSSI_Mode_t rssiMode, uint8_t *r/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Set_T3T_MultiRxMode	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_Set_T3T_MultiRxMode(ptxIoTRd_t *iotRd, uint8_t enableRxMode, uint32_/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_StatusType	IOT_READER/ptx_IOT_READER.h	/^typedef enum ptxIoTRd_StatusType$/;"	g
ptxIoTRd_StatusType_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_StatusType_t;$/;"	t	typeref:enum:ptxIoTRd_StatusType
ptxIoTRd_SysInfoType	IOT_READER/ptx_IOT_READER.h	/^typedef enum ptxIoTRd_SysInfoType$/;"	g
ptxIoTRd_SysInfoType_t	IOT_READER/ptx_IOT_READER.h	/^} ptxIoTRd_SysInfoType_t;$/;"	t	typeref:enum:ptxIoTRd_SysInfoType
ptxIoTRd_T3T_SENSFRequest	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_T3T_SENSFRequest (ptxIoTRd_t *iotRd, uint16_t systemCode, uint8_t requestCo/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_T5T_IsolatedEoF	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_T5T_IsolatedEoF ( ptxIoTRd_t *iotRd, uint8_t *rx, uint32_t *rxLength, uint3/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_TempOffsetComp	IOT_READER/ptx_IOT_READER.c	/^static ptxStatus_t ptxIoTRd_TempOffsetComp (ptxIoTRd_t *iotRd, int8_t *tempOffset, uint8_t *temp/;"	f	typeref:typename:ptxStatus_t	file:
ptxIoTRd_TempSense_Params	IOT_READER/ptx_IOT_READER.h	/^typedef struct ptxIoTRd_TempSense_Params$/;"	s
ptxIoTRd_TempSense_Params_t	IOT_READER/ptx_IOT_READER.h	/^}ptxIoTRd_TempSense_Params_t;$/;"	t	typeref:struct:ptxIoTRd_TempSense_Params
ptxIoTRd_TempSensor_Calibration	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_TempSensor_Calibration (ptxIoTRd_t *iotRd, uint8_t Tambient, uint8_t *Tshut/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_Update_ChipConfig	IOT_READER/ptx_IOT_READER.c	/^ptxStatus_t ptxIoTRd_Update_ChipConfig (ptxIoTRd_t *iotRd, uint8_t nrConfigs, ptxIoTRd_ChipConfi/;"	f	typeref:typename:ptxStatus_t
ptxIoTRd_t	IOT_READER/ptx_IOT_READER.h	/^}ptxIoTRd_t;$/;"	t	typeref:struct:ptxIoTRd
ptxIotRdInt_Demo_State	COMMON/ptxIoTRd_COMMON.h	/^typedef enum ptxIotRdInt_Demo_State$/;"	g
ptxIotRdInt_Demo_State_t	COMMON/ptxIoTRd_COMMON.h	/^}ptxIotRdInt_Demo_State_t;$/;"	t	typeref:enum:ptxIotRdInt_Demo_State
ptxNDEF	NDEF/ptxNDEF.h	/^typedef struct ptxNDEF$/;"	s
ptxNDEF_CheckMessage	NDEF/ptxNDEF.c	/^ptxStatus_t ptxNDEF_CheckMessage (ptxNDEF_t *ndefComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_Close	NDEF/ptxNDEF.c	/^ptxStatus_t ptxNDEF_Close (ptxNDEF_t *ndefComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_FormatTag	NDEF/ptxNDEF.c	/^ptxStatus_t ptxNDEF_FormatTag (ptxNDEF_t *ndefComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_InitParams	NDEF/ptxNDEF.h	/^typedef struct ptxNDEF_InitParams$/;"	s
ptxNDEF_InitParams_t	NDEF/ptxNDEF.h	/^} ptxNDEF_InitParams_t;$/;"	t	typeref:struct:ptxNDEF_InitParams
ptxNDEF_LockTag	NDEF/ptxNDEF.c	/^ptxStatus_t ptxNDEF_LockTag (ptxNDEF_t *ndefComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_Open	NDEF/ptxNDEF.c	/^ptxStatus_t ptxNDEF_Open (ptxNDEF_t *ndefComp, ptxNDEF_InitParams_t *initParams)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_ReadMessage	NDEF/ptxNDEF.c	/^ptxStatus_t ptxNDEF_ReadMessage (ptxNDEF_t *ndefComp, uint8_t *msgBuffer, uint32_t *msgLen)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T2TAreaChecker	NDEF/ptxNDEF_T2TOP.c	/^static ptxStatus_t ptxNDEF_T2TAreaChecker (ptxNDEF_T2TOP_t *t2tOpComp, uint16_t currentByteAddre/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T2TDLAProcessor	NDEF/ptxNDEF_T2TOP.c	/^static ptxStatus_t ptxNDEF_T2TDLAProcessor (ptxNDEF_T2TOP_t *t2tOpComp)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T2TGetCapabilityContainerInfo	NDEF/ptxNDEF_T2TOP.c	/^static ptxStatus_t ptxNDEF_T2TGetCapabilityContainerInfo (ptxNDEF_T2TOP_t *t2tOpComp)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T2TOP	NDEF/ptxNDEF_T2TOP.h	/^typedef struct ptxNDEF_T2TOP$/;"	s
ptxNDEF_T2TOP_CC	NDEF/ptxNDEF_T2TOP.h	/^typedef struct ptxNDEF_T2TOP_CC$/;"	s
ptxNDEF_T2TOP_CC_t	NDEF/ptxNDEF_T2TOP.h	/^} ptxNDEF_T2TOP_CC_t;$/;"	t	typeref:struct:ptxNDEF_T2TOP_CC
ptxNDEF_T2TOP_InitParams	NDEF/ptxNDEF_T2TOP.h	/^typedef struct ptxNDEF_T2TOP_InitParams$/;"	s
ptxNDEF_T2TOP_InitParams_t	NDEF/ptxNDEF_T2TOP.h	/^} ptxNDEF_T2TOP_InitParams_t;$/;"	t	typeref:struct:ptxNDEF_T2TOP_InitParams
ptxNDEF_T2TOP_LOCK_CONTROL_TLV	NDEF/ptxNDEF_T2TOP.h	/^typedef struct ptxNDEF_T2TOP_LOCK_CONTROL_TLV$/;"	s
ptxNDEF_T2TOP_LOCK_CONTROL_TLV_t	NDEF/ptxNDEF_T2TOP.h	/^} ptxNDEF_T2TOP_LOCK_CONTROL_TLV_t;$/;"	t	typeref:struct:ptxNDEF_T2TOP_LOCK_CONTROL_TLV
ptxNDEF_T2TOP_MEMORY_CONTROL_TLV	NDEF/ptxNDEF_T2TOP.h	/^typedef struct ptxNDEF_T2TOP_MEMORY_CONTROL_TLV$/;"	s
ptxNDEF_T2TOP_MEMORY_CONTROL_TLV_t	NDEF/ptxNDEF_T2TOP.h	/^} ptxNDEF_T2TOP_MEMORY_CONTROL_TLV_t;$/;"	t	typeref:struct:ptxNDEF_T2TOP_MEMORY_CONTROL_TLV
ptxNDEF_T2TOP_NDEF_TLV	NDEF/ptxNDEF_T2TOP.h	/^typedef struct ptxNDEF_T2TOP_NDEF_TLV$/;"	s
ptxNDEF_T2TOP_NDEF_TLV_t	NDEF/ptxNDEF_T2TOP.h	/^} ptxNDEF_T2TOP_NDEF_TLV_t;$/;"	t	typeref:struct:ptxNDEF_T2TOP_NDEF_TLV
ptxNDEF_T2TOP_Sector	NDEF/ptxNDEF_T2TOP.h	/^typedef struct ptxNDEF_T2TOP_Sector$/;"	s
ptxNDEF_T2TOP_Sector_t	NDEF/ptxNDEF_T2TOP.h	/^} ptxNDEF_T2TOP_Sector_t;$/;"	t	typeref:struct:ptxNDEF_T2TOP_Sector
ptxNDEF_T2TOP_TERMINATOR_TLV	NDEF/ptxNDEF_T2TOP.h	/^typedef struct ptxNDEF_T2TOP_TERMINATOR_TLV$/;"	s
ptxNDEF_T2TOP_TERMINATOR_TLV_t	NDEF/ptxNDEF_T2TOP.h	/^} ptxNDEF_T2TOP_TERMINATOR_TLV_t;$/;"	t	typeref:struct:ptxNDEF_T2TOP_TERMINATOR_TLV
ptxNDEF_T2TOP_TLV	NDEF/ptxNDEF_T2TOP.h	/^typedef struct ptxNDEF_T2TOP_TLV$/;"	s
ptxNDEF_T2TOP_TLV_t	NDEF/ptxNDEF_T2TOP.h	/^} ptxNDEF_T2TOP_TLV_t;$/;"	t	typeref:struct:ptxNDEF_T2TOP_TLV
ptxNDEF_T2TOP_t	NDEF/ptxNDEF_T2TOP.h	/^} ptxNDEF_T2TOP_t;$/;"	t	typeref:struct:ptxNDEF_T2TOP
ptxNDEF_T2TOpCheckMessage	NDEF/ptxNDEF_T2TOP.c	/^ptxStatus_t ptxNDEF_T2TOpCheckMessage (ptxNDEF_T2TOP_t *t2tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T2TOpClose	NDEF/ptxNDEF_T2TOP.c	/^ptxStatus_t ptxNDEF_T2TOpClose (ptxNDEF_T2TOP_t *t2tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T2TOpFormatTag	NDEF/ptxNDEF_T2TOP.c	/^ptxStatus_t ptxNDEF_T2TOpFormatTag (ptxNDEF_T2TOP_t *t2tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T2TOpLockTag	NDEF/ptxNDEF_T2TOP.c	/^ptxStatus_t ptxNDEF_T2TOpLockTag (ptxNDEF_T2TOP_t *t2tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T2TOpOpen	NDEF/ptxNDEF_T2TOP.c	/^ptxStatus_t ptxNDEF_T2TOpOpen (ptxNDEF_T2TOP_t *t2tOpComp, ptxNDEF_T2TOP_InitParams_t *initParam/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T2TOpReadBlocks	NDEF/ptxNDEF_T2TOP.c	/^static ptxStatus_t ptxNDEF_T2TOpReadBlocks (ptxNDEF_T2TOP_t *t2tOpComp, uint8_t blockNumber, uin/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T2TOpReadMessage	NDEF/ptxNDEF_T2TOP.c	/^ptxStatus_t ptxNDEF_T2TOpReadMessage (ptxNDEF_T2TOP_t *t2tOpComp, uint8_t *msgBuffer, uint32_t */;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T2TOpSectorSelect	NDEF/ptxNDEF_T2TOP.c	/^static ptxStatus_t ptxNDEF_T2TOpSectorSelect(ptxNDEF_T2TOP_t *t2tOpComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T2TOpWriteBlock	NDEF/ptxNDEF_T2TOP.c	/^static ptxStatus_t ptxNDEF_T2TOpWriteBlock(ptxNDEF_T2TOP_t *t2tOpComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T2TOpWriteMessage	NDEF/ptxNDEF_T2TOP.c	/^ptxStatus_t ptxNDEF_T2TOpWriteMessage (ptxNDEF_T2TOP_t *t2tOpComp, uint8_t *msgBuffer, uint32_t /;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T2TRAProcessor	NDEF/ptxNDEF_T2TOP.c	/^static ptxStatus_t ptxNDEF_T2TRAProcessor(ptxNDEF_T2TOP_t *t2tOpComp)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T2TTLVCrawler	NDEF/ptxNDEF_T2TOP.c	/^static ptxStatus_t ptxNDEF_T2TTLVCrawler (ptxNDEF_T2TOP_t *t2tOpComp, uint16_t currentBlock)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T2TUpdateLength	NDEF/ptxNDEF_T2TOP.c	/^static ptxStatus_t ptxNDEF_T2TUpdateLength(ptxNDEF_T2TOP_t *t2tOpComp, uint16_t msgLen, uint8_t /;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T3TOP	NDEF/ptxNDEF_T3TOP.h	/^typedef struct ptxNDEF_T3TOP$/;"	s
ptxNDEF_T3TOP_CC	NDEF/ptxNDEF_T3TOP.h	/^typedef struct ptxNDEF_T3TOP_CC$/;"	s
ptxNDEF_T3TOP_CC_t	NDEF/ptxNDEF_T3TOP.h	/^} ptxNDEF_T3TOP_CC_t;$/;"	t	typeref:struct:ptxNDEF_T3TOP_CC
ptxNDEF_T3TOP_InitParams	NDEF/ptxNDEF_T3TOP.h	/^typedef struct ptxNDEF_T3TOP_InitParams$/;"	s
ptxNDEF_T3TOP_InitParams_t	NDEF/ptxNDEF_T3TOP.h	/^} ptxNDEF_T3TOP_InitParams_t;$/;"	t	typeref:struct:ptxNDEF_T3TOP_InitParams
ptxNDEF_T3TOP_t	NDEF/ptxNDEF_T3TOP.h	/^} ptxNDEF_T3TOP_t;$/;"	t	typeref:struct:ptxNDEF_T3TOP
ptxNDEF_T3TOpCalculateChecksum	NDEF/ptxNDEF_T3TOP.c	/^static ptxStatus_t ptxNDEF_T3TOpCalculateChecksum (ptxNDEF_T3TOP_t *t3tOpComp, uint16_t *checksu/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T3TOpCheck	NDEF/ptxNDEF_T3TOP.c	/^static ptxStatus_t ptxNDEF_T3TOpCheck (ptxNDEF_T3TOP_t *t3tOpComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T3TOpCheckMessage	NDEF/ptxNDEF_T3TOP.c	/^ptxStatus_t ptxNDEF_T3TOpCheckMessage (ptxNDEF_T3TOP_t *t3tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T3TOpClose	NDEF/ptxNDEF_T3TOP.c	/^ptxStatus_t ptxNDEF_T3TOpClose (ptxNDEF_T3TOP_t *t3tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T3TOpFormatTag	NDEF/ptxNDEF_T3TOP.c	/^ptxStatus_t ptxNDEF_T3TOpFormatTag (ptxNDEF_T3TOP_t *t3tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T3TOpGetAttributeInformationBlock	NDEF/ptxNDEF_T3TOP.c	/^static ptxStatus_t ptxNDEF_T3TOpGetAttributeInformationBlock (ptxNDEF_T3TOP_t *t3tOpComp)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T3TOpLockTag	NDEF/ptxNDEF_T3TOP.c	/^ptxStatus_t ptxNDEF_T3TOpLockTag (ptxNDEF_T3TOP_t *t3tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T3TOpOpen	NDEF/ptxNDEF_T3TOP.c	/^ptxStatus_t ptxNDEF_T3TOpOpen (ptxNDEF_T3TOP_t *t3tOpComp, ptxNDEF_T3TOP_InitParams_t *initParam/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T3TOpReadMessage	NDEF/ptxNDEF_T3TOP.c	/^ptxStatus_t ptxNDEF_T3TOpReadMessage (ptxNDEF_T3TOP_t *t3tOpComp, uint8_t *msgBuffer, uint32_t */;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T3TOpSetAttributeInformationBlock	NDEF/ptxNDEF_T3TOP.c	/^static ptxStatus_t ptxNDEF_T3TOpSetAttributeInformationBlock (ptxNDEF_T3TOP_t *t3tOpComp)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T3TOpUpdate	NDEF/ptxNDEF_T3TOP.c	/^static ptxStatus_t ptxNDEF_T3TOpUpdate (ptxNDEF_T3TOP_t *t3tOpComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T3TOpWriteMessage	NDEF/ptxNDEF_T3TOP.c	/^ptxStatus_t ptxNDEF_T3TOpWriteMessage (ptxNDEF_T3TOP_t *t3tOpComp, uint8_t *msgBuffer, uint32_t /;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T4TOP	NDEF/ptxNDEF_T4TOP.h	/^typedef struct ptxNDEF_T4TOP$/;"	s
ptxNDEF_T4TOP_CC	NDEF/ptxNDEF_T4TOP.h	/^typedef struct ptxNDEF_T4TOP_CC$/;"	s
ptxNDEF_T4TOP_CC_t	NDEF/ptxNDEF_T4TOP.h	/^} ptxNDEF_T4TOP_CC_t;$/;"	t	typeref:struct:ptxNDEF_T4TOP_CC
ptxNDEF_T4TOP_InitParams	NDEF/ptxNDEF_T4TOP.h	/^typedef struct ptxNDEF_T4TOP_InitParams$/;"	s
ptxNDEF_T4TOP_InitParams_t	NDEF/ptxNDEF_T4TOP.h	/^} ptxNDEF_T4TOP_InitParams_t;$/;"	t	typeref:struct:ptxNDEF_T4TOP_InitParams
ptxNDEF_T4TOP_NLEN	NDEF/ptxNDEF_T4TOP.h	/^typedef struct ptxNDEF_T4TOP_NLEN$/;"	s
ptxNDEF_T4TOP_NLEN_t	NDEF/ptxNDEF_T4TOP.h	/^} ptxNDEF_T4TOP_NLEN_t;$/;"	t	typeref:struct:ptxNDEF_T4TOP_NLEN
ptxNDEF_T4TOP_t	NDEF/ptxNDEF_T4TOP.h	/^} ptxNDEF_T4TOP_t;$/;"	t	typeref:struct:ptxNDEF_T4TOP
ptxNDEF_T4TOpCheckMessage	NDEF/ptxNDEF_T4TOP.c	/^ptxStatus_t ptxNDEF_T4TOpCheckMessage (ptxNDEF_T4TOP_t *t4tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T4TOpClose	NDEF/ptxNDEF_T4TOP.c	/^ptxStatus_t ptxNDEF_T4TOpClose (ptxNDEF_T4TOP_t *t4tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T4TOpFormatTag	NDEF/ptxNDEF_T4TOP.c	/^ptxStatus_t ptxNDEF_T4TOpFormatTag (ptxNDEF_T4TOP_t *t4tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T4TOpGetCapabilityContainerInfo	NDEF/ptxNDEF_T4TOP.c	/^static ptxStatus_t ptxNDEF_T4TOpGetCapabilityContainerInfo (ptxNDEF_T4TOP_t *t4tOpComp)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T4TOpLockTag	NDEF/ptxNDEF_T4TOP.c	/^ptxStatus_t ptxNDEF_T4TOpLockTag (ptxNDEF_T4TOP_t *t4tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T4TOpOpen	NDEF/ptxNDEF_T4TOP.c	/^ptxStatus_t ptxNDEF_T4TOpOpen (ptxNDEF_T4TOP_t *t4tOpComp, ptxNDEF_T4TOP_InitParams_t *initParam/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T4TOpReadBinary	NDEF/ptxNDEF_T4TOP.c	/^static ptxStatus_t ptxNDEF_T4TOpReadBinary (ptxNDEF_T4TOP_t *t4tOpComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T4TOpReadMessage	NDEF/ptxNDEF_T4TOP.c	/^ptxStatus_t ptxNDEF_T4TOpReadMessage (ptxNDEF_T4TOP_t *t4tOpComp, uint8_t *msgBuffer, uint32_t */;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T4TOpSelect	NDEF/ptxNDEF_T4TOP.c	/^static ptxStatus_t ptxNDEF_T4TOpSelect (ptxNDEF_T4TOP_t *t4tOpComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T4TOpUpdateBinary	NDEF/ptxNDEF_T4TOP.c	/^static ptxStatus_t ptxNDEF_T4TOpUpdateBinary (ptxNDEF_T4TOP_t *t4tOpComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T4TOpUpdateLength	NDEF/ptxNDEF_T4TOP.c	/^static ptxStatus_t ptxNDEF_T4TOpUpdateLength (ptxNDEF_T4TOP_t *t4tOpComp, uint32_t newLen)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T4TOpWriteMessage	NDEF/ptxNDEF_T4TOP.c	/^ptxStatus_t ptxNDEF_T4TOpWriteMessage (ptxNDEF_T4TOP_t *t4tOpComp, uint8_t *msgBuffer, uint32_t /;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T5TGetCapabilityContainerInfo	NDEF/ptxNDEF_T5TOP.c	/^static ptxStatus_t ptxNDEF_T5TGetCapabilityContainerInfo (ptxNDEF_T5TOP_t *t5tOpComp)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T5TOP	NDEF/ptxNDEF_T5TOP.h	/^typedef struct ptxNDEF_T5TOP$/;"	s
ptxNDEF_T5TOP_CC	NDEF/ptxNDEF_T5TOP.h	/^typedef struct ptxNDEF_T5TOP_CC$/;"	s
ptxNDEF_T5TOP_CC_t	NDEF/ptxNDEF_T5TOP.h	/^} ptxNDEF_T5TOP_CC_t;$/;"	t	typeref:struct:ptxNDEF_T5TOP_CC
ptxNDEF_T5TOP_InitParams	NDEF/ptxNDEF_T5TOP.h	/^typedef struct ptxNDEF_T5TOP_InitParams$/;"	s
ptxNDEF_T5TOP_InitParams_t	NDEF/ptxNDEF_T5TOP.h	/^} ptxNDEF_T5TOP_InitParams_t;$/;"	t	typeref:struct:ptxNDEF_T5TOP_InitParams
ptxNDEF_T5TOP_t	NDEF/ptxNDEF_T5TOP.h	/^} ptxNDEF_T5TOP_t;$/;"	t	typeref:struct:ptxNDEF_T5TOP
ptxNDEF_T5TOpCheckMessage	NDEF/ptxNDEF_T5TOP.c	/^ptxStatus_t ptxNDEF_T5TOpCheckMessage (ptxNDEF_T5TOP_t *t5tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T5TOpClose	NDEF/ptxNDEF_T5TOP.c	/^ptxStatus_t ptxNDEF_T5TOpClose (ptxNDEF_T5TOP_t *t5tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T5TOpFormatTag	NDEF/ptxNDEF_T5TOP.c	/^ptxStatus_t ptxNDEF_T5TOpFormatTag (ptxNDEF_T5TOP_t *t5tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T5TOpLockBlock	NDEF/ptxNDEF_T5TOP.c	/^static ptxStatus_t ptxNDEF_T5TOpLockBlock (ptxNDEF_T5TOP_t *t5tOpComp, uint16_t blockNumber, uin/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T5TOpLockTag	NDEF/ptxNDEF_T5TOP.c	/^ptxStatus_t ptxNDEF_T5TOpLockTag (ptxNDEF_T5TOP_t *t5tOpComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T5TOpOpen	NDEF/ptxNDEF_T5TOP.c	/^ptxStatus_t ptxNDEF_T5TOpOpen (ptxNDEF_T5TOP_t *t5tOpComp, ptxNDEF_T5TOP_InitParams_t *initParam/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T5TOpReadBlock	NDEF/ptxNDEF_T5TOP.c	/^static ptxStatus_t ptxNDEF_T5TOpReadBlock (ptxNDEF_T5TOP_t *t5tOpComp, uint16_t blockNumber, uin/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T5TOpReadMessage	NDEF/ptxNDEF_T5TOP.c	/^ptxStatus_t ptxNDEF_T5TOpReadMessage (ptxNDEF_T5TOP_t *t5tOpComp, uint8_t *msgBuffer, uint32_t */;"	f	typeref:typename:ptxStatus_t
ptxNDEF_T5TOpUpdateLength	NDEF/ptxNDEF_T5TOP.c	/^static ptxStatus_t ptxNDEF_T5TOpUpdateLength (ptxNDEF_T5TOP_t *t5tOpComp, uint16_t messageLen, u/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T5TOpWriteBlock	NDEF/ptxNDEF_T5TOP.c	/^static ptxStatus_t ptxNDEF_T5TOpWriteBlock (ptxNDEF_T5TOP_t *t5tOpComp, uint16_t blockNumber, ui/;"	f	typeref:typename:ptxStatus_t	file:
ptxNDEF_T5TOpWriteMessage	NDEF/ptxNDEF_T5TOP.c	/^ptxStatus_t ptxNDEF_T5TOpWriteMessage (ptxNDEF_T5TOP_t *t5tOpComp, uint8_t *msgBuffer, uint32_t /;"	f	typeref:typename:ptxStatus_t
ptxNDEF_TagLifeCycle	NDEF/ptxNDEF_Defines.h	/^typedef enum ptxNDEF_TagLifeCycle$/;"	g
ptxNDEF_TagLifeCycle_t	NDEF/ptxNDEF_Defines.h	/^} ptxNDEF_TagLifeCycle_t;$/;"	t	typeref:enum:ptxNDEF_TagLifeCycle
ptxNDEF_WriteMessage	NDEF/ptxNDEF.c	/^ptxStatus_t ptxNDEF_WriteMessage (ptxNDEF_t *ndefComp, uint8_t *msgBuffer, uint32_t msgLen)$/;"	f	typeref:typename:ptxStatus_t
ptxNDEF_t	NDEF/ptxNDEF.h	/^} ptxNDEF_t;$/;"	t	typeref:struct:ptxNDEF
ptxNSC	NSC/ptxNSC.h	/^typedef struct ptxNSC$/;"	s
ptxNSC_CheckHWVersion	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_CheckHWVersion (ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_CheckSystemState	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_CheckSystemState(ptxNSC_t *nscCtx, ptxStatus_t currentStatus)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_ClearRspRcvd	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_ClearRspRcvd(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_ConfigPars	NSC/ptxNSC.h	/^typedef struct ptxNSC_ConfigPars$/;"	s
ptxNSC_ConfigPars_t	NSC/ptxNSC.h	/^} ptxNSC_ConfigPars_t;$/;"	t	typeref:struct:ptxNSC_ConfigPars
ptxNSC_DFY_Activation	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_DFY_Activation(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_DataMsg_Ack	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_DataMsg_Ack(ptxNSC_t *nscCtx,uint8_t *buff, size_t buffLen)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_Deinit	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Deinit(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Event	NSC/ptxNSC_Event.h	/^typedef struct ptxNSC_Event$/;"	s
ptxNSC_Event_t	NSC/ptxNSC_Event.h	/^} ptxNSC_Event_t;$/;"	t	typeref:struct:ptxNSC_Event
ptxNSC_FwDownloader	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_FwDownloader(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_GetInitConfigParams	NSC/ptxNSC_Intf_SPII2C.c	/^ptxStatus_t ptxNSC_GetInitConfigParams(ptxNSC_t *nscCtx, uint32_t baudRate, uint8_t flowCtrl, ui/;"	f	typeref:typename:ptxStatus_t
ptxNSC_GetMiscRFConfig	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_GetMiscRFConfig(ptxNSC_t *nscCtx, uint8_t *configBuffer, uint8_t *configBuffe/;"	f	typeref:typename:ptxStatus_t
ptxNSC_GetMode	NSC/ptxNSC_Intf_SPII2C.c	/^ptxStatus_t ptxNSC_GetMode (ptxNSC_t *nscCtx, ptxNSC_Mode_t *currentMode)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_GetNewRspRcvd	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_GetNewRspRcvd(ptxNSC_t *nscCtx, uint8_t **rsp, size_t *rspLen)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_GetRevisionInfo	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_GetRevisionInfo(ptxNSC_t *nscCtx, ptxNSC_RevisionType_t revisionType, uint32_/;"	f	typeref:typename:ptxStatus_t
ptxNSC_GetRx	NSC/ptxNSC_Intf_SPII2C.c	/^void ptxNSC_GetRx (ptxNSC_t *nscCtx)$/;"	f	typeref:typename:void
ptxNSC_Get_Mtu	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Get_Mtu(ptxNSC_t *nscCtx, uint32_t *maxTransferUnit)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_HAL_Read	NSC/ptxNSC_Intf_SPII2C.c	/^static ptxStatus_t ptxNSC_HAL_Read(ptxNSC_t *nscCtx, uint8_t *rxBuf[], size_t *rxLen[], size_t n/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_HAL_Rra	NSC/ptxNSC_Intf_SPII2C.c	/^ptxStatus_t ptxNSC_HAL_Rra(ptxNSC_t *nscCtx, uint16_t address, uint8_t *value)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_HAL_Wra	NSC/ptxNSC_Intf_SPII2C.c	/^ptxStatus_t ptxNSC_HAL_Wra(ptxNSC_t *nscCtx, uint16_t address, uint8_t value)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_HAL_WriteBuffer	NSC/ptxNSC_Intf_SPII2C.c	/^ptxStatus_t ptxNSC_HAL_WriteBuffer(ptxNSC_t *nscCtx, ptxNscHal_BufferId_t bufferId, uint8_t *txB/;"	f	typeref:typename:ptxStatus_t
ptxNSC_HAL_WriteInstruction	NSC/ptxNSC_Intf_SPII2C.c	/^ptxStatus_t ptxNSC_HAL_WriteInstruction(ptxNSC_t *nscCtx, uint16_t address, uint8_t *pPayload, s/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Hal_WriteInstruction_Framing	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_Hal_WriteInstruction_Framing (ptxNSC_t *nscCtx, uint16_t address, uint/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_HardReset	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_HardReset(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Info_C_Stack	NSC/ptxNSC.h	/^    ptxNSC_Info_C_Stack,$/;"	e	enum:ptxNSC_RevisionType
ptxNSC_Info_ChipID	NSC/ptxNSC.h	/^    ptxNSC_Info_ChipID,$/;"	e	enum:ptxNSC_RevisionType
ptxNSC_Info_DFY_Code	NSC/ptxNSC.h	/^    ptxNSC_Info_DFY_Code,$/;"	e	enum:ptxNSC_RevisionType
ptxNSC_Info_DFY_Toolchain	NSC/ptxNSC.h	/^    ptxNSC_Info_DFY_Toolchain,$/;"	e	enum:ptxNSC_RevisionType
ptxNSC_Info_Local_Changes	NSC/ptxNSC.h	/^    ptxNSC_Info_Local_Changes,$/;"	e	enum:ptxNSC_RevisionType
ptxNSC_Info_ProductID	NSC/ptxNSC.h	/^    ptxNSC_Info_ProductID,$/;"	e	enum:ptxNSC_RevisionType
ptxNSC_Init	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Init(ptxNSC_t **nscCtx, ptxNSC_ConfigPars_t *configPars)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_InitCmd	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_InitCmd(ptxNSC_t *nscCtx, ptxNSC_InitPars_t *nscInitPars)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_InitPars	NSC/ptxNSC.h	/^typedef struct ptxNSC_InitPars$/;"	s
ptxNSC_InitPars_t	NSC/ptxNSC.h	/^} ptxNSC_InitPars_t;$/;"	t	typeref:struct:ptxNSC_InitPars
ptxNSC_InitTechPoll	NSC/ptxNSC.h	/^typedef enum ptxNSC_InitTechPoll$/;"	g
ptxNSC_InitTechPoll_t	NSC/ptxNSC.h	/^} ptxNSC_InitTechPoll_t;$/;"	t	typeref:enum:ptxNSC_InitTechPoll
ptxNSC_IsNewRspRcvd	NSC/ptxNSC.c	/^static uint8_t ptxNSC_IsNewRspRcvd(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:uint8_t	file:
ptxNSC_IsRfDataAck	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_IsRfDataAck (ptxNSC_t *nscCtx, uint8_t first_byte, uint8_t second_byte/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_IsRfErrorNtf	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_IsRfErrorNtf (ptxNSC_t *nscCtx, uint8_t first_byte, size_t len, uint8_/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_Mode	NSC/ptxNSC.h	/^typedef enum ptxNSC_Mode$/;"	g
ptxNSC_Mode_t	NSC/ptxNSC.h	/^} ptxNSC_Mode_t;$/;"	t	typeref:enum:ptxNSC_Mode
ptxNSC_NscCltMsg_BuildRawBits	NSC/NSC_RD/ptxNSC_Rd.c	/^static ptxStatus_t ptxNSC_NscCltMsg_BuildRawBits (ptxNSC_t *nscCtx, uint8_t *pldBytes, uint8_t */;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_NscCltMsg_DecodeRawBits	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static ptxStatus_t ptxNSC_NscCltMsg_DecodeRawBits (ptxNSC_t *nscCtx, uint8_t *pldRawBits, size_t/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_NscCltMsg_NumBytes	NSC/NSC_RD/ptxNSC_Rd.c	/^static ptxStatus_t ptxNSC_NscCltMsg_NumBytes (ptxNSC_t *nscCtx, size_t length, uint8_t *numBitsL/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_PollType	NSC/ptxNSC.h	/^typedef enum ptxNSC_PollType$/;"	g
ptxNSC_PollType_t	NSC/ptxNSC.h	/^} ptxNSC_PollType_t;$/;"	t	typeref:enum:ptxNSC_PollType
ptxNSC_Power_Mode	NSC/ptxNSC.h	/^typedef enum ptxNSC_Power_Mode$/;"	g
ptxNSC_Power_Mode_t	NSC/ptxNSC.h	/^} ptxNSC_Power_Mode_t;$/;"	t	typeref:enum:ptxNSC_Power_Mode
ptxNSC_Process	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Process (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_ProcessNtf	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^void ptxNSC_ProcessNtf (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen)$/;"	f	typeref:typename:void
ptxNSC_ProcessNtfLpcd	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessNtfLpcd (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC_Event/;"	f	typeref:typename:void	file:
ptxNSC_ProcessNtfRfAct	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessNtfRfAct (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC_Even/;"	f	typeref:typename:void	file:
ptxNSC_ProcessNtfRfDeact	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessNtfRfDeact (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC_Ev/;"	f	typeref:typename:void	file:
ptxNSC_ProcessNtfRfDisc	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessNtfRfDisc (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC_Eve/;"	f	typeref:typename:void	file:
ptxNSC_ProcessNtfRfError	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessNtfRfError (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC_Ev/;"	f	typeref:typename:void	file:
ptxNSC_ProcessNtfRfField	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessNtfRfField (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC_Ev/;"	f	typeref:typename:void	file:
ptxNSC_ProcessNtfRfTimeoutError	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessNtfRfTimeoutError (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, pt/;"	f	typeref:typename:void	file:
ptxNSC_ProcessNtfRf_ActDisc	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessNtfRf_ActDisc (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC/;"	f	typeref:typename:void	file:
ptxNSC_ProcessRfCltMsg	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessRfCltMsg (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC_Even/;"	f	typeref:typename:void	file:
ptxNSC_ProcessRfCtrl	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessRfCtrl (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC_Event_/;"	f	typeref:typename:void	file:
ptxNSC_ProcessRfData	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessRfData (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC_Event_/;"	f	typeref:typename:void	file:
ptxNSC_ProcessRfDataChained	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static void ptxNSC_ProcessRfDataChained (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen, ptxNSC/;"	f	typeref:typename:void	file:
ptxNSC_ProcessRsp	NSC/ptxNSC.c	/^static void ptxNSC_ProcessRsp (ptxNSC_t *nscCtx, uint8_t *buff, size_t buffLen)$/;"	f	typeref:typename:void	file:
ptxNSC_ProcessRspErrorCode	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_ProcessRspErrorCode (ptxNSC_Rsp_ErrorCodes_t NscRspErrorCode)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RFConfig_GetConfigPointer	NSC/ptxNSC_RfConfig.c	/^static ptxStatus_t ptxNSC_RFConfig_GetConfigPointer(uint8_t paramId, uint8_t **rfConfigValue, ui/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RFConfig_ReleasePointer	NSC/ptxNSC_RfConfig.c	/^static ptxStatus_t ptxNSC_RFConfig_ReleasePointer(void)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RFMiscConfig_Param	NSC/ptxNSC.h	/^typedef struct ptxNSC_RFMiscConfig_Param$/;"	s
ptxNSC_RFMiscConfig_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RFMiscConfig_Param_t;$/;"	t	typeref:struct:ptxNSC_RFMiscConfig_Param
ptxNSC_Rd_RfCltMsg	NSC/NSC_RD/ptxNSC_Rd.c	/^ptxStatus_t ptxNSC_Rd_RfCltMsg (ptxNSC_t *nscCtx, uint8_t *pldBytes, uint8_t *pldParityBits, siz/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Rd_RfPressCheck_AttentionCmd	NSC/NSC_RD/ptxNSC_Rd.c	/^ptxStatus_t ptxNSC_Rd_RfPressCheck_AttentionCmd (ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Rd_RfPressCheck_EmptyFrame	NSC/NSC_RD/ptxNSC_Rd.c	/^ptxStatus_t ptxNSC_Rd_RfPressCheck_EmptyFrame (ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Rd_RfPressCheck_Nack	NSC/NSC_RD/ptxNSC_Rd.c	/^ptxStatus_t ptxNSC_Rd_RfPressCheck_Nack (ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Read	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Read(ptxNSC_t *nscCtx, uint16_t address, uint8_t *value)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_ReadCmd	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_ReadCmd(ptxNSC_t *nscCtx, ptxNSC_ReadCmd_Par_t *nscReadPar, uint8_t *v/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_ReadCmd_Par	NSC/ptxNSC.h	/^typedef struct ptxNSC_ReadCmd_Par$/;"	s
ptxNSC_ReadCmd_Par_t	NSC/ptxNSC.h	/^} ptxNSC_ReadCmd_Par_t;$/;"	t	typeref:struct:ptxNSC_ReadCmd_Par
ptxNSC_ReadCmd_Type	NSC/ptxNSC.h	/^typedef enum ptxNSC_ReadCmd_Type$/;"	g
ptxNSC_ReadCmd_Type_t	NSC/ptxNSC.h	/^} ptxNSC_ReadCmd_Type_t;$/;"	t	typeref:enum:ptxNSC_ReadCmd_Type
ptxNSC_ReadTempSensor	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_ReadTempSensor(ptxNSC_t *nscCtx, uint8_t *sensVal)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_ReceiveRsp	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_ReceiveRsp(ptxNSC_t *nscCtx, uint8_t **rsp, size_t *rspLen, uint32_t timeOut)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Reset	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Reset(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RevisionType	NSC/ptxNSC.h	/^typedef enum ptxNSC_RevisionType$/;"	g
ptxNSC_RevisionType_t	NSC/ptxNSC.h	/^} ptxNSC_RevisionType_t;$/;"	t	typeref:enum:ptxNSC_RevisionType
ptxNSC_RfActProt_ISODEP_Param	NSC/ptxNSC.h	/^typedef union ptxNSC_RfActProt_ISODEP_Param$/;"	u
ptxNSC_RfActProt_ISODEP_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfActProt_ISODEP_Param_t;$/;"	t	typeref:union:ptxNSC_RfActProt_ISODEP_Param
ptxNSC_RfActProt_Param_t	NSC/ptxNSC.h	/^typedef union ptxNSC_RfActProt_Param_t$/;"	u
ptxNSC_RfActProt_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfActProt_Param_t;$/;"	t	typeref:union:ptxNSC_RfActProt_Param_t
ptxNSC_RfActTech_APropr_Param	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfActTech_APropr_Param$/;"	s
ptxNSC_RfActTech_APropr_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfActTech_APropr_Param_t;$/;"	t	typeref:struct:ptxNSC_RfActTech_APropr_Param
ptxNSC_RfActTech_A_Param	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfActTech_A_Param$/;"	s
ptxNSC_RfActTech_A_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfActTech_A_Param_t;$/;"	t	typeref:struct:ptxNSC_RfActTech_A_Param
ptxNSC_RfActTech_B_Param	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfActTech_B_Param$/;"	s
ptxNSC_RfActTech_B_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfActTech_B_Param_t;$/;"	t	typeref:struct:ptxNSC_RfActTech_B_Param
ptxNSC_RfActTech_F_Param	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfActTech_F_Param$/;"	s
ptxNSC_RfActTech_F_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfActTech_F_Param_t;$/;"	t	typeref:struct:ptxNSC_RfActTech_F_Param
ptxNSC_RfActTech_Param	NSC/ptxNSC.h	/^typedef union ptxNSC_RfActTech_Param$/;"	u
ptxNSC_RfActTech_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfActTech_Param_t;$/;"	t	typeref:union:ptxNSC_RfActTech_Param
ptxNSC_RfActTech_V_Param	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfActTech_V_Param$/;"	s
ptxNSC_RfActTech_V_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfActTech_V_Param_t;$/;"	t	typeref:struct:ptxNSC_RfActTech_V_Param
ptxNSC_RfAct_TechParams_A	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static size_t ptxNSC_RfAct_TechParams_A (ptxNSC_t *nscCtx, uint8_t *buffer, size_t bufferLen, pt/;"	f	typeref:typename:size_t	file:
ptxNSC_RfAct_TechParams_B	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static size_t ptxNSC_RfAct_TechParams_B (ptxNSC_t *nscCtx, uint8_t *buffer, size_t bufferLen,$/;"	f	typeref:typename:size_t	file:
ptxNSC_RfAct_TechParams_F	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static size_t ptxNSC_RfAct_TechParams_F (ptxNSC_t *nscCtx, uint8_t *buffer, size_t bufferLen,$/;"	f	typeref:typename:size_t	file:
ptxNSC_RfAct_TechParams_V	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static size_t ptxNSC_RfAct_TechParams_V (ptxNSC_t *nscCtx, uint8_t *buffer, size_t bufferLen,$/;"	f	typeref:typename:size_t	file:
ptxNSC_RfActiv_Param	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfActiv_Param$/;"	s
ptxNSC_RfActiv_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfActiv_Param_t;$/;"	t	typeref:struct:ptxNSC_RfActiv_Param
ptxNSC_RfActivate	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^ptxStatus_t ptxNSC_RfActivate(ptxNSC_t *nscCtx, ptxNSC_RfActiv_Param_t *nscRfActPars, uint8_t *a/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RfActivate_Xor	NSC/NSC_IOTRD/ptxNSC_Notifications.c	/^static ptxStatus_t ptxNSC_RfActivate_Xor (ptxNSC_t *nscCtx, uint8_t *buffer, size_t bufferLen, u/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RfConfig	NSC/ptxNSC_RfConfig.c	/^ptxStatus_t ptxNSC_RfConfig(ptxNSC_t *nscCtx, ptxNSC_RfConfigTlv_t *nscRfCfgParams, uint8_t rfCo/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RfConfigTlv	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfConfigTlv$/;"	s
ptxNSC_RfConfigTlv_t	NSC/ptxNSC.h	/^} ptxNSC_RfConfigTlv_t;$/;"	t	typeref:struct:ptxNSC_RfConfigTlv
ptxNSC_RfConfig_AddToCommand	NSC/ptxNSC_RfConfig.c	/^static ptxStatus_t ptxNSC_RfConfig_AddToCommand(uint8_t *nsc_rfConfig_cmd, ptxNSC_RfConfigTlv_t /;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RfConfig_CheckRsp	NSC/ptxNSC_RfConfig.c	/^static ptxStatus_t ptxNSC_RfConfig_CheckRsp(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RfConfig_GetConfigType	NSC/ptxNSC_RfConfig.c	/^static ptxStatus_t ptxNSC_RfConfig_GetConfigType(uint8_t tlv_ID, uint8_t *config_type, uint8_t */;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RfConfig_GetDefaultParameter	NSC/ptxNSC_RfConfig.c	/^static ptxStatus_t ptxNSC_RfConfig_GetDefaultParameter(ptxNSC_RfConfigTlv_t *nscRfCfgParams, uin/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RfConfig_GetDefaultSettings	NSC/ptxNSC_RfConfig.c	/^static ptxStatus_t ptxNSC_RfConfig_GetDefaultSettings(ptxNSC_RfConfigTlv_t *nscRfCfgParams, uint/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RfConfig_GetFirstTlv	NSC/ptxNSC_RfConfig.c	/^static ptxStatus_t ptxNSC_RfConfig_GetFirstTlv(ptxNSC_RfConfigTlv_t *nsc_rf_cfg_params, uint8_t /;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RfConfig_Param	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfConfig_Param$/;"	s
ptxNSC_RfConfig_ParamList	NSC/ptxNSC.h	/^typedef enum ptxNSC_RfConfig_ParamList$/;"	g
ptxNSC_RfConfig_ParamList_t	NSC/ptxNSC.h	/^} ptxNSC_RfConfig_ParamList_t;$/;"	t	typeref:enum:ptxNSC_RfConfig_ParamList
ptxNSC_RfConfig_Param_t	NSC/ptxNSC.h	/^} ptxNSC_RfConfig_Param_t;$/;"	t	typeref:struct:ptxNSC_RfConfig_Param
ptxNSC_RfConfig_Regs	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfConfig_Regs$/;"	s
ptxNSC_RfConfig_RegsListen	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsListen[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsListen_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsListen_len = 39u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsMisc	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsMisc[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsMisc_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsMisc_len = 37u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollA106	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollA106[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollA106_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollA106_len = 31u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollA212	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollA212[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollA212_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollA212_len = 31u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollA424	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollA424[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollA424_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollA424_len = 31u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollA848	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollA848[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollA848_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollA848_len = 31u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollB106	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollB106[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollB106_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollB106_len = 31u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollB212	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollB212[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollB212_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollB212_len = 31u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollB424	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollB424[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollB424_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollB424_len = 31u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollB848	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollB848[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollB848_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollB848_len = 31u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollF212	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollF212[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollF212_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollF212_len = 37u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollF424	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollF424[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollF424_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollF424_len = 37u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_RegsPollV	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollV[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_RegsPollV_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_RegsPollV_len = 29u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Regs_t	NSC/ptxNSC.h	/^} ptxNSC_RfConfig_Regs_t;$/;"	t	typeref:struct:ptxNSC_RfConfig_Regs
ptxNSC_RfConfig_Send	NSC/ptxNSC_RfConfig.c	/^static ptxStatus_t ptxNSC_RfConfig_Send(ptxNSC_t *nscCtx, ptxNSC_RfConfigTlv_t *nsc_rf_cfg_param/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_RfConfig_Version	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Version = 0x0du;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_0	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_0[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_0_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_0_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_1	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_1[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_10	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_10[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_10_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_10_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_11	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_11[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_11_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_11_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_12	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_12[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_12_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_12_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_13	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_13[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_13_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_13_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_14	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_14[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_14_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_14_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_15	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_15[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_15_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_15_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_16	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_16[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_16_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_16_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_17	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_17[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_17_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_17_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_18	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_18[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_18_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_18_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_19	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_19[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_19_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_19_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_1_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_1_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_2	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_2[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_2_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_2_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_3	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_3[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_3_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_3_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_4	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_4[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_4_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_4_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_5	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_5[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_5_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_5_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_6	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_6[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_6_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_6_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_7	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_7[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_7_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_7_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_8	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_8[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_8_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_8_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfConfig_Wavebank_9	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_9[] = {$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_RfConfig_Wavebank_9_len	NSC/ptxNSC_RfConfigVal.c	/^const uint8_t ptxNSC_RfConfig_Wavebank_9_len = 32u;$/;"	v	typeref:typename:const uint8_t
ptxNSC_RfDataMsgTx	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_RfDataMsgTx(ptxNSC_t *nscCtx, uint8_t *msgData, size_t msgLen, uint8_t isChai/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RfDeactPars	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfDeactPars$/;"	s
ptxNSC_RfDeactPars_t	NSC/ptxNSC.h	/^} ptxNSC_RfDeactPars_t;$/;"	t	typeref:struct:ptxNSC_RfDeactPars
ptxNSC_RfDeact_State	NSC/ptxNSC.h	/^typedef enum ptxNSC_RfDeact_State$/;"	g
ptxNSC_RfDeact_State_t	NSC/ptxNSC.h	/^} ptxNSC_RfDeact_State_t;$/;"	t	typeref:enum:ptxNSC_RfDeact_State
ptxNSC_RfDeact_Type	NSC/ptxNSC.h	/^typedef enum ptxNSC_RfDeact_Type$/;"	g
ptxNSC_RfDeact_Type_t	NSC/ptxNSC.h	/^} ptxNSC_RfDeact_Type_t;$/;"	t	typeref:enum:ptxNSC_RfDeact_Type
ptxNSC_RfDeactivate	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_RfDeactivate(ptxNSC_t *nscCtx, ptxNSC_RfDeactPars_t *nscRfDeactPars)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RfDiscPars	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfDiscPars$/;"	s
ptxNSC_RfDiscPars_t	NSC/ptxNSC.h	/^} ptxNSC_RfDiscPars_t;$/;"	t	typeref:struct:ptxNSC_RfDiscPars
ptxNSC_RfDiscovery	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_RfDiscovery(ptxNSC_t *nscCtx, ptxNSC_RfDiscPars_t *nscRfDiscPars)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RfDiscovery_Mode	NSC/ptxNSC.h	/^typedef enum ptxNSC_RfDiscovery_Mode$/;"	g
ptxNSC_RfDiscovery_Mode_t	NSC/ptxNSC.h	/^} ptxNSC_RfDiscovery_Mode_t;$/;"	t	typeref:enum:ptxNSC_RfDiscovery_Mode
ptxNSC_RfPar	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfPar$/;"	s
ptxNSC_RfPar_Fwt	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfPar_Fwt$/;"	s
ptxNSC_RfPar_Fwt_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_Fwt_t;$/;"	t	typeref:struct:ptxNSC_RfPar_Fwt
ptxNSC_RfPar_Params	NSC/ptxNSC.h	/^typedef union ptxNSC_RfPar_Params$/;"	u
ptxNSC_RfPar_Params_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_Params_t;$/;"	t	typeref:union:ptxNSC_RfPar_Params
ptxNSC_RfPar_RfTech	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfPar_RfTech$/;"	s
ptxNSC_RfPar_RfTech_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_RfTech_t;$/;"	t	typeref:struct:ptxNSC_RfPar_RfTech
ptxNSC_RfPar_RxBitRate	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfPar_RxBitRate$/;"	s
ptxNSC_RfPar_RxBitRate_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_RxBitRate_t;$/;"	t	typeref:struct:ptxNSC_RfPar_RxBitRate
ptxNSC_RfPar_RxCRC	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfPar_RxCRC$/;"	s
ptxNSC_RfPar_RxCRC_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_RxCRC_t;$/;"	t	typeref:struct:ptxNSC_RfPar_RxCRC
ptxNSC_RfPar_RxParity	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfPar_RxParity$/;"	s
ptxNSC_RfPar_RxParity_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_RxParity_t;$/;"	t	typeref:struct:ptxNSC_RfPar_RxParity
ptxNSC_RfPar_TxBitRate	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfPar_TxBitRate$/;"	s
ptxNSC_RfPar_TxBitRate_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_TxBitRate_t;$/;"	t	typeref:struct:ptxNSC_RfPar_TxBitRate
ptxNSC_RfPar_TxCRC	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfPar_TxCRC$/;"	s
ptxNSC_RfPar_TxCRC_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_TxCRC_t;$/;"	t	typeref:struct:ptxNSC_RfPar_TxCRC
ptxNSC_RfPar_TxParity	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfPar_TxParity$/;"	s
ptxNSC_RfPar_TxParity_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_TxParity_t;$/;"	t	typeref:struct:ptxNSC_RfPar_TxParity
ptxNSC_RfPar_t	NSC/ptxNSC.h	/^} ptxNSC_RfPar_t;$/;"	t	typeref:struct:ptxNSC_RfPar
ptxNSC_RfParameter_Id	NSC/ptxNSC.h	/^typedef enum ptxNSC_RfParameter_Id$/;"	g
ptxNSC_RfParameter_Id_t	NSC/ptxNSC.h	/^} ptxNSC_RfParameter_Id_t;$/;"	t	typeref:enum:ptxNSC_RfParameter_Id
ptxNSC_RfSetParams	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_RfSetParams(ptxNSC_t *nscCtx, ptxNSC_RfPar_t *nscRfParams, size_t nscRfParams/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RfSetParams_Par	NSC/ptxNSC.h	/^typedef struct ptxNSC_RfSetParams_Par$/;"	s
ptxNSC_RfSetParams_Par_t	NSC/ptxNSC.h	/^} ptxNSC_RfSetParams_Par_t;$/;"	t	typeref:struct:ptxNSC_RfSetParams_Par
ptxNSC_RfTestRun	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_RfTestRun(ptxNSC_t *nscCtx, ptxNSC_RfTest_ID_t rfTestId, uint8_t *rfTestParam/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RfTestStop	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_RfTestStop(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_RfTest_ID	NSC/ptxNSC.h	/^typedef enum ptxNSC_RfTest_ID$/;"	g
ptxNSC_RfTest_ID_t	NSC/ptxNSC.h	/^} ptxNSC_RfTest_ID_t;$/;"	t	typeref:enum:ptxNSC_RfTest_ID
ptxNSC_Rsp	NSC/ptxNSC.h	/^typedef struct ptxNSC_Rsp$/;"	s
ptxNSC_Rsp_ErrorCodes	NSC/ptxNSC.h	/^typedef enum ptxNSC_Rsp_ErrorCodes$/;"	g
ptxNSC_Rsp_ErrorCodes_t	NSC/ptxNSC.h	/^} ptxNSC_Rsp_ErrorCodes_t;$/;"	t	typeref:enum:ptxNSC_Rsp_ErrorCodes
ptxNSC_Rsp_t	NSC/ptxNSC.h	/^} ptxNSC_Rsp_t;$/;"	t	typeref:struct:ptxNSC_Rsp
ptxNSC_Send	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Send(ptxNSC_t *nscCtx, ptxNscHal_BufferId_t bufferId, uint8_t *txBuf[], size_/;"	f	typeref:typename:ptxStatus_t
ptxNSC_SetMode	NSC/ptxNSC_Intf_SPII2C.c	/^ptxStatus_t ptxNSC_SetMode (ptxNSC_t *nscCtx, ptxNSC_Mode_t newMode)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_SetNewRspRcvd	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_SetNewRspRcvd(ptxNSC_t *nscCtx, uint8_t *rsp, size_t rspLen)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_Set_Listen_RoutingTable_HCE	NSC/NSC_CE/ptxNSC_CE.c	/^ptxStatus_t ptxNSC_Set_Listen_RoutingTable_HCE (ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_SoftReset	NSC/ptxNSC_Intf_SPII2C.c	/^ptxStatus_t ptxNSC_SoftReset(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_StandbyCmd	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_StandbyCmd(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Start_WaitForRx	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Start_WaitForRx(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Stop_WaitForRx	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Stop_WaitForRx(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_System	NSC/ptxNSC_System.h	/^typedef struct ptxNSC_System$/;"	s
ptxNSC_System_ApplyDefaults	NSC/ptxNSC_System.c	/^ptxStatus_t ptxNSC_System_ApplyDefaults (ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_System_GetConfig	NSC/ptxNSC_System.c	/^ptxStatus_t ptxNSC_System_GetConfig (ptxNSC_t *nscCtx, ptxNSC_System_t *sysParams)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_System_SetConfig	NSC/ptxNSC_System.c	/^ptxStatus_t ptxNSC_System_SetConfig (ptxNSC_t *nscCtx, ptxNSC_System_t *sysParams)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_System_State	NSC/ptxNSC.h	/^typedef enum ptxNSC_System_State$/;"	g
ptxNSC_System_State_t	NSC/ptxNSC.h	/^} ptxNSC_System_State_t;$/;"	t	typeref:enum:ptxNSC_System_State
ptxNSC_System_t	NSC/ptxNSC_System.h	/^} ptxNSC_System_t;$/;"	t	typeref:struct:ptxNSC_System
ptxNSC_T5T_IsolatedEoF	NSC/NSC_RD/ptxNSC_Rd.c	/^ptxStatus_t ptxNSC_T5T_IsolatedEoF(struct ptxNSC *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_WaitForRsp	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_WaitForRsp(ptxNSC_t *nscCtx, uint8_t **rsp, size_t *rspLen, uint32_t t/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_WakeupCmd	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_WakeupCmd(ptxNSC_t *nscCtx)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_Write	NSC/ptxNSC.c	/^ptxStatus_t ptxNSC_Write(ptxNSC_t *nscCtx, uint16_t address, uint8_t value)$/;"	f	typeref:typename:ptxStatus_t
ptxNSC_WriteCmd	NSC/ptxNSC.c	/^static ptxStatus_t ptxNSC_WriteCmd(ptxNSC_t *nscCtx, ptxNSC_WriteCmd_Par_t *nscwritePar)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNSC_WriteCmd_Par	NSC/ptxNSC.h	/^typedef struct ptxNSC_WriteCmd_Par$/;"	s
ptxNSC_WriteCmd_Par_t	NSC/ptxNSC.h	/^} ptxNSC_WriteCmd_Par_t;$/;"	t	typeref:struct:ptxNSC_WriteCmd_Par
ptxNSC_WriteCmd_Type	NSC/ptxNSC.h	/^typedef enum ptxNSC_WriteCmd_Type$/;"	g
ptxNSC_WriteCmd_Type_t	NSC/ptxNSC.h	/^} ptxNSC_WriteCmd_Type_t;$/;"	t	typeref:enum:ptxNSC_WriteCmd_Type
ptxNSC_t	NSC/ptxNSC.h	/^} ptxNSC_t;$/;"	t	typeref:struct:ptxNSC
ptxNSC_uCODE_ASM	NSC/ptxNSC_uCODE.c	/^const char *ptxNSC_uCODE_ASM = "http:\/\/af08vs01:20000\/svn\/PTX1000\/trunk\/digital\/tools\/df/;"	v	typeref:typename:const char *
ptxNSC_uCODE_ASM_REV	NSC/ptxNSC_uCODE.c	/^const uint32_t ptxNSC_uCODE_ASM_REV = 8362;const size_t ptxNSC_uCODE_init_adds [NUM_OF_SECTIONS]/;"	v	typeref:typename:const uint32_t
ptxNSC_uCODE_H_	NSC/ptxNSC_uCODE.h	/^#define ptxNSC_uCODE_H_$/;"	d
ptxNSC_uCODE_SRC	NSC/ptxNSC_uCODE.c	/^const char *ptxNSC_uCODE_SRC = "http:\/\/af08vs01:20000\/svn\/PTX1000\/trunk\/digital\/ptx1000\//;"	v	typeref:typename:const char *
ptxNSC_uCODE_SRC_REV	NSC/ptxNSC_uCODE.c	/^const uint32_t ptxNSC_uCODE_SRC_REV = 9084;$/;"	v	typeref:typename:const uint32_t
ptxNSC_uCODE_init_adds	NSC/ptxNSC_uCODE.c	/^const uint32_t ptxNSC_uCODE_ASM_REV = 8362;const size_t ptxNSC_uCODE_init_adds [NUM_OF_SECTIONS]/;"	v	typeref:typename:const size_t[]
ptxNSC_uCODE_section_0	NSC/ptxNSC_uCODE.c	/^const uint8_t ptxNSC_uCODE_section_0 [SIZE_OF_SECTION_0] = { 0x00, 0x60 };$/;"	v	typeref:typename:const uint8_t[]
ptxNSC_uCODE_section_1	NSC/ptxNSC_uCODE.c	/^const uint8_t ptxNSC_uCODE_section_1 [SIZE_OF_SECTION_1] = { 0x73, 0x01, 0x02, 0xdf, 0xf0, 0x70,/;"	v	typeref:typename:const uint8_t[]
ptxNSC_uCODE_sections	NSC/ptxNSC_uCODE.c	/^const uint8_t *ptxNSC_uCODE_sections [NUM_OF_SECTIONS] = { &ptxNSC_uCODE_section_0[0], &ptxNSC_u/;"	v	typeref:typename:const uint8_t * []
ptxNSC_uCODE_sections_size	NSC/ptxNSC_uCODE.c	/^const size_t ptxNSC_uCODE_sections_size [NUM_OF_SECTIONS] = { SIZE_OF_SECTION_0, SIZE_OF_SECTION/;"	v	typeref:typename:const size_t[]
ptxNativeTag_T2T	NATIVE_TAG/ptxNativeTag_T2T.h	/^typedef struct ptxNativeTag_T2T$/;"	s
ptxNativeTag_T2TClose	NATIVE_TAG/ptxNativeTag_T2T.c	/^ptxStatus_t ptxNativeTag_T2TClose (ptxNativeTag_T2T_t *t2tComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T2TOpen	NATIVE_TAG/ptxNativeTag_T2T.c	/^ptxStatus_t ptxNativeTag_T2TOpen (ptxNativeTag_T2T_t *t2tComp, ptxNativeTag_T2T_InitParams_t *in/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T2TRead	NATIVE_TAG/ptxNativeTag_T2T.c	/^ptxStatus_t ptxNativeTag_T2TRead (ptxNativeTag_T2T_t *t2tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T2TSectorSelect	NATIVE_TAG/ptxNativeTag_T2T.c	/^ptxStatus_t ptxNativeTag_T2TSectorSelect (ptxNativeTag_T2T_t *t2tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T2TSetCommandHeader	NATIVE_TAG/ptxNativeTag_T2T.c	/^static ptxStatus_t ptxNativeTag_T2TSetCommandHeader(ptxNativeTag_T2T_t *t2tComp, uint8_t command/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T2TTransceive	NATIVE_TAG/ptxNativeTag_T2T.c	/^static ptxStatus_t ptxNativeTag_T2TTransceive(ptxNativeTag_T2T_t *t2tComp, uint32_t txLen, uint8/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T2TWrite	NATIVE_TAG/ptxNativeTag_T2T.c	/^ptxStatus_t ptxNativeTag_T2TWrite (ptxNativeTag_T2T_t *t2tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T2T_InitParams	NATIVE_TAG/ptxNativeTag_T2T.h	/^typedef struct ptxNativeTag_T2T_InitParams$/;"	s
ptxNativeTag_T2T_InitParams_t	NATIVE_TAG/ptxNativeTag_T2T.h	/^} ptxNativeTag_T2T_InitParams_t;$/;"	t	typeref:struct:ptxNativeTag_T2T_InitParams
ptxNativeTag_T2T_t	NATIVE_TAG/ptxNativeTag_T2T.h	/^} ptxNativeTag_T2T_t;$/;"	t	typeref:struct:ptxNativeTag_T2T
ptxNativeTag_T3T	NATIVE_TAG/ptxNativeTag_T3T.h	/^typedef struct ptxNativeTag_T3T$/;"	s
ptxNativeTag_T3TCheck	NATIVE_TAG/ptxNativeTag_T3T.c	/^ptxStatus_t ptxNativeTag_T3TCheck (ptxNativeTag_T3T_t *t3tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T3TClose	NATIVE_TAG/ptxNativeTag_T3T.c	/^ptxStatus_t ptxNativeTag_T3TClose (ptxNativeTag_T3T_t *t3tComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T3TOpen	NATIVE_TAG/ptxNativeTag_T3T.c	/^ptxStatus_t ptxNativeTag_T3TOpen (ptxNativeTag_T3T_t *t3tComp, ptxNativeTag_T3T_InitParams_t *in/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T3TSENSF_REQ	NATIVE_TAG/ptxNativeTag_T3T.c	/^ptxStatus_t ptxNativeTag_T3TSENSF_REQ (ptxNativeTag_T3T_t *t3tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T3TSetCommandHeader	NATIVE_TAG/ptxNativeTag_T3T.c	/^static ptxStatus_t ptxNativeTag_T3TSetCommandHeader (ptxNativeTag_T3T_t *t3tComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T3TSetTagParams	NATIVE_TAG/ptxNativeTag_T3T.c	/^ptxStatus_t ptxNativeTag_T3TSetTagParams (ptxNativeTag_T3T_t *t3tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T3TTransceive	NATIVE_TAG/ptxNativeTag_T3T.c	/^static ptxStatus_t ptxNativeTag_T3TTransceive (ptxNativeTag_T3T_t *t3tComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T3TUpdate	NATIVE_TAG/ptxNativeTag_T3T.c	/^ptxStatus_t ptxNativeTag_T3TUpdate (ptxNativeTag_T3T_t *t3tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T3T_InitParams	NATIVE_TAG/ptxNativeTag_T3T.h	/^typedef struct ptxNativeTag_T3T_InitParams$/;"	s
ptxNativeTag_T3T_InitParams_t	NATIVE_TAG/ptxNativeTag_T3T.h	/^} ptxNativeTag_T3T_InitParams_t;$/;"	t	typeref:struct:ptxNativeTag_T3T_InitParams
ptxNativeTag_T3T_t	NATIVE_TAG/ptxNativeTag_T3T.h	/^} ptxNativeTag_T3T_t;$/;"	t	typeref:struct:ptxNativeTag_T3T
ptxNativeTag_T4T	NATIVE_TAG/ptxNativeTag_T4T.h	/^typedef struct ptxNativeTag_T4T$/;"	s
ptxNativeTag_T4TClose	NATIVE_TAG/ptxNativeTag_T4T.c	/^ptxStatus_t ptxNativeTag_T4TClose (ptxNativeTag_T4T_t *t4tComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T4TOpen	NATIVE_TAG/ptxNativeTag_T4T.c	/^ptxStatus_t ptxNativeTag_T4TOpen (ptxNativeTag_T4T_t *t4tComp, ptxNativeTag_T4T_InitParams_t *in/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T4TReadBinary	NATIVE_TAG/ptxNativeTag_T4T.c	/^ptxStatus_t ptxNativeTag_T4TReadBinary (ptxNativeTag_T4T_t *t4tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T4TReadBinaryODO	NATIVE_TAG/ptxNativeTag_T4T.c	/^ptxStatus_t ptxNativeTag_T4TReadBinaryODO (ptxNativeTag_T4T_t *t4tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T4TSelect	NATIVE_TAG/ptxNativeTag_T4T.c	/^ptxStatus_t ptxNativeTag_T4TSelect (ptxNativeTag_T4T_t *t4tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T4TSetCommandAPDU	NATIVE_TAG/ptxNativeTag_T4T.c	/^static ptxStatus_t ptxNativeTag_T4TSetCommandAPDU (ptxNativeTag_T4T_t *t4tComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T4TSetMTU	NATIVE_TAG/ptxNativeTag_T4T.c	/^static uint8_t ptxNativeTag_T4TSetMTU (uint8_t useODO, uint8_t updateOperation)$/;"	f	typeref:typename:uint8_t	file:
ptxNativeTag_T4TSetODOCommandAPDU	NATIVE_TAG/ptxNativeTag_T4T.c	/^static ptxStatus_t ptxNativeTag_T4TSetODOCommandAPDU (ptxNativeTag_T4T_t *t4tComp,$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T4TTransceive	NATIVE_TAG/ptxNativeTag_T4T.c	/^static ptxStatus_t ptxNativeTag_T4TTransceive (ptxNativeTag_T4T_t *t4tComp, uint32_t txLen, uint/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T4TUpdateBinary	NATIVE_TAG/ptxNativeTag_T4T.c	/^ptxStatus_t ptxNativeTag_T4TUpdateBinary (ptxNativeTag_T4T_t *t4tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T4TUpdateBinaryODO	NATIVE_TAG/ptxNativeTag_T4T.c	/^ptxStatus_t ptxNativeTag_T4TUpdateBinaryODO (ptxNativeTag_T4T_t *t4tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T4T_CommandAPDUFields	NATIVE_TAG/ptxNativeTag_T4T.h	/^typedef struct ptxNativeTag_T4T_CommandAPDUFields$/;"	s
ptxNativeTag_T4T_CommandAPDUFields_t	NATIVE_TAG/ptxNativeTag_T4T.h	/^} ptxNativeTag_T4T_CommandAPDUFields_t;$/;"	t	typeref:struct:ptxNativeTag_T4T_CommandAPDUFields
ptxNativeTag_T4T_InitParams	NATIVE_TAG/ptxNativeTag_T4T.h	/^typedef struct ptxNativeTag_T4T_InitParams$/;"	s
ptxNativeTag_T4T_InitParams_t	NATIVE_TAG/ptxNativeTag_T4T.h	/^} ptxNativeTag_T4T_InitParams_t;$/;"	t	typeref:struct:ptxNativeTag_T4T_InitParams
ptxNativeTag_T4T_t	NATIVE_TAG/ptxNativeTag_T4T.h	/^} ptxNativeTag_T4T_t;$/;"	t	typeref:struct:ptxNativeTag_T4T
ptxNativeTag_T5T	NATIVE_TAG/ptxNativeTag_T5T.h	/^typedef struct ptxNativeTag_T5T$/;"	s
ptxNativeTag_T5TClose	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TClose (ptxNativeTag_T5T_t *t5tComp)$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TExtLockSingleBlock	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TExtLockSingleBlock (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TExtReadMultipleBlock	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TExtReadMultipleBlock (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TExtReadSingleBlock	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TExtReadSingleBlock (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TExtWriteSingleBlock	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TExtWriteSingleBlock (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TFrameType	NATIVE_TAG/ptxNativeTag_T5T.c	/^typedef enum ptxNativeTag_T5TFrameType$/;"	g	file:
ptxNativeTag_T5TFrameType	NATIVE_TAG/ptxNativeTag_T5T.c	/^} ptxNativeTag_T5TFrameType;$/;"	t	typeref:enum:ptxNativeTag_T5TFrameType	file:
ptxNativeTag_T5THandleRfReset	NATIVE_TAG/ptxNativeTag_T5T.c	/^static ptxStatus_t ptxNativeTag_T5THandleRfReset (ptxNativeTag_T5T_t *t5tComp)$/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T5TLockSingleBlock	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TLockSingleBlock (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TOpen	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TOpen (ptxNativeTag_T5T_t *t5tComp, ptxNativeTag_T5T_InitParams_t *in/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TReadMultipleBlock	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TReadMultipleBlock (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TReadSingleBlock	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TReadSingleBlock (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TSelect	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TSelect (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TSetCommandHeader	NATIVE_TAG/ptxNativeTag_T5T.c	/^static ptxStatus_t ptxNativeTag_T5TSetCommandHeader(ptxNativeTag_T5T_t *t5tComp, uint8_t command/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T5TSetUID	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TSetUID (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TSleep	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TSleep (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5TTransceive	NATIVE_TAG/ptxNativeTag_T5T.c	/^static ptxStatus_t ptxNativeTag_T5TTransceive(ptxNativeTag_T5T_t *t5tComp, ptxNativeTag_T5TFrame/;"	f	typeref:typename:ptxStatus_t	file:
ptxNativeTag_T5TWriteSingleBlock	NATIVE_TAG/ptxNativeTag_T5T.c	/^ptxStatus_t ptxNativeTag_T5TWriteSingleBlock (ptxNativeTag_T5T_t *t5tComp,$/;"	f	typeref:typename:ptxStatus_t
ptxNativeTag_T5T_InitParams	NATIVE_TAG/ptxNativeTag_T5T.h	/^typedef struct ptxNativeTag_T5T_InitParams$/;"	s
ptxNativeTag_T5T_InitParams_t	NATIVE_TAG/ptxNativeTag_T5T.h	/^} ptxNativeTag_T5T_InitParams_t;$/;"	t	typeref:struct:ptxNativeTag_T5T_InitParams
ptxNativeTag_T5T_t	NATIVE_TAG/ptxNativeTag_T5T.h	/^} ptxNativeTag_T5T_t;$/;"	t	typeref:struct:ptxNativeTag_T5T
ptxNscEventId	NSC/ptxNSC_Event.h	/^typedef enum ptxNscEventId$/;"	g
ptxNscEventId_t	NSC/ptxNSC_Event.h	/^} ptxNscEventId_t;$/;"	t	typeref:enum:ptxNscEventId
ptxNscHal_BufferId	NSC/ptxNSC_Hal.h	/^typedef enum ptxNscHal_BufferId$/;"	g
ptxNscHal_BufferId_t	NSC/ptxNSC_Hal.h	/^} ptxNscHal_BufferId_t;$/;"	t	typeref:enum:ptxNscHal_BufferId
ptxNscRsp_DeviceInStandby	NSC/ptxNSC.h	/^    ptxNscRsp_DeviceInStandby       = (0x08u),                  \/**< Device is in Standby mode./;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_InvalidParameter	NSC/ptxNSC.h	/^    ptxNscRsp_InvalidParameter      = (0x04u),                  \/**< Invalid parameter. *\/$/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_NotAllowedCmd	NSC/ptxNSC.h	/^    ptxNscRsp_NotAllowedCmd         = (0x02u),                  \/**< Command not allowed in the/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_PAOvercurProtError	NSC/ptxNSC.h	/^    ptxNscRsp_PAOvercurProtError    = (0x07u),                  \/**< PA Overcurrent protection /;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_PAThermalProtError	NSC/ptxNSC.h	/^    ptxNscRsp_PAThermalProtError    = (0x06u),                  \/**< PA Thermal protection erro/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_RfCollisionError	NSC/ptxNSC.h	/^    ptxNscRsp_RfCollisionError      = (0x11u),                  \/**< RF Collision error (valid /;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_RfListModNotSupported	NSC/ptxNSC.h	/^    ptxNscRsp_RfListModNotSupported = (0x16u),                  \/**< RF Listen mode not support/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_RfPollModNotSupported	NSC/ptxNSC.h	/^    ptxNscRsp_RfPollModNotSupported = (0x15u),                  \/**< RF Poll mode not supported/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_RfProtocolError	NSC/ptxNSC.h	/^    ptxNscRsp_RfProtocolError       = (0x14u),                  \/**< RF Protocol error. *\/$/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_RfTimeoutError	NSC/ptxNSC.h	/^    ptxNscRsp_RfTimeoutError        = (0x12u),                  \/**< RF Timeout error. *\/$/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_RfTransmissionError	NSC/ptxNSC.h	/^    ptxNscRsp_RfTransmissionError   = (0x13u),                  \/**< RF Transmission error. *\/$/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_RouteNotFound	NSC/ptxNSC.h	/^    ptxNscRsp_RouteNotFound         = (0x05u),                  \/**< Route not found. *\/$/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_Sucessful	NSC/ptxNSC.h	/^    ptxNscRsp_Sucessful             = (0x00u),                  \/**< Command successfully execu/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_SwpIdentityCheckFail	NSC/ptxNSC.h	/^    ptxNscRsp_SwpIdentityCheckFail  = (0x23u),                  \/**< SWP identity check failed./;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_SwpInterfaceError	NSC/ptxNSC.h	/^    ptxNscRsp_SwpInterfaceError     = (0x22u),                  \/**< SWP error. Interface error/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_SwpModeNotSupported	NSC/ptxNSC.h	/^    ptxNscRsp_SwpModeNotSupported   = (0x24u),                  \/**< SWP mode not supported. *\/$/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_SwpUiccNotPresent	NSC/ptxNSC.h	/^    ptxNscRsp_SwpUiccNotPresent     = (0x21u),                  \/**< SWP error. UICC not presen/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_UnknownError	NSC/ptxNSC.h	/^    ptxNscRsp_UnknownError          = (0x01u),                  \/**< Command failed due to an u/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNscRsp_UnknownErrorCmd	NSC/ptxNSC.h	/^    ptxNscRsp_UnknownErrorCmd       = (0x03u),                  \/**< Command unknown. *\/$/;"	e	enum:ptxNSC_Rsp_ErrorCodes
ptxNsc_RfPar_ResLimit	NSC/ptxNSC.h	/^typedef struct ptxNsc_RfPar_ResLimit$/;"	s
ptxNsc_RfPar_ResLimit_t	NSC/ptxNSC.h	/^} ptxNsc_RfPar_ResLimit_t;$/;"	t	typeref:struct:ptxNsc_RfPar_ResLimit
ptxNsc_RfPar_RfField	NSC/ptxNSC.h	/^typedef struct ptxNsc_RfPar_RfField$/;"	s
ptxNsc_RfPar_RfField_t	NSC/ptxNSC.h	/^} ptxNsc_RfPar_RfField_t;$/;"	t	typeref:struct:ptxNsc_RfPar_RfField
ptxNsc_RfPar_TxResidualBits	NSC/ptxNSC.h	/^typedef struct ptxNsc_RfPar_TxResidualBits$/;"	s
ptxNsc_RfPar_TxResidualBits_t	NSC/ptxNSC.h	/^} ptxNsc_RfPar_TxResidualBits_t;$/;"	t	typeref:struct:ptxNsc_RfPar_TxResidualBits
ptxPLAT_AllocAndInit	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_AllocAndInit(ptxPlat_t **plat, ptxPlat_ConfigPars_t *initParams)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_CheckRxActive	PLAT/Psoc/ptxPLAT.c	/^uint8_t ptxPLAT_CheckRxActive(struct ptxPlat *plat)$/;"	f	typeref:typename:uint8_t
ptxPLAT_Deinit	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_Deinit(ptxPlat_t *plat)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_DisableInterrupts	PLAT/Psoc/ptxPLAT.c	/^void ptxPLAT_DisableInterrupts (ptxPlat_t *plat)$/;"	f	typeref:typename:void
ptxPLAT_EnableInterrupts	PLAT/Psoc/ptxPLAT.c	/^void ptxPLAT_EnableInterrupts (ptxPlat_t *plat)$/;"	f	typeref:typename:void
ptxPLAT_GPIO_IsRxPending	PLAT/Psoc/ptxPLAT_SPI.c	/^bool ptxPLAT_GPIO_IsRxPending(ptxPLAT_Spi_t *spi) {$/;"	f	typeref:typename:bool
ptxPLAT_GetInitializedTimer	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_GetInitializedTimer(struct ptxPlat *plat, struct ptxPlatTimer **timer)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_IsRxPending	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_IsRxPending (struct ptxPlat *plat , uint8_t *isRxPending)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_ResetChip	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_ResetChip ( struct ptxPlat *plat )$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_SPI_Deinit	PLAT/Psoc/ptxPLAT_SPI.c	/^ptxStatus_t ptxPLAT_SPI_Deinit(ptxPLAT_Spi_t *spi)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_SPI_GetInitialized	PLAT/Psoc/ptxPLAT_SPI.c	/^ptxStatus_t ptxPLAT_SPI_GetInitialized(ptxPLAT_Spi_t **spi, ptxPLAT_SpiConfigPars_t *spiPars)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_SPI_StartWaitForRx	PLAT/Psoc/ptxPLAT_SPI.c	/^ptxStatus_t ptxPLAT_SPI_StartWaitForRx(ptxPLAT_Spi_t *spi, pptxPlat_RxCallBack_t irqCb, void *ct/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_SPI_StopWaitForRx	PLAT/Psoc/ptxPLAT_SPI.c	/^ptxStatus_t ptxPLAT_SPI_StopWaitForRx(ptxPLAT_Spi_t *spi)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_SPI_TRx	PLAT/Psoc/ptxPLAT_SPI.c	/^ptxStatus_t ptxPLAT_SPI_TRx(ptxPLAT_Spi_t *spi, uint8_t *txBuf[], size_t txLen[], size_t numTxBu/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_SPI_TriggerRx	PLAT/Psoc/ptxPLAT_SPI.c	/^ptxStatus_t ptxPLAT_SPI_TriggerRx(ptxPLAT_Spi_t *spi)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_Sleep	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_Sleep(ptxPlat_t *plat, uint32_t sleep_ms)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_Spi	PLAT/Psoc/ptxPLAT_SPI.h	/^typedef struct ptxPLAT_Spi$/;"	s
ptxPLAT_SpiConfigPars	PLAT/Psoc/ptxPLAT_SPI.h	/^typedef struct ptxPLAT_SpiConfigPars$/;"	s
ptxPLAT_SpiConfigPars_t	PLAT/Psoc/ptxPLAT_SPI.h	/^}ptxPLAT_SpiConfigPars_t;$/;"	t	typeref:struct:ptxPLAT_SpiConfigPars
ptxPLAT_SpiPort	PLAT/Psoc/ptxPLAT_SPI.h	/^typedef struct ptxPLAT_SpiPort$/;"	s
ptxPLAT_SpiPort_t	PLAT/Psoc/ptxPLAT_SPI.h	/^}ptxPLAT_SpiPort_t;$/;"	t	typeref:struct:ptxPLAT_SpiPort
ptxPLAT_Spi_t	PLAT/Psoc/ptxPLAT_SPI.h	/^}ptxPLAT_Spi_t;$/;"	t	typeref:struct:ptxPLAT_Spi
ptxPLAT_StartWaitForRx	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_StartWaitForRx(struct ptxPlat *plat, pptxPlat_RxCallBack_t irqCb, void *ctxI/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_StopWaitForRx	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_StopWaitForRx(struct ptxPlat *plat)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TIMER_Deinit	PLAT/Psoc/ptxPLAT_TIMER.c	/^ptxStatus_t ptxPLAT_TIMER_Deinit(ptxPlatTimer_t *timer)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TIMER_GetInitializedTimer	PLAT/Psoc/ptxPLAT_TIMER.c	/^ptxStatus_t ptxPLAT_TIMER_GetInitializedTimer(ptxPlatTimer_t **timer)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TIMER_IsElapsed	PLAT/Psoc/ptxPLAT_TIMER.c	/^ptxStatus_t ptxPLAT_TIMER_IsElapsed(ptxPlatTimer_t *timer, uint8_t *isElapsed)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TIMER_Sleep	PLAT/Psoc/ptxPLAT_TIMER.c	/^ptxStatus_t ptxPLAT_TIMER_Sleep(ptxPlatTimer_t *timer, uint32_t sleep_ms) {$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TIMER_Start	PLAT/Psoc/ptxPLAT_TIMER.c	/^ptxStatus_t ptxPLAT_TIMER_Start(ptxPlatTimer_t *timer, uint32_t ms, uint8_t isBlock, pptxPlat_Ti/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TIMER_Stop	PLAT/Psoc/ptxPLAT_TIMER.c	/^ptxStatus_t ptxPLAT_TIMER_Stop(ptxPlatTimer_t *timer)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TRx	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_TRx(struct ptxPlat *plat, uint8_t *txBuf[], size_t txLen[], size_t numTxBuff/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TimerDeinit	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_TimerDeinit(struct ptxPlat *plat, struct ptxPlatTimer *timer)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TimerIsElapsed	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_TimerIsElapsed(struct ptxPlat *plat, struct ptxPlatTimer *timer, uint8_t *is/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TimerStart	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_TimerStart(struct ptxPlat *plat, struct ptxPlatTimer *timer, uint32_t ms, ui/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_TriggerRx	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_TriggerRx(ptxPlat_t *plat)$/;"	f	typeref:typename:ptxStatus_t
ptxPLAT_WaitForInterrupt	PLAT/Psoc/ptxPLAT.c	/^ptxStatus_t ptxPLAT_WaitForInterrupt(struct ptxPlat *plat)$/;"	f	typeref:typename:ptxStatus_t
ptxPlat	PLAT/Psoc/ptxPLAT_INT.h	/^typedef struct ptxPlat$/;"	s
ptxPlatTimer	PLAT/Psoc/ptxPLAT_TIMER.h	/^typedef struct ptxPlatTimer$/;"	s
ptxPlatTimerState	PLAT/Psoc/ptxPLAT_TIMER.h	/^typedef enum ptxPlatTimerState$/;"	g
ptxPlatTimerState_t	PLAT/Psoc/ptxPLAT_TIMER.h	/^} ptxPlatTimerState_t;$/;"	t	typeref:enum:ptxPlatTimerState
ptxPlatTimer_t	PLAT/Psoc/ptxPLAT_TIMER.h	/^} ptxPlatTimer_t;$/;"	t	typeref:struct:ptxPlatTimer
ptxPlat_ConfigPars	PLAT/ptxPLAT.h	/^typedef struct ptxPlat_ConfigPars$/;"	s
ptxPlat_ConfigPars_t	PLAT/ptxPLAT.h	/^}ptxPlat_ConfigPars_t;$/;"	t	typeref:struct:ptxPlat_ConfigPars
ptxPlat_t	PLAT/Psoc/ptxPLAT_INT.h	/^}ptxPlat_t;$/;"	t	typeref:struct:ptxPlat
ptxRF_Test	RF_TEST/ptxRF_Test.h	/^typedef struct ptxRF_Test$/;"	s
ptxRF_Test_BitRate	RF_TEST/ptxRF_Test.h	/^typedef enum ptxRF_Test_BitRate$/;"	g
ptxRF_Test_BitRate_t	RF_TEST/ptxRF_Test.h	/^} ptxRF_Test_BitRate_t;$/;"	t	typeref:enum:ptxRF_Test_BitRate
ptxRF_Test_Carrier_Params	RF_TEST/ptxRF_Test.h	/^typedef struct ptxRF_Test_Carrier_Params$/;"	s
ptxRF_Test_Carrier_Params_t	RF_TEST/ptxRF_Test.h	/^} ptxRF_Test_Carrier_Params_t;$/;"	t	typeref:struct:ptxRF_Test_Carrier_Params
ptxRF_Test_Deinit	RF_TEST/ptxRF_Test.c	/^ptxStatus_t ptxRF_Test_Deinit (ptxRF_Test_t *rfTestComp)$/;"	f	typeref:typename:ptxStatus_t
ptxRF_Test_Init	RF_TEST/ptxRF_Test.c	/^ptxStatus_t ptxRF_Test_Init (ptxRF_Test_t *rfTestComp, ptxRF_Test_InitParams_t *initParams)$/;"	f	typeref:typename:ptxStatus_t
ptxRF_Test_InitParams	RF_TEST/ptxRF_Test.h	/^typedef struct ptxRF_Test_InitParams$/;"	s
ptxRF_Test_InitParams_t	RF_TEST/ptxRF_Test.h	/^} ptxRF_Test_InitParams_t;$/;"	t	typeref:struct:ptxRF_Test_InitParams
ptxRF_Test_PRBS_Params	RF_TEST/ptxRF_Test.h	/^typedef struct ptxRF_Test_PRBS_Params$/;"	s
ptxRF_Test_PRBS_Params_t	RF_TEST/ptxRF_Test.h	/^} ptxRF_Test_PRBS_Params_t;$/;"	t	typeref:struct:ptxRF_Test_PRBS_Params
ptxRF_Test_Params	RF_TEST/ptxRF_Test.h	/^typedef union ptxRF_Test_Params$/;"	u
ptxRF_Test_Params_t	RF_TEST/ptxRF_Test.h	/^} ptxRF_Test_Params_t;$/;"	t	typeref:union:ptxRF_Test_Params
ptxRF_Test_RunTest	RF_TEST/ptxRF_Test.c	/^ptxStatus_t ptxRF_Test_RunTest(ptxRF_Test_t *rfTestComp, ptxRF_Test_TestParams_t *testParams)$/;"	f	typeref:typename:ptxStatus_t
ptxRF_Test_StopTest	RF_TEST/ptxRF_Test.c	/^ptxStatus_t ptxRF_Test_StopTest(ptxRF_Test_t *rfTestComp)$/;"	f	typeref:typename:ptxStatus_t
ptxRF_Test_TechType	RF_TEST/ptxRF_Test.h	/^typedef enum ptxRF_Test_TechType$/;"	g
ptxRF_Test_TechType_t	RF_TEST/ptxRF_Test.h	/^} ptxRF_Test_TechType_t;$/;"	t	typeref:enum:ptxRF_Test_TechType
ptxRF_Test_TestID	RF_TEST/ptxRF_Test.h	/^typedef enum ptxRF_Test_TestID$/;"	g
ptxRF_Test_TestID_t	RF_TEST/ptxRF_Test.h	/^} ptxRF_Test_TestID_t;$/;"	t	typeref:enum:ptxRF_Test_TestID
ptxRF_Test_TestParams	RF_TEST/ptxRF_Test.h	/^typedef struct ptxRF_Test_TestParams$/;"	s
ptxRF_Test_TestParams_t	RF_TEST/ptxRF_Test.h	/^} ptxRF_Test_TestParams_t;$/;"	t	typeref:struct:ptxRF_Test_TestParams
ptxRF_Test_t	RF_TEST/ptxRF_Test.h	/^} ptxRF_Test_t;$/;"	t	typeref:struct:ptxRF_Test
ptxStatus_ACKError	ptxStatus.h	/^    ptxStatus_ACKError,             \/**< The request has not been acknowledged or a negative Ac/;"	e	enum:ptxStatus_Values
ptxStatus_AccessDenied	ptxStatus.h	/^    ptxStatus_AccessDenied,         \/**< No access to the resource. Use rather for access-right/;"	e	enum:ptxStatus_Values
ptxStatus_AssertionError	ptxStatus.h	/^    ptxStatus_AssertionError,       \/**< An assertion has failed. *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_BufferTooSmall	ptxStatus.h	/^    ptxStatus_BufferTooSmall,       \/**< Buffer to store data not large enough *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Comp_FELICA_DTE	ptxStatus.h	/^    ptxStatus_Comp_FELICA_DTE,         \/**< FELICA-DTE Component *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_GPIO	ptxStatus.h	/^    ptxStatus_Comp_GPIO,               \/**< GPIO Component *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_IOTHce	ptxStatus.h	/^    ptxStatus_Comp_IOTHce,             \/**< IOT Host Card Emulation Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_IoTReader	ptxStatus.h	/^    ptxStatus_Comp_IoTReader,          \/**< IOT Reader component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_MAX	ptxStatus.h	/^    ptxStatus_Comp_MAX                 \/**< Maximum count. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_NDEF	ptxStatus.h	/^    ptxStatus_Comp_NDEF,               \/**< NDEF Component *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_NSC	ptxStatus.h	/^    ptxStatus_Comp_NSC,                \/**< NSC Component.  *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_NativeTag_MFCC	ptxStatus.h	/^    ptxStatus_Comp_NativeTag_MFCC,     \/**< Mifare Classic Compatibility Native Tag*\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_NativeTag_T2T	ptxStatus.h	/^    ptxStatus_Comp_NativeTag_T2T,      \/**< T2T Native Tag *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_NativeTag_T3T	ptxStatus.h	/^    ptxStatus_Comp_NativeTag_T3T,      \/**< T3T Native Tag *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_NativeTag_T4T	ptxStatus.h	/^    ptxStatus_Comp_NativeTag_T4T,      \/**< T4T Native Tag *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_NativeTag_T5T	ptxStatus.h	/^    ptxStatus_Comp_NativeTag_T5T,      \/**< T5T Native Tag *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_None	ptxStatus.h	/^    ptxStatus_Comp_None,               \/**< No component specified. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_PERIPH	ptxStatus.h	/^    ptxStatus_Comp_PERIPH,             \/**< Peripherals Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_PLAT	ptxStatus.h	/^    ptxStatus_Comp_PLAT,               \/**< Platform Dependent Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_PMU	ptxStatus.h	/^    ptxStatus_Comp_PMU,                \/**< WLC Power Management Unit Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_POS	ptxStatus.h	/^    ptxStatus_Comp_POS,                \/**< POS. EMVCo Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_REMOTE	ptxStatus.h	/^    ptxStatus_Comp_REMOTE,             \/**< Remote Interface *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_RF_TEST	ptxStatus.h	/^    ptxStatus_Comp_RF_TEST,            \/**< RF-TEST Component *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_Reserved_01	ptxStatus.h	/^    ptxStatus_Comp_Reserved_01,        \/**< free *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_Reserved_02	ptxStatus.h	/^    ptxStatus_Comp_Reserved_02,        \/**< free *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_SUPPORT	ptxStatus.h	/^    ptxStatus_Comp_SUPPORT,            \/**< Internal Test Component *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_T2TOP	ptxStatus.h	/^    ptxStatus_Comp_T2TOP,              \/**< T2T Operation Component *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_T3TOP	ptxStatus.h	/^    ptxStatus_Comp_T3TOP,              \/**< T3T Operation Component *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_T4TOP	ptxStatus.h	/^    ptxStatus_Comp_T4TOP,              \/**< T4T Operation Component *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_T5TOP	ptxStatus.h	/^    ptxStatus_Comp_T5TOP,              \/**< T5T Operation Component *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_TCP	ptxStatus.h	/^    ptxStatus_Comp_TCP,                \/**< Tag Communication Protocol Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_WLCD	ptxStatus.h	/^    ptxStatus_Comp_WLCD,               \/**< Wireless Charger Listener Discrete Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_WLCD_PERIPH	ptxStatus.h	/^    ptxStatus_Comp_WLCD_PERIPH,        \/**< Wireless Charging Listener Discrete Peripherals Com/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_WLCE	ptxStatus.h	/^    ptxStatus_Comp_WLCE,               \/**< Wireless Charging Poller Exclusive Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_WLCE_ALPHA	ptxStatus.h	/^    ptxStatus_Comp_WLCE_ALPHA,         \/**< Wireless Charging Poller Exclusive Alpha Demo. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_WLCE_PERIPH	ptxStatus.h	/^    ptxStatus_Comp_WLCE_PERIPH,        \/**< Wireless Charging Poller Exclusive Peripherals Comp/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_WLCN	ptxStatus.h	/^    ptxStatus_Comp_WLCN,               \/**< Wireless Charging Poller NFC Forum Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_WLCN_PERIPH	ptxStatus.h	/^    ptxStatus_Comp_WLCN_PERIPH,        \/**< Wireless Charging Poller NFC Forum Peripherals Comp/;"	e	enum:ptxStatus_Comps
ptxStatus_Comp_WPT	ptxStatus.h	/^    ptxStatus_Comp_WPT,                \/**< Wireless Power Transfer Component. *\/$/;"	e	enum:ptxStatus_Comps
ptxStatus_Comps	ptxStatus.h	/^typedef enum ptxStatus_Comps$/;"	g
ptxStatus_Comps_t	ptxStatus.h	/^} ptxStatus_Comps_t;$/;"	t	typeref:enum:ptxStatus_Comps
ptxStatus_InsufficientResources	ptxStatus.h	/^    ptxStatus_InsufficientResources,\/**< Insufficient resources available to complete the reque/;"	e	enum:ptxStatus_Values
ptxStatus_InterfaceError	ptxStatus.h	/^    ptxStatus_InterfaceError,       \/**< The interface (I\/O line, UART, ...) is not accessible/;"	e	enum:ptxStatus_Values
ptxStatus_InternalError	ptxStatus.h	/^    ptxStatus_InternalError,        \/**< There has been internal error in the function processi/;"	e	enum:ptxStatus_Values
ptxStatus_InvalidParameter	ptxStatus.h	/^    ptxStatus_InvalidParameter,     \/**< The caller has provided invalid value(s) for function /;"	e	enum:ptxStatus_Values
ptxStatus_InvalidState	ptxStatus.h	/^    ptxStatus_InvalidState,         \/**< The component state is invalid or the operation reques/;"	e	enum:ptxStatus_Values
ptxStatus_MAX	ptxStatus.h	/^    ptxStatus_MAX                   \/**< Maximum count. *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_MFCC_AUTHENT_Failed	ptxStatus.h	/^    ptxStatus_MFCC_AUTHENT_Failed,  \/**< Authentication failed in MFCC-mode *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_MFCC_NAK_Received	ptxStatus.h	/^    ptxStatus_MFCC_NAK_Received,    \/**< NAK-received in MFCC-mode *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_NoDataAvailable	ptxStatus.h	/^    ptxStatus_NoDataAvailable,      \/**< Data or Event not available *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_NotFound	ptxStatus.h	/^    ptxStatus_NotFound,             \/**< Entry not found, e.g.: "No such file or directory". *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_NotImplemented	ptxStatus.h	/^    ptxStatus_NotImplemented,       \/**< The function\/command is not implemented. *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_NotPermitted	ptxStatus.h	/^    ptxStatus_NotPermitted,         \/**< The operation is not permitted. *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_NscProtocolError	ptxStatus.h	/^    ptxStatus_NscProtocolError,     \/**< Error at NSC protocol *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_NscRfError	ptxStatus.h	/^    ptxStatus_NscRfError,           \/**< RF-Error *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_ProtocolError	ptxStatus.h	/^    ptxStatus_ProtocolError,        \/**< General Protocol Error *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x03	ptxStatus.h	/^    ptxStatus_Reserved_0x03,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x07	ptxStatus.h	/^    ptxStatus_Reserved_0x07,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x0D	ptxStatus.h	/^    ptxStatus_Reserved_0x0D,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x0E	ptxStatus.h	/^    ptxStatus_Reserved_0x0E,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x0F	ptxStatus.h	/^    ptxStatus_Reserved_0x0F,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x10	ptxStatus.h	/^    ptxStatus_Reserved_0x10,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x12	ptxStatus.h	/^    ptxStatus_Reserved_0x12,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x1A	ptxStatus.h	/^    ptxStatus_Reserved_0x1A,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x1B	ptxStatus.h	/^    ptxStatus_Reserved_0x1B,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x1C	ptxStatus.h	/^    ptxStatus_Reserved_0x1C,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x1D	ptxStatus.h	/^    ptxStatus_Reserved_0x1D,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x1E	ptxStatus.h	/^    ptxStatus_Reserved_0x1E,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Reserved_0x1F	ptxStatus.h	/^    ptxStatus_Reserved_0x1F,        \/**< Don't use. Value reserved *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_ResourceNotFound	ptxStatus.h	/^    ptxStatus_ResourceNotFound,     \/**< Requested information or resource not available *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Success	ptxStatus.h	/^#define ptxStatus_Success /;"	d
ptxStatus_Success_Internal	ptxStatus.h	/^    ptxStatus_Success_Internal,     \/**< \\internal The operation completed successfully. Do no/;"	e	enum:ptxStatus_Values
ptxStatus_SysErrOvercurrent	ptxStatus.h	/^    ptxStatus_SysErrOvercurrent,    \/**< Critical system error: over-current. *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_SysErrOvertemperature	ptxStatus.h	/^    ptxStatus_SysErrOvertemperature,\/**< Critical system error: over-temperature. *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_T3T_WriteFlagSet	ptxStatus.h	/^    ptxStatus_T3T_WriteFlagSet,     \/**< Write flag set to ON while trying to read *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_TimeOut	ptxStatus.h	/^    ptxStatus_TimeOut,              \/**< The operation has timed out. *\/$/;"	e	enum:ptxStatus_Values
ptxStatus_Values	ptxStatus.h	/^typedef enum ptxStatus_Values$/;"	g
ptxStatus_Values_t	ptxStatus.h	/^} ptxStatus_Values_t;$/;"	t	typeref:enum:ptxStatus_Values
ptxStatus_t	ptxStatus.h	/^typedef uint16_t    ptxStatus_t;$/;"	t	typeref:typename:uint16_t
ptxT4T	COMMON/ptxT4T.h	/^typedef struct ptxT4T$/;"	s
ptxT4T_CheckID	COMMON/ptxT4T.c	/^static int ptxT4T_CheckID(const uint8_t *id1, uint8_t id1Len, const uint8_t *id2, uint8_t id2Len/;"	f	typeref:typename:int	file:
ptxT4T_DeInit	COMMON/ptxT4T.c	/^ptxStatus_t ptxT4T_DeInit (ptxT4T_t *t4tComp)$/;"	f	typeref:typename:ptxStatus_t
ptxT4T_Init	COMMON/ptxT4T.c	/^ptxStatus_t ptxT4T_Init (ptxT4T_t *t4tComp, ptxT4T_InitParams_t *initParams)$/;"	f	typeref:typename:ptxStatus_t
ptxT4T_InitParams	COMMON/ptxT4T.h	/^typedef struct ptxT4T_InitParams$/;"	s
ptxT4T_InitParams_t	COMMON/ptxT4T.h	/^}ptxT4T_InitParams_t;$/;"	t	typeref:struct:ptxT4T_InitParams
ptxT4T_Process	COMMON/ptxT4T.c	/^ptxStatus_t ptxT4T_Process(ptxT4T_t *t4tComp, uint8_t *rxData, uint8_t rxDataLen, uint8_t *txDat/;"	f	typeref:typename:ptxStatus_t
ptxT4T_Reset	COMMON/ptxT4T.c	/^ptxStatus_t ptxT4T_Reset (ptxT4T_t *t4tComp)$/;"	f	typeref:typename:ptxStatus_t
ptxT4T_SetStatusWord	COMMON/ptxT4T.c	/^static void ptxT4T_SetStatusWord(uint8_t *txData, uint16_t txDataOffset, uint16_t statusWord)$/;"	f	typeref:typename:void	file:
ptxT4T_State	COMMON/ptxT4T.h	/^typedef enum ptxT4T_State$/;"	g
ptxT4T_State_t	COMMON/ptxT4T.h	/^}ptxT4T_State_t;$/;"	t	typeref:enum:ptxT4T_State
ptxT4T_UpdateNDEFMessage	COMMON/ptxT4T.c	/^ptxStatus_t ptxT4T_UpdateNDEFMessage (ptxT4T_t *t4tComp, uint8_t *ndefMessage, uint16_t ndefMess/;"	f	typeref:typename:ptxStatus_t
ptxT4T_t	COMMON/ptxT4T.h	/^}ptxT4T_t;$/;"	t	typeref:struct:ptxT4T
ptx_InitStack_Params	COMMON/ptxCOMMON.h	/^typedef struct ptx_InitStack_Params$/;"	s
ptx_InitStack_Params_t	COMMON/ptxCOMMON.h	/^}ptx_InitStack_Params_t;$/;"	t	typeref:struct:ptx_InitStack_Params
ptx_InterfaceType	COMMON/ptxCOMMON.h	/^typedef enum ptx_InterfaceType$/;"	g
ptx_InterfaceType_t	COMMON/ptxCOMMON.h	/^}ptx_InterfaceType_t;$/;"	t	typeref:enum:ptx_InterfaceType
ptx_IntfType_I2c	COMMON/ptxCOMMON.h	/^    ptx_IntfType_I2c,$/;"	e	enum:ptx_InterfaceType
ptx_IntfType_None	COMMON/ptxCOMMON.h	/^    ptx_IntfType_None=0,$/;"	e	enum:ptx_InterfaceType
ptx_IntfType_Spi	COMMON/ptxCOMMON.h	/^    ptx_IntfType_Spi,$/;"	e	enum:ptx_InterfaceType
ptx_IntfType_TotalNumber	COMMON/ptxCOMMON.h	/^    ptx_IntfType_TotalNumber,$/;"	e	enum:ptx_InterfaceType
ptx_IntfType_Uart	COMMON/ptxCOMMON.h	/^    ptx_IntfType_Uart,$/;"	e	enum:ptx_InterfaceType
ptx_IntfType_Undefined	COMMON/ptxCOMMON.h	/^    ptx_IntfType_Undefined$/;"	e	enum:ptx_InterfaceType
rfResetFlag	IOT_READER/ptx_IOT_READER.h	/^        uint8_t                     rfResetFlag;                        \/**< Flag to be set at /;"	m	struct:ptxIoTRd	typeref:typename:uint8_t
spi_ctx	PLAT/Psoc/ptxPLAT_SPI.c	/^ptxPLAT_Spi_t spi_ctx;$/;"	v	typeref:typename:ptxPLAT_Spi_t
tResetDelayMS	COMMON/ptxCOMMON.h	/^    uint32_t tResetDelayMS;$/;"	m	struct:ptxCmdLineParameters	typeref:typename:uint32_t
tResetDelayMSPending	COMMON/ptxCOMMON.h	/^    uint8_t tResetDelayMSPending;$/;"	m	struct:ptxCmdLineParameters	typeref:typename:uint8_t
ticks	PLAT/Psoc/ptxPLAT_TIMER.c	/^unsigned long ticks;$/;"	v	typeref:typename:unsigned long
timerInit	PLAT/Psoc/ptxPLAT_TIMER.c	/^static bool timerInit = false;$/;"	v	typeref:typename:bool	file:
timer_ctx	PLAT/Psoc/ptxPLAT_TIMER.c	/^ptxPlatTimer_t timer_ctx;$/;"	v	typeref:typename:ptxPlatTimer_t
useNDEF	COMMON/ptxCOMMON.h	/^    uint8_t useNDEF;$/;"	m	struct:ptxCmdLineParameters	typeref:typename:uint8_t
